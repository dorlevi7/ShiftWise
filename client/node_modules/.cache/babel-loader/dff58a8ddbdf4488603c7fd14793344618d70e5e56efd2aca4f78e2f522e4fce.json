{"ast":null,"code":"var _jsxFileName = \"/Users/dorlevi/IdeaProjects/newShiftWise/client/src/components/ScheduleScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { getAllAvailabilities, getNecessaryEmployees, saveNecessaryEmployees, saveWeeklyShiftTargets, getWeeklyShiftTargets, fetchPublishStatus, savePublishStatus, saveEditStatus, fetchEditStatus } from '../services/availabilityService';\nimport { getUsers } from '../services/userService';\nimport { calculateWeekKey, calculateWeekRange, selectMorningOrNoonShift, selectNightShift, deselectMorningOrNoonShift, deselectNightShift, calculatePreviousDay, calculateNextDay, handleOtherShiftsOfDayWhenDeselectAShift } from '../utils/utils';\nimport { updateAvailabilityStatus } from '../services/availabilityService';\nimport Navbar from '../components/Navbar';\nimport '../styles/ScheduleScreen.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ScheduleScreen() {\n  _s();\n  const [availability, setAvailability] = useState({});\n  const [users, setUsers] = useState({});\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [weekOffset, setWeekOffset] = useState(0); // Offset לשבוע הנוכחי\n  const [currentCompany, setCurrentCompany] = useState(null);\n  const [weekDates, setWeekDates] = useState([]); // תאריכים לכל הימים בשבוע\n  const [highlightedUser, setHighlightedUser] = useState(null);\n  const [selectedUserNotes, setSelectedUserNotes] = useState('');\n  const [shiftCounts, setShiftCounts] = useState({});\n  const [necessaryEmployees, setNecessaryEmployees] = useState({});\n  const [weeklyShiftTargets, setWeeklyShiftTargets] = useState({});\n  const [totalNecessaryEmployees, setTotalNecessaryEmployees] = useState(0);\n  const [totalAssignedShifts, setTotalAssignedShifts] = useState(0);\n  const [totalWeeklyTargets, setTotalWeeklyTargets] = useState(0);\n  const [isPublished, setIsPublished] = useState(false);\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [isEditAllowed, setIsEditAllowed] = useState(false);\n  const [mostCriticalShifts, setMostCriticalShifts] = useState([]);\n  useEffect(() => {\n    const fetchAvailabilityAndUsers = async () => {\n      try {\n        var _loggedUser$company;\n        const loggedUser = JSON.parse(localStorage.getItem('user'));\n        const companyId = loggedUser === null || loggedUser === void 0 ? void 0 : (_loggedUser$company = loggedUser.company) === null || _loggedUser$company === void 0 ? void 0 : _loggedUser$company.id;\n        if (!companyId) {\n          setError('No company information found.');\n          return;\n        }\n        setCurrentCompany(companyId);\n        const weekKey = calculateWeekKey(weekOffset);\n\n        // שליפת כל הנתונים הדרושים\n        const [availabilityData, usersData, necessaryEmployeesData, weeklyTargetsData] = await Promise.all([getAllAvailabilities(companyId, weekKey), getUsers(), getNecessaryEmployees(companyId, weekKey), getWeeklyShiftTargets(companyId, weekKey) // קריאה לנתוני weeklyShiftTargets\n        ]);\n\n        // עדכון ה-states בהתאם לנתונים שהתקבלו מהשרת\n        setAvailability(availabilityData || {});\n        setUsers(usersData || {});\n        setNecessaryEmployees(necessaryEmployeesData || {});\n        calculateTotalNecessaryEmployees(necessaryEmployeesData || {});\n        console.log('usersData:', usersData);\n\n        // הגדרת ערכי ברירת מחדל ל-weeklyShiftTargets\n        const updatedWeeklyTargets = {\n          ...weeklyTargetsData\n        };\n        Object.values(usersData).forEach(user => {\n          // בדיקה אם user.id קיים\n          if (!(user !== null && user !== void 0 && user.id)) {\n            console.warn(\"User without ID found:\", user);\n            return; // דלג על משתמשים ללא ID\n          }\n          console.log(\"Valid user ID:\", user.id);\n          if (!updatedWeeklyTargets[user.id]) {\n            updatedWeeklyTargets[user.id] = 0; // ערך ברירת מחדל\n          }\n        });\n        setWeeklyShiftTargets(updatedWeeklyTargets);\n\n        // חישוב תאריכים לשבוע הנוכחי\n        const startOfWeek = new Date();\n        startOfWeek.setDate(startOfWeek.getDate() + weekOffset * 7 - startOfWeek.getDay());\n        const dates = Array.from({\n          length: 7\n        }, (_, i) => {\n          const date = new Date(startOfWeek);\n          date.setDate(startOfWeek.getDate() + i);\n          return date.toLocaleDateString('en-GB'); // פורמט DD/MM/YYYY\n        });\n        setWeekDates(dates);\n      } catch (err) {\n        setError('Failed to fetch data.');\n        console.error(err);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchAvailabilityAndUsers();\n  }, [weekOffset]);\n  const handleWeeklyShiftTargetChange = async (userId, value) => {\n    // הבטחת הערך המקסימלי ל-6\n    const parsedValue = Math.min(parseInt(value, 10) || 0, 6);\n\n    // בדיקה אם היעד החדש קטן ממספר המשמרות הנוכחי\n    if (parsedValue < shiftCounts[userId]) {\n      console.warn(`Cannot set target lower than current shifts (${shiftCounts[userId]} shifts for user ${userId}).`);\n      return; // עצירת השינוי\n    }\n\n    // עדכון היעדים השבועיים\n    const updatedTargets = {\n      ...weeklyShiftTargets,\n      [userId]: parsedValue\n    };\n    setWeeklyShiftTargets(updatedTargets);\n\n    // עדכון הסכום הכולל של היעדים השבועיים\n    const total = Object.values(updatedTargets).reduce((sum, target) => sum + (target || 0), 0);\n    setTotalWeeklyTargets(total);\n    console.log(\"Updated weeklyShiftTargets:\", updatedTargets);\n    console.log(\"Total Weekly Targets:\", total);\n\n    // סינון המידע לפני שמירתו ל-DB\n    const cleanedTargets = Object.fromEntries(Object.entries(updatedTargets).filter(([key]) => key !== 'necessaryEmployees') // סינון המפתח הלא רצוי\n    );\n\n    // שמירת הערך ל-DB\n    try {\n      const weekKey = calculateWeekKey(weekOffset);\n      await saveWeeklyShiftTargets(currentCompany, weekKey, cleanedTargets);\n    } catch (error) {\n      console.error('Failed to save weekly shift targets:', error);\n    }\n  };\n  const handleWeekChange = direction => {\n    setWeekOffset(prevOffset => prevOffset + direction);\n  };\n  const getStatusClass = (status, userId, shift, day) => {\n    var _necessaryEmployees$d;\n    const selectedEmployeesCount = Object.entries(availability).filter(([_, userData]) => {\n      var _userData$shift;\n      const availabilityInfo = userData === null || userData === void 0 ? void 0 : (_userData$shift = userData[shift]) === null || _userData$shift === void 0 ? void 0 : _userData$shift[day];\n      return (availabilityInfo === null || availabilityInfo === void 0 ? void 0 : availabilityInfo.status) === 'selected';\n    }).length;\n    const maxNecessaryEmployees = (necessaryEmployees === null || necessaryEmployees === void 0 ? void 0 : (_necessaryEmployees$d = necessaryEmployees[day]) === null || _necessaryEmployees$d === void 0 ? void 0 : _necessaryEmployees$d[shift]) || 0;\n\n    // אם מספר העובדים הנבחרים שווה או גדול מהנדרש למשמרת\n    if (status === 'default' && selectedEmployeesCount >= maxNecessaryEmployees) {\n      return highlightedUser === userId ? 'status-disabled highlighted-user' : 'status-disabled'; // הדגשה אם העובד נבחר\n    }\n\n    // בדיקת מספר המשמרות שכבר נבחרו עבור העובד מול היעד השבועי\n    const currentShiftCount = shiftCounts[userId] || 0;\n    const maxShiftsAllowed = weeklyShiftTargets[userId] || 0;\n\n    // אם העובד הגיע למכסת המשמרות השבועיות שהוגדרו לו\n    if (status === 'default' && currentShiftCount >= maxShiftsAllowed) {\n      return highlightedUser === userId ? 'status-disabled highlighted-user' : 'status-disabled'; // הדגשה אם העובד נבחר\n    }\n\n    // **הוספת הדגשה תמידית למשתמש שנבחר**\n    if (highlightedUser === userId) {\n      return status === 'disabled' ? 'status-disabled highlighted-user' : `highlighted-user ${status}`;\n    }\n\n    // שאר הלוגיקה הקיימת\n    if (shiftCounts[userId] >= weeklyShiftTargets[userId]) return 'status-disabled'; // הכפתורים יהיו חסומים אם היעד השבועי הושג\n    switch (status) {\n      case 'selected':\n        return 'status-selected';\n      case 'disabled':\n        return 'status-disabled';\n      case 'default':\n      default:\n        return 'status-default';\n    }\n  };\n  const handleEmployeeClick = async userId => {\n    if (highlightedUser === userId) {\n      setHighlightedUser(null);\n      setSelectedUserNotes(''); // איפוס הערות כאשר לוחצים שוב\n      return;\n    }\n\n    // איפוס ההערות לפני שליפת ההערות החדשות\n    setSelectedUserNotes('');\n    setHighlightedUser(userId);\n    if (currentCompany && userId) {\n      try {\n        var _availabilityData$use;\n        const weekKey = calculateWeekKey(weekOffset);\n        const availabilityData = await getAllAvailabilities(currentCompany, weekKey);\n        const userNotes = (availabilityData === null || availabilityData === void 0 ? void 0 : (_availabilityData$use = availabilityData[userId]) === null || _availabilityData$use === void 0 ? void 0 : _availabilityData$use.notes) || 'No notes available.';\n        setSelectedUserNotes(userNotes);\n      } catch (err) {\n        console.error('Failed to fetch notes:', err);\n        setSelectedUserNotes('Error fetching notes.');\n      }\n    }\n  };\n  useEffect(() => {\n    if (Object.keys(availability).length > 0) {\n      updateShiftCounts();\n    }\n  }, [availability]);\n  const updateShiftCounts = () => {\n    const counts = {};\n    let totalShifts = 0; // משתנה לספירת המשמרות הכוללות שהוקצו\n\n    Object.entries(availability).forEach(([userId, shifts]) => {\n      const userShiftCount = Object.values(shifts).reduce((sum, dayShifts) => sum + Object.values(dayShifts).filter(shift => shift.status === 'selected').length, 0);\n      counts[userId] = userShiftCount;\n      totalShifts += userShiftCount; // הוספה למספר הכולל\n    });\n    setShiftCounts(counts);\n    setTotalAssignedShifts(totalShifts); // עדכון state של סך כל המשמרות\n  };\n  useEffect(() => {\n    const saveNecessaryEmployeesToDB = async () => {\n      try {\n        const weekKey = calculateWeekKey(weekOffset);\n\n        // שמירת necessaryEmployees ל-DB\n        if (Object.keys(necessaryEmployees).length > 0) {\n          await saveNecessaryEmployees(currentCompany, weekKey, necessaryEmployees);\n        }\n      } catch (error) {\n        console.error('Failed to save necessary employees:', error);\n      }\n    };\n\n    // נוודא שאנו שומרים רק אם מדובר בעדכון אמיתי ולא מעבר שבוע\n    if (!isLoading && Object.keys(necessaryEmployees).length > 0) {\n      saveNecessaryEmployeesToDB();\n    }\n  }, [necessaryEmployees, currentCompany]);\n  const handleStatusUpdate = async (userId, shift, day, currentStatus) => {\n    var _necessaryEmployees$d2;\n    // בדיקת מספר העובדים הנבחרים למשמרת הנוכחית מול העובדים הנדרשים\n    const selectedEmployeesCount = Object.entries(availability).filter(([_, userData]) => {\n      var _userData$shift2;\n      const availabilityInfo = userData === null || userData === void 0 ? void 0 : (_userData$shift2 = userData[shift]) === null || _userData$shift2 === void 0 ? void 0 : _userData$shift2[day];\n      return (availabilityInfo === null || availabilityInfo === void 0 ? void 0 : availabilityInfo.status) === 'selected';\n    }).length;\n    const maxNecessaryEmployees = (necessaryEmployees === null || necessaryEmployees === void 0 ? void 0 : (_necessaryEmployees$d2 = necessaryEmployees[day]) === null || _necessaryEmployees$d2 === void 0 ? void 0 : _necessaryEmployees$d2[shift]) || 0;\n\n    // אם מספר העובדים הנבחרים שווה או גדול מהנדרש, למנוע בחירה נוספת\n    if (currentStatus === 'default' && selectedEmployeesCount >= maxNecessaryEmployees) {\n      console.warn(`Cannot select more employees for ${shift} on ${day}, as the necessary employees limit (${maxNecessaryEmployees}) is reached.`);\n      return;\n    }\n\n    // בדיקת מספר המשמרות שכבר נבחרו עבור העובד מול היעד השבועי\n    const currentShiftCount = shiftCounts[userId] || 0;\n    const maxShiftsAllowed = weeklyShiftTargets[userId] || 0;\n\n    // אם העובד הגיע למספר המשמרות המקסימלי, למנוע בחירה נוספת\n    if (currentStatus === 'default' && currentShiftCount >= maxShiftsAllowed) {\n      console.warn(`User ${userId} has reached the maximum number of shifts (${maxShiftsAllowed}).`);\n      return;\n    }\n\n    // המשך עדכון סטטוס\n    if (currentStatus === 'disabled') return; // Disable click for disabled status\n\n    try {\n      const weekKey = calculateWeekKey(weekOffset);\n      const newStatus = currentStatus === 'default' ? 'selected' : 'default';\n      const updatedAvailability = {\n        ...availability\n      };\n\n      // Update the current shift's status to 'selected' or 'default'\n      updatedAvailability[userId][shift][day].status = newStatus;\n      await updateAvailabilityStatus(currentCompany, weekKey, userId, shift, day, newStatus);\n      if (newStatus === 'selected') {\n        // Disable other shifts on the same day\n        for (const otherShift of ['Morning', 'Noon', 'Evening', 'Night']) {\n          if (otherShift !== shift) {\n            updatedAvailability[userId][otherShift][day].status = 'disabled';\n            await updateAvailabilityStatus(currentCompany, weekKey, userId, otherShift, day, 'disabled');\n          }\n        }\n\n        // Handle unique rules for specific shifts\n        if (shift === 'Morning' || shift === 'Noon') {\n          await selectMorningOrNoonShift(userId, day, updatedAvailability, weekKey, weekOffset, currentCompany);\n        } else if (shift === 'Night') {\n          await selectNightShift(userId, day, updatedAvailability, weekKey, weekOffset, currentCompany);\n        }\n      } else {\n        // Undo selection and revert unique rules\n        await handleOtherShiftsOfDayWhenDeselectAShift(userId, day, shift, updatedAvailability, weekKey, currentCompany);\n\n        // Revert unique rules for specific shifts\n        if (shift === 'Morning' || shift === 'Noon') {\n          await deselectMorningOrNoonShift(userId, day, updatedAvailability, weekKey, currentCompany);\n        } else if (shift === 'Night') {\n          await deselectNightShift(userId, day, updatedAvailability, weekKey, weekOffset, currentCompany);\n        }\n      }\n\n      // Update state with the modified availability\n      setAvailability(updatedAvailability);\n\n      // עדכון ה-counts והכפתורים\n      updateShiftCounts();\n    } catch (error) {\n      console.error('Failed to update status:', error);\n    }\n  };\n  const employeesWithAvailability = Object.entries(users).filter(([userId]) => availability[userId] && Object.values(availability[userId]).some(shifts => Object.values(shifts).some(shift => shift.status === 'selected' || shift.status === 'default'))).sort(([userIdA], [userIdB]) => {\n    var _users$userIdA, _users$userIdA$name, _users$userIdB, _users$userIdB$name;\n    const nameA = ((_users$userIdA = users[userIdA]) === null || _users$userIdA === void 0 ? void 0 : (_users$userIdA$name = _users$userIdA.name) === null || _users$userIdA$name === void 0 ? void 0 : _users$userIdA$name.toLowerCase()) || '';\n    const nameB = ((_users$userIdB = users[userIdB]) === null || _users$userIdB === void 0 ? void 0 : (_users$userIdB$name = _users$userIdB.name) === null || _users$userIdB$name === void 0 ? void 0 : _users$userIdB$name.toLowerCase()) || '';\n    return nameA.localeCompare(nameB); // מיון אלפביתי לפי שם\n  });\n  const handleNecessaryEmployeesChange = (day, shift, value) => {\n    const updatedNecessaryEmployees = {\n      ...necessaryEmployees\n    };\n    if (!updatedNecessaryEmployees[day]) {\n      updatedNecessaryEmployees[day] = {};\n    }\n    const parsedValue = parseInt(value, 10) || 0;\n\n    // בדיקת מספר העובדים שכבר נבחרו למשמרת\n    const selectedEmployeesCount = Object.entries(availability).filter(([_, userData]) => {\n      var _userData$shift3;\n      const availabilityInfo = userData === null || userData === void 0 ? void 0 : (_userData$shift3 = userData[shift]) === null || _userData$shift3 === void 0 ? void 0 : _userData$shift3[day];\n      return (availabilityInfo === null || availabilityInfo === void 0 ? void 0 : availabilityInfo.status) === 'selected';\n    }).length;\n\n    // אם הערך החדש קטן ממספר העובדים שנבחרו, למנוע שינוי\n    if (parsedValue < selectedEmployeesCount) {\n      return; // עצירת השינוי\n    }\n\n    // עדכון הערך החדש אם הוא חוקי\n    updatedNecessaryEmployees[day][shift] = parsedValue;\n    setNecessaryEmployees(updatedNecessaryEmployees);\n    calculateTotalNecessaryEmployees(updatedNecessaryEmployees);\n\n    // שמירה ל-DB כאשר הערך משתנה\n    const saveToDB = async () => {\n      try {\n        const weekKey = calculateWeekKey(weekOffset);\n        await saveNecessaryEmployees(currentCompany, weekKey, updatedNecessaryEmployees);\n      } catch (error) {\n        console.error('Failed to save necessary employees:', error);\n      }\n    };\n    saveToDB();\n  };\n  const calculateTotalNecessaryEmployees = necessaryEmployeesData => {\n    let total = 0;\n    Object.values(necessaryEmployeesData).forEach(dayData => {\n      Object.values(dayData).forEach(shiftCount => {\n        total += shiftCount || 0;\n      });\n    });\n    setTotalNecessaryEmployees(total);\n  };\n  const calculateTotalAssignedShifts = shiftCounts => {\n    const total = Object.values(shiftCounts).reduce((sum, count) => sum + count, 0);\n    setTotalAssignedShifts(total);\n  };\n  useEffect(() => {\n    const total = Object.values(weeklyShiftTargets).reduce((sum, target) => sum + (target || 0), 0);\n    setTotalWeeklyTargets(total);\n  }, [weeklyShiftTargets]);\n  const togglePublishStatus = async () => {\n    if (!isPublished && !isScheduleFullyStaffed()) {\n      alert('Cannot publish schedule: not all shifts are fully staffed.');\n      return;\n    }\n    try {\n      const newStatus = !isPublished;\n      const weekKey = calculateWeekKey(weekOffset);\n\n      // עדכון הסטטוס ב-DB\n      await savePublishStatus(currentCompany, weekKey, newStatus);\n\n      // עדכון ה-UI\n      setIsPublished(newStatus);\n    } catch (error) {\n      console.error('Failed to toggle publish status:', error);\n    }\n  };\n  useEffect(() => {\n    const fetchPublishStatusFromDB = async () => {\n      try {\n        var _status$status;\n        const weekKey = calculateWeekKey(weekOffset);\n        const status = await fetchPublishStatus(currentCompany, weekKey);\n\n        // וודא שהסטטוס מוחזר במבנה נכון\n        console.log('Publish Status from DB:', weekKey, \"    +    \", status);\n\n        // השתמש בערך שבתוך המפתח 'status' ולא באובייקט כולו\n        setIsPublished((_status$status = status === null || status === void 0 ? void 0 : status.status) !== null && _status$status !== void 0 ? _status$status : false); // True or False\n      } catch (error) {\n        console.error('Failed to fetch publish status:', error);\n      }\n    };\n    if (currentCompany) {\n      fetchPublishStatusFromDB();\n    }\n  }, [currentCompany, weekOffset]);\n  const isScheduleFullyStaffed = () => {\n    for (const day of Object.keys(necessaryEmployees || {})) {\n      for (const shift of Object.keys(necessaryEmployees[day] || {})) {\n        const requiredCount = necessaryEmployees[day][shift] || 0;\n        const selectedCount = Object.entries(availability).filter(([_, userData]) => {\n          var _userData$shift4;\n          const availabilityInfo = userData === null || userData === void 0 ? void 0 : (_userData$shift4 = userData[shift]) === null || _userData$shift4 === void 0 ? void 0 : _userData$shift4[day];\n          return (availabilityInfo === null || availabilityInfo === void 0 ? void 0 : availabilityInfo.status) === 'selected';\n        }).length;\n        if (selectedCount !== requiredCount) {\n          return false; // לפחות משמרת אחת אינה מלאה\n        }\n      }\n    }\n    return true; // כל המשמרות מלאות\n  };\n  const isPublishButtonDisabled = !isScheduleFullyStaffed() && !isPublished;\n  const hasWeeklyNotes = userId => {\n    const userAvailability = availability[userId];\n    return userAvailability && userAvailability.notes && userAvailability.notes.trim() !== '';\n  };\n  useEffect(() => {\n    const loggedUser = JSON.parse(localStorage.getItem('user'));\n    setIsAdmin((loggedUser === null || loggedUser === void 0 ? void 0 : loggedUser.user.role) === 'admin'); // בדיקה אם המשתמש הוא admin\n  }, []);\n  const toggleEditStatus = async () => {\n    try {\n      const newStatus = !isEditAllowed;\n      const weekKey = calculateWeekKey(weekOffset);\n\n      // שמירת הסטטוס לשרת\n      await saveEditStatus(currentCompany, weekKey, newStatus);\n\n      // עדכון ה-UI\n      setIsEditAllowed(newStatus);\n    } catch (error) {\n      console.error('Failed to toggle edit status:', error);\n    }\n  };\n  useEffect(() => {\n    const fetchEditStatusFromDB = async () => {\n      try {\n        var _status$isEditAllowed;\n        const weekKey = calculateWeekKey(weekOffset);\n        const status = await fetchEditStatus(currentCompany, weekKey);\n\n        // עדכון המצב\n        setIsEditAllowed((_status$isEditAllowed = status === null || status === void 0 ? void 0 : status.isEditAllowed) !== null && _status$isEditAllowed !== void 0 ? _status$isEditAllowed : false); // ברירת מחדל ל-false אם אין מידע\n      } catch (error) {\n        console.error('Failed to fetch edit status:', error);\n      }\n    };\n    if (currentCompany) {\n      fetchEditStatusFromDB();\n    }\n  }, [currentCompany, weekOffset]);\n  const calculateShiftCriticality = (day, shift) => {\n    var _necessaryEmployees$d3;\n    const necessary = (necessaryEmployees === null || necessaryEmployees === void 0 ? void 0 : (_necessaryEmployees$d3 = necessaryEmployees[day]) === null || _necessaryEmployees$d3 === void 0 ? void 0 : _necessaryEmployees$d3[shift]) || 0;\n    const selected = Object.values(availability).filter(userData => {\n      var _userData$shift5, _userData$shift5$day;\n      return (userData === null || userData === void 0 ? void 0 : (_userData$shift5 = userData[shift]) === null || _userData$shift5 === void 0 ? void 0 : (_userData$shift5$day = _userData$shift5[day]) === null || _userData$shift5$day === void 0 ? void 0 : _userData$shift5$day.status) === 'selected';\n    }).length;\n    const defaults = Object.values(availability).filter(userData => {\n      var _userData$shift6, _userData$shift6$day;\n      return (userData === null || userData === void 0 ? void 0 : (_userData$shift6 = userData[shift]) === null || _userData$shift6 === void 0 ? void 0 : (_userData$shift6$day = _userData$shift6[day]) === null || _userData$shift6$day === void 0 ? void 0 : _userData$shift6$day.status) === 'default';\n    }).length;\n\n    // אם המשמרת מלאה, הקריטיות תהיה 0\n    if (necessary === selected) {\n      return 0;\n    }\n    return (necessary - selected) / Math.pow(defaults + 1, 2);\n  };\n  const findMostCriticalShifts = () => {\n    let highestCriticality = -Infinity;\n    let criticalShifts = [];\n    Object.keys(necessaryEmployees || {}).forEach(day => {\n      Object.keys(necessaryEmployees[day] || {}).forEach(shift => {\n        var _necessaryEmployees$d4;\n        const criticality = calculateShiftCriticality(day, shift);\n        const necessary = (necessaryEmployees === null || necessaryEmployees === void 0 ? void 0 : (_necessaryEmployees$d4 = necessaryEmployees[day]) === null || _necessaryEmployees$d4 === void 0 ? void 0 : _necessaryEmployees$d4[shift]) || 0;\n        const selected = Object.values(availability).filter(userData => {\n          var _userData$shift7, _userData$shift7$day;\n          return (userData === null || userData === void 0 ? void 0 : (_userData$shift7 = userData[shift]) === null || _userData$shift7 === void 0 ? void 0 : (_userData$shift7$day = _userData$shift7[day]) === null || _userData$shift7$day === void 0 ? void 0 : _userData$shift7$day.status) === 'selected';\n        }).length;\n\n        // 🎯 וידוא שמשמרות מלאות לא ייכנסו לרשימה\n        if (necessary === selected) return;\n        if (criticality > highestCriticality) {\n          highestCriticality = criticality;\n          criticalShifts = [{\n            day,\n            shift\n          }];\n        } else if (criticality === highestCriticality && criticality > 0) {\n          criticalShifts.push({\n            day,\n            shift\n          });\n        }\n      });\n    });\n    return criticalShifts;\n  };\n  useEffect(() => {\n    setMostCriticalShifts(findMostCriticalShifts());\n  }, [necessaryEmployees, availability]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 555,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navbar-placeholder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 556,\n      columnNumber: 13\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"schedule-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Weekly Schedule\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 559,\n        columnNumber: 17\n      }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading schedule...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 563,\n        columnNumber: 21\n      }, this) : error ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 565,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: isAdmin ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"schedule-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"schedule-table\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Shift\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 574,\n                  columnNumber: 45\n                }, this), ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'].map((day, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: [day, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 578,\n                    columnNumber: 63\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"date\",\n                    children: weekDates[index]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 579,\n                    columnNumber: 57\n                  }, this)]\n                }, day, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 577,\n                  columnNumber: 53\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 573,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 572,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: ['Morning', 'Noon', 'Evening', 'Night'].map(shift => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: shift\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 588,\n                  columnNumber: 49\n                }, this), ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'].map(day => {\n                  var _necessaryEmployees$d5, _necessaryEmployees$d6;\n                  const selectedEmployeesCount = Object.entries(availability).filter(([userId, userData]) => {\n                    var _userData$shift8;\n                    const availabilityInfo = userData === null || userData === void 0 ? void 0 : (_userData$shift8 = userData[shift]) === null || _userData$shift8 === void 0 ? void 0 : _userData$shift8[day];\n                    return (availabilityInfo === null || availabilityInfo === void 0 ? void 0 : availabilityInfo.status) === 'selected';\n                  }).length;\n                  const isFullyStaffed = selectedEmployeesCount === ((necessaryEmployees === null || necessaryEmployees === void 0 ? void 0 : (_necessaryEmployees$d5 = necessaryEmployees[day]) === null || _necessaryEmployees$d5 === void 0 ? void 0 : _necessaryEmployees$d5[shift]) || 0);\n                  return /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: `schedule-cell ${isFullyStaffed ? 'fully-staffed' : ''} \n                                                            ${mostCriticalShifts.some(criticalShift => criticalShift.day === day && criticalShift.shift === shift) ? 'most-critical' : ''}`,\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"number\",\n                      min: \"0\",\n                      className: \"necessary-employees-input\",\n                      value: (necessaryEmployees === null || necessaryEmployees === void 0 ? void 0 : (_necessaryEmployees$d6 = necessaryEmployees[day]) === null || _necessaryEmployees$d6 === void 0 ? void 0 : _necessaryEmployees$d6[shift]) || 0,\n                      onChange: e => handleNecessaryEmployeesChange(day, shift, e.target.value)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 606,\n                      columnNumber: 61\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"selected-employees-indicator\",\n                      children: [selectedEmployeesCount, \" Selected\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 615,\n                      columnNumber: 61\n                    }, this), Object.entries(availability).filter(([userId, userData]) => {\n                      var _userData$shift9;\n                      const availabilityInfo = userData === null || userData === void 0 ? void 0 : (_userData$shift9 = userData[shift]) === null || _userData$shift9 === void 0 ? void 0 : _userData$shift9[day];\n                      return availabilityInfo === null || availabilityInfo === void 0 ? void 0 : availabilityInfo.isAvailable; // רק עובדים זמינים\n                    }).sort(([userIdA], [userIdB]) => {\n                      var _users$userIdA2, _users$userIdB2;\n                      const nameA = ((_users$userIdA2 = users[userIdA]) === null || _users$userIdA2 === void 0 ? void 0 : _users$userIdA2.name) || '';\n                      const nameB = ((_users$userIdB2 = users[userIdB]) === null || _users$userIdB2 === void 0 ? void 0 : _users$userIdB2.name) || '';\n                      return nameA.localeCompare(nameB); // מיון אלפביתי לפי שם\n                    }).map(([userId, userData]) => {\n                      var _userData$shift10, _users$userId;\n                      const availabilityInfo = userData === null || userData === void 0 ? void 0 : (_userData$shift10 = userData[shift]) === null || _userData$shift10 === void 0 ? void 0 : _userData$shift10[day];\n                      const statusClass = getStatusClass(availabilityInfo.status, userId);\n                      return /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: `availability-entry ${statusClass}`,\n                        onClick: () => handleStatusUpdate(userId, shift, day, availabilityInfo.status),\n                        style: {\n                          backgroundColor: availabilityInfo.status === 'selected' ? '#2ecc71' : availabilityInfo.status === 'disabled' ? '#e74c3c' : '#ffff',\n                          color: availabilityInfo.status === 'disabled' ? 'white' : '#2c3e50',\n                          pointerEvents: availabilityInfo.status === 'disabled' ? 'none' : 'auto',\n                          cursor: availabilityInfo.status === 'disabled' ? 'not-allowed' : 'pointer'\n                        },\n                        children: ((_users$userId = users[userId]) === null || _users$userId === void 0 ? void 0 : _users$userId.name) || 'Unknown'\n                      }, userId, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 634,\n                        columnNumber: 73\n                      }, this);\n                    })]\n                  }, day, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 598,\n                    columnNumber: 57\n                  }, this);\n                })]\n              }, shift, true, {\n                fileName: _jsxFileName,\n                lineNumber: 587,\n                columnNumber: 45\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 585,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 571,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"employees-list\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Employees\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 671,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"week-navigation\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"week-nav-button\",\n                onClick: () => handleWeekChange(-1),\n                children: /*#__PURE__*/_jsxDEV(FaChevronLeft, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 675,\n                  columnNumber: 53\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 674,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"week-range\",\n                children: calculateWeekRange(weekOffset)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 677,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"week-nav-button\",\n                onClick: () => handleWeekChange(1),\n                children: /*#__PURE__*/_jsxDEV(FaChevronRight, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 679,\n                  columnNumber: 53\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 678,\n                columnNumber: 49\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 673,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"buttons-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: `general-button ${isPublished ? 'green' : 'red'}`,\n                onClick: togglePublishStatus,\n                disabled: isPublishButtonDisabled,\n                children: isPublished ? 'Unpublish Schedule' : 'Publish Schedule'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 684,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: `general-button ${isEditAllowed ? 'green' : 'red'}`,\n                onClick: toggleEditStatus,\n                children: isEditAllowed ? 'Disable Editing' : 'Enable Editing'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 691,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 683,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"total-info-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Weekly Overview\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 701,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 702,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Weekly Staff: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: totalNecessaryEmployees\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 703,\n                  columnNumber: 58\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 703,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 704,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Weekly Shift Targets: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: totalWeeklyTargets\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 705,\n                  columnNumber: 66\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 705,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 706,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Assigned Shifts: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: totalAssignedShifts\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 707,\n                  columnNumber: 61\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 707,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 708,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 700,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: employeesWithAvailability.map(([userId, user]) => {\n                const isTargetMet = weeklyShiftTargets[userId] === shiftCounts[userId]; // בדיקה אם היעד הושג\n                const hasNotes = hasWeeklyNotes(userId); // בדיקה אם יש הערות לעובד זה\n                const backgroundColor = hasNotes ? 'yellow' : '#2980b9'; // צהוב אם יש הערות, כחול אם אין\n                const textColor = hasNotes ? 'black' : 'white'; // טקסט שחור אם צהוב, לבן אם כחול\n\n                return /*#__PURE__*/_jsxDEV(\"li\", {\n                  onClick: () => handleEmployeeClick(userId),\n                  className: `${highlightedUser === userId ? 'selected' : ''} ${isTargetMet ? 'target-met' : ''}`,\n                  style: {\n                    backgroundColor: isTargetMet ? '#d4edda' : 'inherit' // צבע רקע ירוק בהיר אם היעד הושג\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"employee-details\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"notes-indicator\",\n                      style: {\n                        backgroundColor: backgroundColor,\n                        color: textColor // צבע הטקסט לפי צבע הרקע\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"indicator-text\",\n                        children: \"i\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 738,\n                        columnNumber: 61\n                      }, this), \" \"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 731,\n                      columnNumber: 57\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"employee-name\",\n                      children: user.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 741,\n                      columnNumber: 57\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"weekly-shift-target\",\n                      children: /*#__PURE__*/_jsxDEV(\"label\", {\n                        children: [shiftCounts[userId] || 0, \" shifts out of:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                          type: \"number\",\n                          min: \"0\",\n                          max: \"6\" // הגבלה ברמת ה-UI\n                          ,\n                          value: weeklyShiftTargets[userId] || 0,\n                          onClick: e => e.stopPropagation() // עצירת האירוע\n                          ,\n                          onChange: e => handleWeeklyShiftTargetChange(userId, e.target.value),\n                          className: \"weekly-shift-input\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 749,\n                          columnNumber: 65\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 747,\n                        columnNumber: 61\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 746,\n                      columnNumber: 57\n                    }, this), highlightedUser === userId && selectedUserNotes && selectedUserNotes !== 'No notes available.' && /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"employee-notes\",\n                      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                        children: \"Notes:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 763,\n                        columnNumber: 65\n                      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                        children: selectedUserNotes\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 764,\n                        columnNumber: 65\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 762,\n                      columnNumber: 61\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 728,\n                    columnNumber: 53\n                  }, this)\n                }, userId, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 720,\n                  columnNumber: 49\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 712,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 670,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 570,\n          columnNumber: 29\n        }, this) : isPublished ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"schedule-content\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"schedule-table\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Shift\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 782,\n                  columnNumber: 49\n                }, this), ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'].map((day, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: [day, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 786,\n                    columnNumber: 67\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"date\",\n                    children: weekDates[index]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 787,\n                    columnNumber: 61\n                  }, this)]\n                }, day, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 785,\n                  columnNumber: 57\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 781,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 780,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: ['Morning', 'Noon', 'Evening', 'Night'].map(shift => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: shift\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 796,\n                  columnNumber: 53\n                }, this), ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'].map(day => {\n                  const selectedEmployees = Object.entries(availability).filter(([userId, userData]) => {\n                    var _userData$shift11;\n                    const availabilityInfo = userData === null || userData === void 0 ? void 0 : (_userData$shift11 = userData[shift]) === null || _userData$shift11 === void 0 ? void 0 : _userData$shift11[day];\n                    return (availabilityInfo === null || availabilityInfo === void 0 ? void 0 : availabilityInfo.status) === 'selected';\n                  });\n                  return /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"schedule-cell\",\n                    children: selectedEmployees.sort(([userIdA], [userIdB]) => {\n                      var _users$userIdA3, _users$userIdA3$name, _users$userIdB3, _users$userIdB3$name;\n                      const nameA = ((_users$userIdA3 = users[userIdA]) === null || _users$userIdA3 === void 0 ? void 0 : (_users$userIdA3$name = _users$userIdA3.name) === null || _users$userIdA3$name === void 0 ? void 0 : _users$userIdA3$name.toLowerCase()) || '';\n                      const nameB = ((_users$userIdB3 = users[userIdB]) === null || _users$userIdB3 === void 0 ? void 0 : (_users$userIdB3$name = _users$userIdB3.name) === null || _users$userIdB3$name === void 0 ? void 0 : _users$userIdB3$name.toLowerCase()) || '';\n                      return nameA.localeCompare(nameB); // מיון אלפביתי לפי שם\n                    }).map(([userId]) => {\n                      var _users$userId2;\n                      return /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"employee-button\",\n                        children: ((_users$userId2 = users[userId]) === null || _users$userId2 === void 0 ? void 0 : _users$userId2.name) || 'Unknown'\n                      }, userId, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 813,\n                        columnNumber: 73\n                      }, this);\n                    })\n                  }, day, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 804,\n                    columnNumber: 61\n                  }, this);\n                })]\n              }, shift, true, {\n                fileName: _jsxFileName,\n                lineNumber: 795,\n                columnNumber: 49\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 793,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 779,\n            columnNumber: 37\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 777,\n          columnNumber: 33\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"no-schedule-message\",\n          children: \"No published schedule is available for this week.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 827,\n          columnNumber: 33\n        }, this)\n      }, void 0, false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 558,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 554,\n    columnNumber: 9\n  }, this);\n}\n_s(ScheduleScreen, \"yQxGfCqD9xv3ui3zD4RMXohq10w=\");\n_c = ScheduleScreen;\nexport default ScheduleScreen;\nvar _c;\n$RefreshReg$(_c, \"ScheduleScreen\");","map":{"version":3,"names":["React","useState","useEffect","getAllAvailabilities","getNecessaryEmployees","saveNecessaryEmployees","saveWeeklyShiftTargets","getWeeklyShiftTargets","fetchPublishStatus","savePublishStatus","saveEditStatus","fetchEditStatus","getUsers","calculateWeekKey","calculateWeekRange","selectMorningOrNoonShift","selectNightShift","deselectMorningOrNoonShift","deselectNightShift","calculatePreviousDay","calculateNextDay","handleOtherShiftsOfDayWhenDeselectAShift","updateAvailabilityStatus","Navbar","jsxDEV","_jsxDEV","Fragment","_Fragment","ScheduleScreen","_s","availability","setAvailability","users","setUsers","isLoading","setIsLoading","error","setError","weekOffset","setWeekOffset","currentCompany","setCurrentCompany","weekDates","setWeekDates","highlightedUser","setHighlightedUser","selectedUserNotes","setSelectedUserNotes","shiftCounts","setShiftCounts","necessaryEmployees","setNecessaryEmployees","weeklyShiftTargets","setWeeklyShiftTargets","totalNecessaryEmployees","setTotalNecessaryEmployees","totalAssignedShifts","setTotalAssignedShifts","totalWeeklyTargets","setTotalWeeklyTargets","isPublished","setIsPublished","isAdmin","setIsAdmin","isEditAllowed","setIsEditAllowed","mostCriticalShifts","setMostCriticalShifts","fetchAvailabilityAndUsers","_loggedUser$company","loggedUser","JSON","parse","localStorage","getItem","companyId","company","id","weekKey","availabilityData","usersData","necessaryEmployeesData","weeklyTargetsData","Promise","all","calculateTotalNecessaryEmployees","console","log","updatedWeeklyTargets","Object","values","forEach","user","warn","startOfWeek","Date","setDate","getDate","getDay","dates","Array","from","length","_","i","date","toLocaleDateString","err","handleWeeklyShiftTargetChange","userId","value","parsedValue","Math","min","parseInt","updatedTargets","total","reduce","sum","target","cleanedTargets","fromEntries","entries","filter","key","handleWeekChange","direction","prevOffset","getStatusClass","status","shift","day","_necessaryEmployees$d","selectedEmployeesCount","userData","_userData$shift","availabilityInfo","maxNecessaryEmployees","currentShiftCount","maxShiftsAllowed","handleEmployeeClick","_availabilityData$use","userNotes","notes","keys","updateShiftCounts","counts","totalShifts","shifts","userShiftCount","dayShifts","saveNecessaryEmployeesToDB","handleStatusUpdate","currentStatus","_necessaryEmployees$d2","_userData$shift2","newStatus","updatedAvailability","otherShift","employeesWithAvailability","some","sort","userIdA","userIdB","_users$userIdA","_users$userIdA$name","_users$userIdB","_users$userIdB$name","nameA","name","toLowerCase","nameB","localeCompare","handleNecessaryEmployeesChange","updatedNecessaryEmployees","_userData$shift3","saveToDB","dayData","shiftCount","calculateTotalAssignedShifts","count","togglePublishStatus","isScheduleFullyStaffed","alert","fetchPublishStatusFromDB","_status$status","requiredCount","selectedCount","_userData$shift4","isPublishButtonDisabled","hasWeeklyNotes","userAvailability","trim","role","toggleEditStatus","fetchEditStatusFromDB","_status$isEditAllowed","calculateShiftCriticality","_necessaryEmployees$d3","necessary","selected","_userData$shift5","_userData$shift5$day","defaults","_userData$shift6","_userData$shift6$day","pow","findMostCriticalShifts","highestCriticality","Infinity","criticalShifts","_necessaryEmployees$d4","criticality","_userData$shift7","_userData$shift7$day","push","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","index","_necessaryEmployees$d5","_necessaryEmployees$d6","_userData$shift8","isFullyStaffed","criticalShift","type","onChange","e","_userData$shift9","isAvailable","_users$userIdA2","_users$userIdB2","_userData$shift10","_users$userId","statusClass","onClick","style","backgroundColor","color","pointerEvents","cursor","FaChevronLeft","FaChevronRight","disabled","isTargetMet","hasNotes","textColor","max","stopPropagation","selectedEmployees","_userData$shift11","_users$userIdA3","_users$userIdA3$name","_users$userIdB3","_users$userIdB3$name","_users$userId2","_c","$RefreshReg$"],"sources":["/Users/dorlevi/IdeaProjects/newShiftWise/client/src/components/ScheduleScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { getAllAvailabilities, getNecessaryEmployees, saveNecessaryEmployees, saveWeeklyShiftTargets, getWeeklyShiftTargets, fetchPublishStatus, savePublishStatus, saveEditStatus, fetchEditStatus } from '../services/availabilityService';\nimport { getUsers } from '../services/userService';\nimport { calculateWeekKey, calculateWeekRange, selectMorningOrNoonShift, selectNightShift, deselectMorningOrNoonShift, deselectNightShift, calculatePreviousDay, calculateNextDay, handleOtherShiftsOfDayWhenDeselectAShift } from '../utils/utils';\nimport { updateAvailabilityStatus } from '../services/availabilityService';\nimport Navbar from '../components/Navbar';\nimport '../styles/ScheduleScreen.css';\n\nfunction ScheduleScreen() {\n    const [availability, setAvailability] = useState({});\n    const [users, setUsers] = useState({});\n    const [isLoading, setIsLoading] = useState(true);\n    const [error, setError] = useState('');\n    const [weekOffset, setWeekOffset] = useState(0); // Offset לשבוע הנוכחי\n    const [currentCompany, setCurrentCompany] = useState(null);\n    const [weekDates, setWeekDates] = useState([]); // תאריכים לכל הימים בשבוע\n    const [highlightedUser, setHighlightedUser] = useState(null);\n    const [selectedUserNotes, setSelectedUserNotes] = useState('');\n    const [shiftCounts, setShiftCounts] = useState({});\n    const [necessaryEmployees, setNecessaryEmployees] = useState({});\n    const [weeklyShiftTargets, setWeeklyShiftTargets] = useState({});\n    const [totalNecessaryEmployees, setTotalNecessaryEmployees] = useState(0);\n    const [totalAssignedShifts, setTotalAssignedShifts] = useState(0);\n    const [totalWeeklyTargets, setTotalWeeklyTargets] = useState(0);\n    const [isPublished, setIsPublished] = useState(false);\n    const [isAdmin, setIsAdmin] = useState(false);\n    const [isEditAllowed, setIsEditAllowed] = useState(false);\n    const [mostCriticalShifts, setMostCriticalShifts] = useState([]);\n\n    useEffect(() => {\n        const fetchAvailabilityAndUsers = async () => {\n            try {\n                const loggedUser = JSON.parse(localStorage.getItem('user'));\n                const companyId = loggedUser?.company?.id;\n\n                if (!companyId) {\n                    setError('No company information found.');\n                    return;\n                }\n\n                setCurrentCompany(companyId);\n\n                const weekKey = calculateWeekKey(weekOffset);\n\n                // שליפת כל הנתונים הדרושים\n                const [availabilityData, usersData, necessaryEmployeesData, weeklyTargetsData] = await Promise.all([\n                    getAllAvailabilities(companyId, weekKey),\n                    getUsers(),\n                    getNecessaryEmployees(companyId, weekKey),\n                    getWeeklyShiftTargets(companyId, weekKey), // קריאה לנתוני weeklyShiftTargets\n                ]);\n\n                // עדכון ה-states בהתאם לנתונים שהתקבלו מהשרת\n                setAvailability(availabilityData || {});\n                setUsers(usersData || {});\n                setNecessaryEmployees(necessaryEmployeesData || {});\n                calculateTotalNecessaryEmployees(necessaryEmployeesData || {});\n\n                console.log('usersData:', usersData);\n\n                // הגדרת ערכי ברירת מחדל ל-weeklyShiftTargets\n                const updatedWeeklyTargets = { ...weeklyTargetsData };\n                Object.values(usersData).forEach(user => {\n                    // בדיקה אם user.id קיים\n                    if (!user?.id) {\n                        console.warn(\"User without ID found:\", user);\n                        return; // דלג על משתמשים ללא ID\n                    }\n\n                    console.log(\"Valid user ID:\", user.id);\n\n                    if (!updatedWeeklyTargets[user.id]) {\n                        updatedWeeklyTargets[user.id] = 0; // ערך ברירת מחדל\n                    }\n                });\n\n                setWeeklyShiftTargets(updatedWeeklyTargets);\n\n                // חישוב תאריכים לשבוע הנוכחי\n                const startOfWeek = new Date();\n                startOfWeek.setDate(startOfWeek.getDate() + weekOffset * 7 - startOfWeek.getDay());\n                const dates = Array.from({ length: 7 }, (_, i) => {\n                    const date = new Date(startOfWeek);\n                    date.setDate(startOfWeek.getDate() + i);\n                    return date.toLocaleDateString('en-GB'); // פורמט DD/MM/YYYY\n                });\n                setWeekDates(dates);\n\n            } catch (err) {\n                setError('Failed to fetch data.');\n                console.error(err);\n            } finally {\n                setIsLoading(false);\n            }\n        };\n\n        fetchAvailabilityAndUsers();\n    }, [weekOffset]);\n\n\n    const handleWeeklyShiftTargetChange = async (userId, value) => {\n        // הבטחת הערך המקסימלי ל-6\n        const parsedValue = Math.min(parseInt(value, 10) || 0, 6);\n\n        // בדיקה אם היעד החדש קטן ממספר המשמרות הנוכחי\n        if (parsedValue < shiftCounts[userId]) {\n            console.warn(`Cannot set target lower than current shifts (${shiftCounts[userId]} shifts for user ${userId}).`);\n            return; // עצירת השינוי\n        }\n\n        // עדכון היעדים השבועיים\n        const updatedTargets = { ...weeklyShiftTargets, [userId]: parsedValue };\n        setWeeklyShiftTargets(updatedTargets);\n\n        // עדכון הסכום הכולל של היעדים השבועיים\n        const total = Object.values(updatedTargets).reduce((sum, target) => sum + (target || 0), 0);\n        setTotalWeeklyTargets(total);\n\n        console.log(\"Updated weeklyShiftTargets:\", updatedTargets);\n        console.log(\"Total Weekly Targets:\", total);\n\n        // סינון המידע לפני שמירתו ל-DB\n        const cleanedTargets = Object.fromEntries(\n            Object.entries(updatedTargets).filter(([key]) => key !== 'necessaryEmployees') // סינון המפתח הלא רצוי\n        );\n\n        // שמירת הערך ל-DB\n        try {\n            const weekKey = calculateWeekKey(weekOffset);\n            await saveWeeklyShiftTargets(currentCompany, weekKey, cleanedTargets);\n        } catch (error) {\n            console.error('Failed to save weekly shift targets:', error);\n        }\n    };\n\n    const handleWeekChange = (direction) => {\n        setWeekOffset((prevOffset) => prevOffset + direction);\n    };\n\n    const getStatusClass = (status, userId, shift, day) => {\n        const selectedEmployeesCount = Object.entries(availability).filter(([_, userData]) => {\n            const availabilityInfo = userData?.[shift]?.[day];\n            return availabilityInfo?.status === 'selected';\n        }).length;\n\n        const maxNecessaryEmployees = necessaryEmployees?.[day]?.[shift] || 0;\n\n        // אם מספר העובדים הנבחרים שווה או גדול מהנדרש למשמרת\n        if (status === 'default' && selectedEmployeesCount >= maxNecessaryEmployees) {\n            return highlightedUser === userId ? 'status-disabled highlighted-user' : 'status-disabled'; // הדגשה אם העובד נבחר\n        }\n\n        // בדיקת מספר המשמרות שכבר נבחרו עבור העובד מול היעד השבועי\n        const currentShiftCount = shiftCounts[userId] || 0;\n        const maxShiftsAllowed = weeklyShiftTargets[userId] || 0;\n\n        // אם העובד הגיע למכסת המשמרות השבועיות שהוגדרו לו\n        if (status === 'default' && currentShiftCount >= maxShiftsAllowed) {\n            return highlightedUser === userId ? 'status-disabled highlighted-user' : 'status-disabled'; // הדגשה אם העובד נבחר\n        }\n\n        // **הוספת הדגשה תמידית למשתמש שנבחר**\n        if (highlightedUser === userId) {\n            return status === 'disabled' ? 'status-disabled highlighted-user' : `highlighted-user ${status}`;\n        }\n\n        // שאר הלוגיקה הקיימת\n        if (shiftCounts[userId] >= weeklyShiftTargets[userId]) return 'status-disabled'; // הכפתורים יהיו חסומים אם היעד השבועי הושג\n        switch (status) {\n            case 'selected':\n                return 'status-selected';\n            case 'disabled':\n                return 'status-disabled';\n            case 'default':\n            default:\n                return 'status-default';\n        }\n    };\n\n    const handleEmployeeClick = async (userId) => {\n        if (highlightedUser === userId) {\n            setHighlightedUser(null);\n            setSelectedUserNotes(''); // איפוס הערות כאשר לוחצים שוב\n            return;\n        }\n\n        // איפוס ההערות לפני שליפת ההערות החדשות\n        setSelectedUserNotes('');\n\n        setHighlightedUser(userId);\n\n        if (currentCompany && userId) {\n            try {\n                const weekKey = calculateWeekKey(weekOffset);\n                const availabilityData = await getAllAvailabilities(currentCompany, weekKey);\n\n                const userNotes = availabilityData?.[userId]?.notes || 'No notes available.';\n                setSelectedUserNotes(userNotes);\n            } catch (err) {\n                console.error('Failed to fetch notes:', err);\n                setSelectedUserNotes('Error fetching notes.');\n            }\n        }\n    };\n\n    useEffect(() => {\n        if (Object.keys(availability).length > 0) {\n            updateShiftCounts();\n        }\n    }, [availability]);\n\n    const updateShiftCounts = () => {\n        const counts = {};\n        let totalShifts = 0; // משתנה לספירת המשמרות הכוללות שהוקצו\n\n        Object.entries(availability).forEach(([userId, shifts]) => {\n            const userShiftCount = Object.values(shifts).reduce(\n                (sum, dayShifts) =>\n                    sum +\n                    Object.values(dayShifts).filter((shift) => shift.status === 'selected').length,\n                0\n            );\n            counts[userId] = userShiftCount;\n            totalShifts += userShiftCount; // הוספה למספר הכולל\n        });\n\n        setShiftCounts(counts);\n        setTotalAssignedShifts(totalShifts); // עדכון state של סך כל המשמרות\n    };\n\n    useEffect(() => {\n        const saveNecessaryEmployeesToDB = async () => {\n            try {\n                const weekKey = calculateWeekKey(weekOffset);\n\n                // שמירת necessaryEmployees ל-DB\n                if (Object.keys(necessaryEmployees).length > 0) {\n                    await saveNecessaryEmployees(currentCompany, weekKey, necessaryEmployees);\n                }\n            } catch (error) {\n                console.error('Failed to save necessary employees:', error);\n            }\n        };\n\n        // נוודא שאנו שומרים רק אם מדובר בעדכון אמיתי ולא מעבר שבוע\n        if (!isLoading && Object.keys(necessaryEmployees).length > 0) {\n            saveNecessaryEmployeesToDB();\n        }\n    }, [necessaryEmployees, currentCompany]);\n\n    const handleStatusUpdate = async (userId, shift, day, currentStatus) => {\n        // בדיקת מספר העובדים הנבחרים למשמרת הנוכחית מול העובדים הנדרשים\n        const selectedEmployeesCount = Object.entries(availability).filter(([_, userData]) => {\n            const availabilityInfo = userData?.[shift]?.[day];\n            return availabilityInfo?.status === 'selected';\n        }).length;\n\n        const maxNecessaryEmployees = necessaryEmployees?.[day]?.[shift] || 0;\n\n        // אם מספר העובדים הנבחרים שווה או גדול מהנדרש, למנוע בחירה נוספת\n        if (currentStatus === 'default' && selectedEmployeesCount >= maxNecessaryEmployees) {\n            console.warn(`Cannot select more employees for ${shift} on ${day}, as the necessary employees limit (${maxNecessaryEmployees}) is reached.`);\n            return;\n        }\n\n        // בדיקת מספר המשמרות שכבר נבחרו עבור העובד מול היעד השבועי\n        const currentShiftCount = shiftCounts[userId] || 0;\n        const maxShiftsAllowed = weeklyShiftTargets[userId] || 0;\n\n        // אם העובד הגיע למספר המשמרות המקסימלי, למנוע בחירה נוספת\n        if (currentStatus === 'default' && currentShiftCount >= maxShiftsAllowed) {\n            console.warn(`User ${userId} has reached the maximum number of shifts (${maxShiftsAllowed}).`);\n            return;\n        }\n\n        // המשך עדכון סטטוס\n        if (currentStatus === 'disabled') return; // Disable click for disabled status\n\n        try {\n            const weekKey = calculateWeekKey(weekOffset);\n            const newStatus = currentStatus === 'default' ? 'selected' : 'default';\n\n            const updatedAvailability = { ...availability };\n\n            // Update the current shift's status to 'selected' or 'default'\n            updatedAvailability[userId][shift][day].status = newStatus;\n            await updateAvailabilityStatus(currentCompany, weekKey, userId, shift, day, newStatus);\n\n            if (newStatus === 'selected') {\n                // Disable other shifts on the same day\n                for (const otherShift of ['Morning', 'Noon', 'Evening', 'Night']) {\n                    if (otherShift !== shift) {\n                        updatedAvailability[userId][otherShift][day].status = 'disabled';\n                        await updateAvailabilityStatus(currentCompany, weekKey, userId, otherShift, day, 'disabled');\n                    }\n                }\n\n                // Handle unique rules for specific shifts\n                if (shift === 'Morning' || shift === 'Noon') {\n                    await selectMorningOrNoonShift(userId, day, updatedAvailability, weekKey, weekOffset, currentCompany);\n                } else if (shift === 'Night') {\n                    await selectNightShift(userId, day, updatedAvailability, weekKey, weekOffset, currentCompany);\n                }\n            } else {\n                // Undo selection and revert unique rules\n                await handleOtherShiftsOfDayWhenDeselectAShift(userId, day, shift, updatedAvailability, weekKey, currentCompany);\n\n                // Revert unique rules for specific shifts\n                if (shift === 'Morning' || shift === 'Noon') {\n                    await deselectMorningOrNoonShift(userId, day, updatedAvailability, weekKey, currentCompany);\n                } else if (shift === 'Night') {\n                    await deselectNightShift(userId, day, updatedAvailability, weekKey, weekOffset, currentCompany);\n                }\n            }\n\n            // Update state with the modified availability\n            setAvailability(updatedAvailability);\n\n            // עדכון ה-counts והכפתורים\n            updateShiftCounts();\n\n        } catch (error) {\n            console.error('Failed to update status:', error);\n        }\n    };\n\n    const employeesWithAvailability = Object.entries(users)\n        .filter(([userId]) =>\n            availability[userId] && Object.values(availability[userId]).some((shifts) =>\n                Object.values(shifts).some((shift) => shift.status === 'selected' || shift.status === 'default')\n            )\n        )\n        .sort(([userIdA], [userIdB]) => {\n            const nameA = users[userIdA]?.name?.toLowerCase() || '';\n            const nameB = users[userIdB]?.name?.toLowerCase() || '';\n            return nameA.localeCompare(nameB); // מיון אלפביתי לפי שם\n        });\n\n    const handleNecessaryEmployeesChange = (day, shift, value) => {\n        const updatedNecessaryEmployees = { ...necessaryEmployees };\n\n        if (!updatedNecessaryEmployees[day]) {\n            updatedNecessaryEmployees[day] = {};\n        }\n\n        const parsedValue = parseInt(value, 10) || 0;\n\n        // בדיקת מספר העובדים שכבר נבחרו למשמרת\n        const selectedEmployeesCount = Object.entries(availability).filter(([_, userData]) => {\n            const availabilityInfo = userData?.[shift]?.[day];\n            return availabilityInfo?.status === 'selected';\n        }).length;\n\n        // אם הערך החדש קטן ממספר העובדים שנבחרו, למנוע שינוי\n        if (parsedValue < selectedEmployeesCount) {\n            return; // עצירת השינוי\n        }\n\n        // עדכון הערך החדש אם הוא חוקי\n        updatedNecessaryEmployees[day][shift] = parsedValue;\n\n        setNecessaryEmployees(updatedNecessaryEmployees);\n        calculateTotalNecessaryEmployees(updatedNecessaryEmployees);\n\n        // שמירה ל-DB כאשר הערך משתנה\n        const saveToDB = async () => {\n            try {\n                const weekKey = calculateWeekKey(weekOffset);\n                await saveNecessaryEmployees(currentCompany, weekKey, updatedNecessaryEmployees);\n            } catch (error) {\n                console.error('Failed to save necessary employees:', error);\n            }\n        };\n        saveToDB();\n    };\n\n    const calculateTotalNecessaryEmployees = (necessaryEmployeesData) => {\n        let total = 0;\n        Object.values(necessaryEmployeesData).forEach((dayData) => {\n            Object.values(dayData).forEach((shiftCount) => {\n                total += shiftCount || 0;\n            });\n        });\n        setTotalNecessaryEmployees(total);\n    };\n\n    const calculateTotalAssignedShifts = (shiftCounts) => {\n        const total = Object.values(shiftCounts).reduce((sum, count) => sum + count, 0);\n        setTotalAssignedShifts(total);\n    };\n\n    useEffect(() => {\n        const total = Object.values(weeklyShiftTargets).reduce((sum, target) => sum + (target || 0), 0);\n        setTotalWeeklyTargets(total);\n    }, [weeklyShiftTargets]);\n\n    const togglePublishStatus = async () => {\n        if (!isPublished && !isScheduleFullyStaffed()) {\n            alert('Cannot publish schedule: not all shifts are fully staffed.');\n            return;\n        }\n\n        try {\n            const newStatus = !isPublished;\n            const weekKey = calculateWeekKey(weekOffset);\n\n            // עדכון הסטטוס ב-DB\n            await savePublishStatus(currentCompany, weekKey, newStatus);\n\n            // עדכון ה-UI\n            setIsPublished(newStatus);\n        } catch (error) {\n            console.error('Failed to toggle publish status:', error);\n        }\n    };\n\n    useEffect(() => {\n        const fetchPublishStatusFromDB = async () => {\n            try {\n                const weekKey = calculateWeekKey(weekOffset);\n                const status = await fetchPublishStatus(currentCompany, weekKey);\n\n                // וודא שהסטטוס מוחזר במבנה נכון\n                console.log('Publish Status from DB:', weekKey, \"    +    \", status);\n\n                // השתמש בערך שבתוך המפתח 'status' ולא באובייקט כולו\n                setIsPublished(status?.status ?? false); // True or False\n            } catch (error) {\n                console.error('Failed to fetch publish status:', error);\n            }\n        };\n\n        if (currentCompany) {\n            fetchPublishStatusFromDB();\n        }\n    }, [currentCompany, weekOffset]);\n\n    const isScheduleFullyStaffed = () => {\n        for (const day of Object.keys(necessaryEmployees || {})) {\n            for (const shift of Object.keys(necessaryEmployees[day] || {})) {\n                const requiredCount = necessaryEmployees[day][shift] || 0;\n                const selectedCount = Object.entries(availability).filter(([_, userData]) => {\n                    const availabilityInfo = userData?.[shift]?.[day];\n                    return availabilityInfo?.status === 'selected';\n                }).length;\n\n                if (selectedCount !== requiredCount) {\n                    return false; // לפחות משמרת אחת אינה מלאה\n                }\n            }\n        }\n        return true; // כל המשמרות מלאות\n    };\n\n    const isPublishButtonDisabled = !isScheduleFullyStaffed() && !isPublished;\n\n    const hasWeeklyNotes = (userId) => {\n        const userAvailability = availability[userId];\n        return userAvailability && userAvailability.notes && userAvailability.notes.trim() !== '';\n    };\n\n    useEffect(() => {\n        const loggedUser = JSON.parse(localStorage.getItem('user'));\n        setIsAdmin(loggedUser?.user.role === 'admin'); // בדיקה אם המשתמש הוא admin\n    }, []);\n\n    const toggleEditStatus = async () => {\n        try {\n            const newStatus = !isEditAllowed;\n            const weekKey = calculateWeekKey(weekOffset);\n\n            // שמירת הסטטוס לשרת\n            await saveEditStatus(currentCompany, weekKey, newStatus);\n\n            // עדכון ה-UI\n            setIsEditAllowed(newStatus);\n        } catch (error) {\n            console.error('Failed to toggle edit status:', error);\n        }\n    };\n\n    useEffect(() => {\n        const fetchEditStatusFromDB = async () => {\n            try {\n                const weekKey = calculateWeekKey(weekOffset);\n                const status = await fetchEditStatus(currentCompany, weekKey);\n\n                // עדכון המצב\n                setIsEditAllowed(status?.isEditAllowed ?? false); // ברירת מחדל ל-false אם אין מידע\n            } catch (error) {\n                console.error('Failed to fetch edit status:', error);\n            }\n        };\n\n        if (currentCompany) {\n            fetchEditStatusFromDB();\n        }\n    }, [currentCompany, weekOffset]);\n\n    const calculateShiftCriticality = (day, shift) => {\n        const necessary = necessaryEmployees?.[day]?.[shift] || 0;\n        const selected = Object.values(availability).filter(userData =>\n            userData?.[shift]?.[day]?.status === 'selected'\n        ).length;\n        const defaults = Object.values(availability).filter(userData =>\n            userData?.[shift]?.[day]?.status === 'default'\n        ).length;\n\n        // אם המשמרת מלאה, הקריטיות תהיה 0\n        if (necessary === selected) {\n            return 0;\n        }\n\n        return (necessary - selected) / Math.pow((defaults + 1), 2);\n    };\n\n\n\n    const findMostCriticalShifts = () => {\n        let highestCriticality = -Infinity;\n        let criticalShifts = [];\n\n        Object.keys(necessaryEmployees || {}).forEach(day => {\n            Object.keys(necessaryEmployees[day] || {}).forEach(shift => {\n                const criticality = calculateShiftCriticality(day, shift);\n                const necessary = necessaryEmployees?.[day]?.[shift] || 0;\n                const selected = Object.values(availability).filter(userData =>\n                    userData?.[shift]?.[day]?.status === 'selected'\n                ).length;\n\n                // 🎯 וידוא שמשמרות מלאות לא ייכנסו לרשימה\n                if (necessary === selected) return;\n\n                if (criticality > highestCriticality) {\n                    highestCriticality = criticality;\n                    criticalShifts = [{ day, shift }];\n                } else if (criticality === highestCriticality && criticality > 0) {\n                    criticalShifts.push({ day, shift });\n                }\n            });\n        });\n\n        return criticalShifts;\n    };\n\n\n\n    useEffect(() => {\n        setMostCriticalShifts(findMostCriticalShifts());\n    }, [necessaryEmployees, availability]);\n\n\n    return (\n        <div>\n            <Navbar />\n            <div className=\"navbar-placeholder\"></div> {/* רווח לניווט */}\n\n            <div className=\"schedule-container\">\n                <h1>Weekly Schedule</h1>\n\n\n                {isLoading ? (\n                    <p>Loading schedule...</p>\n                ) : error ? (\n                    <p className=\"error\">{error}</p>\n                ) : (\n                    <>\n                        {/* הצגת התוכן רק ל-Admin */}\n                        {isAdmin ? (\n                            <div className=\"schedule-content\">\n                                <table className=\"schedule-table\">\n                                    <thead>\n                                        <tr>\n                                            <th>Shift</th>\n                                            {['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'].map(\n                                                (day, index) => (\n                                                    <th key={day}>\n                                                        {day} <br />\n                                                        <span className=\"date\">{weekDates[index]}</span>\n                                                    </th>\n                                                )\n                                            )}\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {['Morning', 'Noon', 'Evening', 'Night'].map((shift) => (\n                                            <tr key={shift}>\n                                                <td>{shift}</td>\n                                                {['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'].map((day) => {\n                                                    const selectedEmployeesCount = Object.entries(availability).filter(([userId, userData]) => {\n                                                        const availabilityInfo = userData?.[shift]?.[day];\n                                                        return availabilityInfo?.status === 'selected';\n                                                    }).length;\n\n                                                    const isFullyStaffed = selectedEmployeesCount === (necessaryEmployees?.[day]?.[shift] || 0);\n\n                                                    return (\n                                                        <td\n                                                            key={day}\n                                                            className={`schedule-cell ${isFullyStaffed ? 'fully-staffed' : ''} \n                                                            ${mostCriticalShifts.some(criticalShift => criticalShift.day === day && criticalShift.shift === shift) ? 'most-critical' : ''}`}\n                                                        >\n\n\n                                                            {/* Input field for necessary employees */}\n                                                            <input\n                                                                type=\"number\"\n                                                                min=\"0\"\n                                                                className=\"necessary-employees-input\"\n                                                                value={necessaryEmployees?.[day]?.[shift] || 0}\n                                                                onChange={(e) => handleNecessaryEmployeesChange(day, shift, e.target.value)}\n                                                            />\n\n                                                            {/* Indicator for selected employees */}\n                                                            <div className=\"selected-employees-indicator\">\n                                                                {selectedEmployeesCount} Selected\n                                                            </div>\n\n                                                            {Object.entries(availability)\n                                                                .filter(([userId, userData]) => {\n                                                                    const availabilityInfo = userData?.[shift]?.[day];\n                                                                    return availabilityInfo?.isAvailable; // רק עובדים זמינים\n                                                                })\n                                                                .sort(([userIdA], [userIdB]) => {\n                                                                    const nameA = users[userIdA]?.name || '';\n                                                                    const nameB = users[userIdB]?.name || '';\n                                                                    return nameA.localeCompare(nameB); // מיון אלפביתי לפי שם\n                                                                })\n                                                                .map(([userId, userData]) => {\n                                                                    const availabilityInfo = userData?.[shift]?.[day];\n                                                                    const statusClass = getStatusClass(availabilityInfo.status, userId);\n\n                                                                    return (\n                                                                        <div\n                                                                            key={userId}\n                                                                            className={`availability-entry ${statusClass}`}\n                                                                            onClick={() =>\n                                                                                handleStatusUpdate(\n                                                                                    userId,\n                                                                                    shift,\n                                                                                    day,\n                                                                                    availabilityInfo.status\n                                                                                )\n                                                                            }\n                                                                            style={{\n                                                                                backgroundColor:\n                                                                                    availabilityInfo.status === 'selected'\n                                                                                        ? '#2ecc71'\n                                                                                        : availabilityInfo.status === 'disabled'\n                                                                                            ? '#e74c3c'\n                                                                                            : '#ffff',\n                                                                                color: availabilityInfo.status === 'disabled' ? 'white' : '#2c3e50',\n                                                                                pointerEvents: availabilityInfo.status === 'disabled' ? 'none' : 'auto',\n                                                                                cursor: availabilityInfo.status === 'disabled' ? 'not-allowed' : 'pointer',\n                                                                            }}\n                                                                        >\n                                                                            {users[userId]?.name || 'Unknown'}\n                                                                        </div>\n                                                                    );\n                                                                })}\n                                                        </td>\n                                                    );\n                                                })}\n                                            </tr>\n                                        ))}\n\n                                    </tbody>\n                                </table>\n\n                                <div className=\"employees-list\">\n                                    <h3>Employees</h3>\n\n                                            <div className=\"week-navigation\">\n                                                <button className=\"week-nav-button\" onClick={() => handleWeekChange(-1)}>\n                                                    <FaChevronLeft />\n                                                </button>\n                                                <span className=\"week-range\">{calculateWeekRange(weekOffset)}</span>\n                                                <button className=\"week-nav-button\" onClick={() => handleWeekChange(1)}>\n                                                    <FaChevronRight />\n                                                </button>\n                                            </div>\n\n                                    <div className=\"buttons-container\">\n                                        <button\n                                            className={`general-button ${isPublished ? 'green' : 'red'}`}\n                                            onClick={togglePublishStatus}\n                                            disabled={isPublishButtonDisabled}\n                                        >\n                                            {isPublished ? 'Unpublish Schedule' : 'Publish Schedule'}\n                                        </button>\n                                        <button\n                                            className={`general-button ${isEditAllowed ? 'green' : 'red'}`}\n                                            onClick={toggleEditStatus}\n                                        >\n                                            {isEditAllowed ? 'Disable Editing' : 'Enable Editing'}\n                                        </button>\n                                    </div>\n\n\n                                    <div className=\"total-info-container\">\n                                        <h3>Weekly Overview</h3>\n                                        <hr />\n                                        <p>Weekly Staff: <span>{totalNecessaryEmployees}</span></p>\n                                        <hr />\n                                        <p>Weekly Shift Targets: <span>{totalWeeklyTargets}</span></p>\n                                        <hr />\n                                        <p>Assigned Shifts: <span>{totalAssignedShifts}</span></p>\n                                        <hr />\n                                    </div>\n\n\n                                    <ul>\n                                        {employeesWithAvailability.map(([userId, user]) => {\n                                            const isTargetMet = weeklyShiftTargets[userId] === shiftCounts[userId]; // בדיקה אם היעד הושג\n                                            const hasNotes = hasWeeklyNotes(userId); // בדיקה אם יש הערות לעובד זה\n                                            const backgroundColor = hasNotes ? 'yellow' : '#2980b9'; // צהוב אם יש הערות, כחול אם אין\n                                            const textColor = hasNotes ? 'black' : 'white'; // טקסט שחור אם צהוב, לבן אם כחול\n\n                                            return (\n                                                <li\n                                                    key={userId}\n                                                    onClick={() => handleEmployeeClick(userId)}\n                                                    className={`${highlightedUser === userId ? 'selected' : ''} ${isTargetMet ? 'target-met' : ''}`}\n                                                    style={{\n                                                        backgroundColor: isTargetMet ? '#d4edda' : 'inherit', // צבע רקע ירוק בהיר אם היעד הושג\n                                                    }}\n                                                >\n                                                    <div className=\"employee-details\">\n\n                                                        {/* אינדיקטור הערות */}\n                                                        <span\n                                                            className=\"notes-indicator\"\n                                                            style={{\n                                                                backgroundColor: backgroundColor,\n                                                                color: textColor, // צבע הטקסט לפי צבע הרקע\n                                                            }}\n                                                        >\n                                                            <span className=\"indicator-text\">i</span> {/* האות i */}\n                                                        </span>\n\n                                                        <span className=\"employee-name\">\n                                                            {user.name}\n                                                        </span>\n\n                                                        {/* שדה קלט עבור Weekly Shift Target */}\n                                                        <div className=\"weekly-shift-target\">\n                                                            <label>\n                                                                {shiftCounts[userId] || 0} shifts out of:\n                                                                <input\n                                                                    type=\"number\"\n                                                                    min=\"0\"\n                                                                    max=\"6\" // הגבלה ברמת ה-UI\n                                                                    value={weeklyShiftTargets[userId] || 0}\n                                                                    onClick={(e) => e.stopPropagation()} // עצירת האירוע\n                                                                    onChange={(e) => handleWeeklyShiftTargetChange(userId, e.target.value)}\n                                                                    className=\"weekly-shift-input\"\n                                                                />\n                                                            </label>\n                                                        </div>\n\n                                                        {highlightedUser === userId && selectedUserNotes && selectedUserNotes !== 'No notes available.' && (\n                                                            <div className=\"employee-notes\">\n                                                                <h4>Notes:</h4>\n                                                                <p>{selectedUserNotes}</p>\n                                                            </div>\n                                                        )}\n                                                    </div>\n                                                </li>\n                                            );\n                                        })}\n                                    </ul>\n                                </div>\n                            </div>\n                        ) : (\n                            isPublished ? (\n\n                                <div className=\"schedule-content\">\n                                    {/* תוכן לעובד - צפייה בלבד */}\n                                    <table className=\"schedule-table\">\n                                        <thead>\n                                            <tr>\n                                                <th>Shift</th>\n                                                {['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'].map(\n                                                    (day, index) => (\n                                                        <th key={day}>\n                                                            {day} <br />\n                                                            <span className=\"date\">{weekDates[index]}</span>\n                                                        </th>\n                                                    )\n                                                )}\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            {['Morning', 'Noon', 'Evening', 'Night'].map((shift) => (\n                                                <tr key={shift}>\n                                                    <td>{shift}</td>\n                                                    {['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'].map((day) => {\n                                                        const selectedEmployees = Object.entries(availability).filter(([userId, userData]) => {\n                                                            const availabilityInfo = userData?.[shift]?.[day];\n                                                            return availabilityInfo?.status === 'selected';\n                                                        });\n\n                                                        return (\n                                                            <td key={day} className=\"schedule-cell\">\n                                                                {/* הצגת העובדים המשובצים בלבד, ממוין לפי סדר אלפביתי */}\n                                                                {selectedEmployees\n                                                                    .sort(([userIdA], [userIdB]) => {\n                                                                        const nameA = users[userIdA]?.name?.toLowerCase() || '';\n                                                                        const nameB = users[userIdB]?.name?.toLowerCase() || '';\n                                                                        return nameA.localeCompare(nameB); // מיון אלפביתי לפי שם\n                                                                    })\n                                                                    .map(([userId]) => (\n                                                                        <div key={userId} className=\"employee-button\">\n                                                                            {users[userId]?.name || 'Unknown'}\n                                                                        </div>\n                                                                    ))}\n                                                            </td>\n                                                        );\n\n                                                    })}\n                                                </tr>\n                                            ))}\n                                        </tbody>\n                                    </table>\n                                </div>\n                            ) : (\n                                <p className=\"no-schedule-message\">\n                                    No published schedule is available for this week.\n                                </p>\n                            )\n                        )}\n                    </>\n                )}\n            </div>\n\n        </div>\n    );\n}\n\nexport default ScheduleScreen;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}