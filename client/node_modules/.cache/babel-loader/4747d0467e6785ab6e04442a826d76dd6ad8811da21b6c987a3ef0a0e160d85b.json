{"ast":null,"code":"var _jsxFileName = \"/Users/dorlevi/IdeaProjects/newShiftWise/client/src/components/EmployeesScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Modal from 'react-modal';\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { getUsers, removeCompanyFromUser, addUser, updateUserCompanies, updateUser } from '../services/userService';\nimport { removeUserFromCompany, addEmployeeToCompany } from '../services/companyService';\nimport Navbar from '../components/Navbar';\nimport '../styles/EmployeesScreen.css';\nimport '../styles/Navbar.css';\nimport employeesData from '../data/emps.json'; // יש לוודא שהקובץ נמצא בתיקייה data\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nModal.setAppElement('#root');\nfunction EmployeesScreen() {\n  _s();\n  const [employees, setEmployees] = useState([]);\n  const [newEmployee, setNewEmployee] = useState({\n    name: '',\n    email: '',\n    phone: '',\n    role: 'employee',\n    password: ''\n  });\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [loggedUser, setLoggedUser] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [openCards, setOpenCards] = useState({});\n  const [editEmployee, setEditEmployee] = useState(null);\n  const [isEditModalOpen, setIsEditModalOpen] = useState(false);\n  useEffect(() => {\n    const fetchEmployees = async () => {\n      try {\n        var _loggedUser$company;\n        const loggedUser = JSON.parse(localStorage.getItem('user'));\n        setLoggedUser(loggedUser);\n        const companyId = loggedUser === null || loggedUser === void 0 ? void 0 : (_loggedUser$company = loggedUser.company) === null || _loggedUser$company === void 0 ? void 0 : _loggedUser$company.id;\n        if (!companyId) {\n          setError('No company information found.');\n          return;\n        }\n        const data = await getUsers();\n        const usersWithIds = data ? Object.entries(data).map(([id, user]) => ({\n          id,\n          ...user\n        })) : [];\n        const filteredEmployees = usersWithIds.filter(user => {\n          var _user$companyIds;\n          return (_user$companyIds = user.companyIds) === null || _user$companyIds === void 0 ? void 0 : _user$companyIds.some(company => company.companyId === companyId);\n        });\n        setEmployees(filteredEmployees);\n      } catch (err) {\n        setError('Failed to fetch employees.');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchEmployees();\n  }, []);\n  const handleDelete = async userId => {\n    try {\n      var _loggedUser$company2;\n      const companyId = loggedUser === null || loggedUser === void 0 ? void 0 : (_loggedUser$company2 = loggedUser.company) === null || _loggedUser$company2 === void 0 ? void 0 : _loggedUser$company2.id;\n      if (!companyId) {\n        toast.error('No company information found. Please try again.');\n        return;\n      }\n      await removeCompanyFromUser(userId, companyId);\n      await removeUserFromCompany(companyId, userId);\n      setEmployees(employees.filter(employee => employee.id !== userId));\n      toast.success('Employee deleted successfully!');\n    } catch (err) {\n      toast.error('Failed to delete employee.');\n      console.error(err);\n    }\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewEmployee(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleAddEmployee = async e => {\n    e.preventDefault();\n    try {\n      const company = loggedUser === null || loggedUser === void 0 ? void 0 : loggedUser.company;\n      if (!company) {\n        toast.error('No company information found. Please try again.');\n        return;\n      }\n      const allUsers = await getUsers();\n      const existingUser = Object.values(allUsers).find(user => user.email === newEmployee.email);\n      if (existingUser) {\n        await updateUserCompanies(existingUser, company);\n        await addEmployeeToCompany(company.id, existingUser.id);\n        const isUserInUI = employees.some(employee => employee.id === existingUser.id);\n        if (!isUserInUI) {\n          setEmployees(prev => [...prev, existingUser]);\n        }\n        toast.info('User already exists, added to the company successfully.');\n      } else {\n        const addedEmployee = await addUser(newEmployee);\n        await updateUserCompanies(addedEmployee, company);\n        await addEmployeeToCompany(company.id, addedEmployee.id);\n        setEmployees(prev => [...prev, {\n          id: addedEmployee.id,\n          ...addedEmployee\n        }]);\n        toast.success('New user added successfully!');\n      }\n      setNewEmployee({\n        name: '',\n        email: '',\n        phone: '',\n        role: 'employee',\n        password: ''\n      });\n      setIsModalOpen(false);\n    } catch (err) {\n      toast.error('Failed to add employee.');\n      console.error(err);\n    }\n  };\n  const toggleCard = id => {\n    setOpenCards(prev => ({\n      ...prev,\n      [id]: !prev[id]\n    }));\n  };\n  const handleEditClick = employee => {\n    setEditEmployee(employee); // הגדרת העובד הנבחר לעריכה\n    setIsEditModalOpen(true); // פתיחת המודל\n  };\n  const handleLoadEmployeesFromJSON = async () => {\n    try {\n      if (!loggedUser || !loggedUser.company) {\n        toast.error('No company information found. Please try again.');\n        return;\n      }\n      const companyId = loggedUser.company.id;\n      const allUsers = await getUsers();\n      const newEmployees = employeesData.filter(employee => !Object.values(allUsers).some(existingUser => existingUser.email === employee.email));\n      for (const employee of newEmployees) {\n        const addedEmployee = await addUser(employee);\n        await updateUserCompanies(addedEmployee, loggedUser.company);\n        await addEmployeeToCompany(companyId, addedEmployee.id);\n      }\n      const updatedUsers = await getUsers();\n      const usersWithIds = Object.entries(updatedUsers).map(([id, user]) => ({\n        id,\n        ...user\n      }));\n      const filteredEmployees = usersWithIds.filter(user => {\n        var _user$companyIds2;\n        return (_user$companyIds2 = user.companyIds) === null || _user$companyIds2 === void 0 ? void 0 : _user$companyIds2.some(company => company.companyId === companyId);\n      });\n      setEmployees(filteredEmployees);\n      toast.success(`${newEmployees.length} employees added successfully!`);\n    } catch (error) {\n      toast.error('Failed to load employees from JSON.');\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navbar-placeholder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"employees-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Employees\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading employees...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 21\n      }, this) : error ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"employees-cards\",\n        children: employees.map(employee => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `employee-card ${openCards[employee.id] ? 'open' : 'closed'}`,\n          onClick: () => toggleCard(employee.id),\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: employee.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 33\n          }, this), openCards[employee.id] && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"employee-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Email: \", employee.email]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Phone: \", employee.phone]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Role: \", employee.role]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"employee-actions\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"action-button edit\",\n                onClick: e => {\n                  e.stopPropagation();\n                  handleEditClick(employee); // פתיחת מודל העריכה\n                },\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 45\n              }, this), employee.role !== 'admin' && /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"action-button delete\",\n                onClick: e => {\n                  e.stopPropagation();\n                  handleDelete(employee.id);\n                },\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 49\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 37\n          }, this)]\n        }, employee.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"toggle-form-button\",\n        onClick: () => setIsModalOpen(true),\n        children: \"Add New Employee\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"toggle-form-button\",\n        onClick: handleAddEmployeesFromJson,\n        children: \"Add Employees from JSON\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        isOpen: isModalOpen,\n        onRequestClose: () => setIsModalOpen(false),\n        className: \"modal\",\n        overlayClassName: \"modal-overlay\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Add New Employee\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"addOrEdit-employee-form\",\n          onSubmit: handleAddEmployee,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"name\",\n            value: newEmployee.name,\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Email:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            name: \"email\",\n            value: newEmployee.email,\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Phone:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"phone\",\n            value: newEmployee.phone,\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            name: \"password\",\n            value: newEmployee.password,\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Role:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"role\",\n            value: newEmployee.role,\n            onChange: handleChange,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"employee\",\n              children: \"Employee\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"admin\",\n              children: \"Admin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Add Employee\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => setIsModalOpen(false),\n            className: \"cancel-button\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        isOpen: isEditModalOpen,\n        onRequestClose: () => setIsEditModalOpen(false),\n        className: \"modal\",\n        overlayClassName: \"modal-overlay\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Edit Employee\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"addOrEdit-employee-form\",\n          onSubmit: async e => {\n            e.preventDefault();\n            try {\n              if (editEmployee && editEmployee.id) {\n                // קריאה ל-updateUser עם הפרטים המעודכנים\n                const updatedEmployee = await updateUser(editEmployee.id, {\n                  name: editEmployee.name,\n                  email: editEmployee.email,\n                  phone: editEmployee.phone,\n                  role: editEmployee.role\n                });\n\n                // עדכון רשימת העובדים ב-UI עם הפרטים החדשים\n                setEmployees(prevEmployees => prevEmployees.map(employee => employee.id === updatedEmployee.id ? updatedEmployee : employee));\n                toast.success('Employee updated successfully!');\n              }\n              setIsEditModalOpen(false); // סגירת המודל\n            } catch (err) {\n              toast.error('Failed to update employee. Please try again.');\n              console.error(err);\n            }\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"name\",\n            value: (editEmployee === null || editEmployee === void 0 ? void 0 : editEmployee.name) || '',\n            onChange: e => setEditEmployee(prev => ({\n              ...prev,\n              name: e.target.value\n            })),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Email:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            name: \"email\",\n            value: (editEmployee === null || editEmployee === void 0 ? void 0 : editEmployee.email) || '',\n            onChange: e => setEditEmployee(prev => ({\n              ...prev,\n              email: e.target.value\n            })),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Phone:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"phone\",\n            value: (editEmployee === null || editEmployee === void 0 ? void 0 : editEmployee.phone) || '',\n            onChange: e => setEditEmployee(prev => ({\n              ...prev,\n              phone: e.target.value\n            })),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Role:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"role\",\n            value: (editEmployee === null || editEmployee === void 0 ? void 0 : editEmployee.role) || '',\n            onChange: e => setEditEmployee(prev => ({\n              ...prev,\n              role: e.target.value\n            })),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"employee\",\n              children: \"Employee\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"admin\",\n              children: \"Admin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Save Changes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => setIsEditModalOpen(false),\n            className: \"cancel-button\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 167,\n    columnNumber: 9\n  }, this);\n}\n_s(EmployeesScreen, \"JOCnnWBI5DNCtze/g8JGp5QnHKY=\");\n_c = EmployeesScreen;\nexport default EmployeesScreen;\nvar _c;\n$RefreshReg$(_c, \"EmployeesScreen\");","map":{"version":3,"names":["React","useState","useEffect","Modal","toast","ToastContainer","getUsers","removeCompanyFromUser","addUser","updateUserCompanies","updateUser","removeUserFromCompany","addEmployeeToCompany","Navbar","employeesData","jsxDEV","_jsxDEV","setAppElement","EmployeesScreen","_s","employees","setEmployees","newEmployee","setNewEmployee","name","email","phone","role","password","isLoading","setIsLoading","error","setError","loggedUser","setLoggedUser","isModalOpen","setIsModalOpen","openCards","setOpenCards","editEmployee","setEditEmployee","isEditModalOpen","setIsEditModalOpen","fetchEmployees","_loggedUser$company","JSON","parse","localStorage","getItem","companyId","company","id","data","usersWithIds","Object","entries","map","user","filteredEmployees","filter","_user$companyIds","companyIds","some","err","handleDelete","userId","_loggedUser$company2","employee","success","console","handleChange","e","value","target","prev","handleAddEmployee","preventDefault","allUsers","existingUser","values","find","isUserInUI","info","addedEmployee","toggleCard","handleEditClick","handleLoadEmployeesFromJSON","newEmployees","updatedUsers","_user$companyIds2","length","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","stopPropagation","handleAddEmployeesFromJson","isOpen","onRequestClose","overlayClassName","onSubmit","type","onChange","required","updatedEmployee","prevEmployees","_c","$RefreshReg$"],"sources":["/Users/dorlevi/IdeaProjects/newShiftWise/client/src/components/EmployeesScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Modal from 'react-modal';\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { getUsers, removeCompanyFromUser, addUser, updateUserCompanies, updateUser } from '../services/userService';\nimport { removeUserFromCompany, addEmployeeToCompany } from '../services/companyService';\nimport Navbar from '../components/Navbar';\nimport '../styles/EmployeesScreen.css';\nimport '../styles/Navbar.css';\nimport employeesData from '../data/emps.json'; // יש לוודא שהקובץ נמצא בתיקייה data\n\nModal.setAppElement('#root');\n\nfunction EmployeesScreen() {\n    const [employees, setEmployees] = useState([]);\n    const [newEmployee, setNewEmployee] = useState({ name: '', email: '', phone: '', role: 'employee', password: '' });\n    const [isLoading, setIsLoading] = useState(true);\n    const [error, setError] = useState('');\n    const [loggedUser, setLoggedUser] = useState(null);\n    const [isModalOpen, setIsModalOpen] = useState(false);\n    const [openCards, setOpenCards] = useState({});\n    const [editEmployee, setEditEmployee] = useState(null);\n    const [isEditModalOpen, setIsEditModalOpen] = useState(false);\n\n    useEffect(() => {\n        const fetchEmployees = async () => {\n            try {\n                const loggedUser = JSON.parse(localStorage.getItem('user'));\n                setLoggedUser(loggedUser);\n                const companyId = loggedUser?.company?.id;\n\n                if (!companyId) {\n                    setError('No company information found.');\n                    return;\n                }\n\n                const data = await getUsers();\n                const usersWithIds = data ? Object.entries(data).map(([id, user]) => ({ id, ...user })) : [];\n                const filteredEmployees = usersWithIds.filter((user) =>\n                    user.companyIds?.some((company) => company.companyId === companyId)\n                );\n\n                setEmployees(filteredEmployees);\n            } catch (err) {\n                setError('Failed to fetch employees.');\n            } finally {\n                setIsLoading(false);\n            }\n        };\n\n        fetchEmployees();\n    }, []);\n\n    const handleDelete = async (userId) => {\n        try {\n            const companyId = loggedUser?.company?.id;\n\n            if (!companyId) {\n                toast.error('No company information found. Please try again.');\n                return;\n            }\n\n            await removeCompanyFromUser(userId, companyId);\n            await removeUserFromCompany(companyId, userId);\n\n            setEmployees(employees.filter((employee) => employee.id !== userId));\n            toast.success('Employee deleted successfully!');\n        } catch (err) {\n            toast.error('Failed to delete employee.');\n            console.error(err);\n        }\n    };\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        setNewEmployee((prev) => ({ ...prev, [name]: value }));\n    };\n\n    const handleAddEmployee = async (e) => {\n        e.preventDefault();\n        try {\n            const company = loggedUser?.company;\n\n            if (!company) {\n                toast.error('No company information found. Please try again.');\n                return;\n            }\n\n            const allUsers = await getUsers();\n            const existingUser = Object.values(allUsers).find((user) => user.email === newEmployee.email);\n\n            if (existingUser) {\n                await updateUserCompanies(existingUser, company);\n                await addEmployeeToCompany(company.id, existingUser.id);\n\n                const isUserInUI = employees.some((employee) => employee.id === existingUser.id);\n                if (!isUserInUI) {\n                    setEmployees((prev) => [...prev, existingUser]);\n                }\n\n                toast.info('User already exists, added to the company successfully.');\n            } else {\n                const addedEmployee = await addUser(newEmployee);\n                await updateUserCompanies(addedEmployee, company);\n                await addEmployeeToCompany(company.id, addedEmployee.id);\n\n                setEmployees((prev) => [...prev, { id: addedEmployee.id, ...addedEmployee }]);\n                toast.success('New user added successfully!');\n            }\n\n            setNewEmployee({ name: '', email: '', phone: '', role: 'employee', password: '' });\n            setIsModalOpen(false);\n        } catch (err) {\n            toast.error('Failed to add employee.');\n            console.error(err);\n        }\n    };\n\n    const toggleCard = (id) => {\n        setOpenCards((prev) => ({\n            ...prev,\n            [id]: !prev[id],\n        }));\n    };\n\n    const handleEditClick = (employee) => {\n        setEditEmployee(employee); // הגדרת העובד הנבחר לעריכה\n        setIsEditModalOpen(true); // פתיחת המודל\n    };\n\n\n    const handleLoadEmployeesFromJSON = async () => {\n        try {\n            if (!loggedUser || !loggedUser.company) {\n                toast.error('No company information found. Please try again.');\n                return;\n            }\n\n            const companyId = loggedUser.company.id;\n            const allUsers = await getUsers();\n\n            const newEmployees = employeesData.filter((employee) =>\n                !Object.values(allUsers).some((existingUser) => existingUser.email === employee.email)\n            );\n\n            for (const employee of newEmployees) {\n                const addedEmployee = await addUser(employee);\n                await updateUserCompanies(addedEmployee, loggedUser.company);\n                await addEmployeeToCompany(companyId, addedEmployee.id);\n            }\n\n            const updatedUsers = await getUsers();\n            const usersWithIds = Object.entries(updatedUsers).map(([id, user]) => ({ id, ...user }));\n            const filteredEmployees = usersWithIds.filter((user) =>\n                user.companyIds?.some((company) => company.companyId === companyId)\n            );\n\n            setEmployees(filteredEmployees);\n            toast.success(`${newEmployees.length} employees added successfully!`);\n        } catch (error) {\n            toast.error('Failed to load employees from JSON.');\n            console.error(error);\n        }\n    };\n\n    return (\n        <div>\n            <Navbar />\n            <div className=\"navbar-placeholder\"></div>\n            <div className=\"employees-container\">\n                <h1>Employees</h1>\n\n                {isLoading ? (\n                    <p>Loading employees...</p>\n                ) : error ? (\n                    <p className=\"error\">{error}</p>\n                ) : (\n                    <div className=\"employees-cards\">\n                        {employees.map((employee) => (\n                            <div\n                                key={employee.id}\n                                className={`employee-card ${openCards[employee.id] ? 'open' : 'closed'}`}\n                                onClick={() => toggleCard(employee.id)}\n                            >\n                                <h3>{employee.name}</h3>\n                                {openCards[employee.id] && (\n                                    <div className=\"employee-details\">\n                                        <p>Email: {employee.email}</p>\n                                        <p>Phone: {employee.phone}</p>\n                                        <p>Role: {employee.role}</p>\n                                        <div className=\"employee-actions\">\n                                            <button\n                                                className=\"action-button edit\"\n                                                onClick={(e) => {\n                                                    e.stopPropagation();\n                                                    handleEditClick(employee); // פתיחת מודל העריכה\n                                                }}\n                                            >\n                                                Edit\n                                            </button>\n\n                                            {employee.role !== 'admin' && (\n                                                <button\n                                                    className=\"action-button delete\"\n                                                    onClick={(e) => {\n                                                        e.stopPropagation();\n                                                        handleDelete(employee.id);\n                                                    }}\n                                                >\n                                                    Delete\n                                                </button>\n                                            )}\n\n                                        </div>\n                                    </div>\n                                )}\n                            </div>\n                        ))}\n\n                    </div>\n                )}\n\n                <button\n                    className=\"toggle-form-button\"\n                    onClick={() => setIsModalOpen(true)}\n                >\n                    Add New Employee\n                </button>\n                {/* 🔹 כפתור חדש להוספת עובדים מקובץ JSON */}\n                <button className=\"toggle-form-button\" onClick={handleAddEmployeesFromJson}>\n                    Add Employees from JSON\n                </button>\n\n                <Modal\n                    isOpen={isModalOpen}\n                    onRequestClose={() => setIsModalOpen(false)}\n                    className=\"modal\"\n                    overlayClassName=\"modal-overlay\"\n                >\n                    <h3>Add New Employee</h3>\n                    <form className=\"addOrEdit-employee-form\" onSubmit={handleAddEmployee}>\n                        <label>Name:</label>\n                        <input\n                            type=\"text\"\n                            name=\"name\"\n                            value={newEmployee.name}\n                            onChange={handleChange}\n                            required\n                        />\n                        <label>Email:</label>\n                        <input\n                            type=\"email\"\n                            name=\"email\"\n                            value={newEmployee.email}\n                            onChange={handleChange}\n                            required\n                        />\n                        <label>Phone:</label>\n                        <input\n                            type=\"text\"\n                            name=\"phone\"\n                            value={newEmployee.phone}\n                            onChange={handleChange}\n                            required\n                        />\n                        <label>Password:</label>\n                        <input\n                            type=\"password\"\n                            name=\"password\"\n                            value={newEmployee.password}\n                            onChange={handleChange}\n                            required\n                        />\n                        <label>Role:</label>\n                        <select name=\"role\" value={newEmployee.role} onChange={handleChange}>\n                            <option value=\"employee\">Employee</option>\n                            <option value=\"admin\">Admin</option>\n                        </select>\n                        <button type=\"submit\">Add Employee</button>\n                        <button\n                            type=\"button\"\n                            onClick={() => setIsModalOpen(false)}\n                            className=\"cancel-button\"\n                        >\n                            Cancel\n                        </button>\n                    </form>\n                </Modal>\n                <Modal\n                    isOpen={isEditModalOpen}\n                    onRequestClose={() => setIsEditModalOpen(false)}\n                    className=\"modal\"\n                    overlayClassName=\"modal-overlay\"\n                >\n                    <h3>Edit Employee</h3>\n                    <form\n                        className=\"addOrEdit-employee-form\"\n                        onSubmit={async (e) => {\n                            e.preventDefault();\n                            try {\n                                if (editEmployee && editEmployee.id) {\n                                    // קריאה ל-updateUser עם הפרטים המעודכנים\n                                    const updatedEmployee = await updateUser(editEmployee.id, {\n                                        name: editEmployee.name,\n                                        email: editEmployee.email,\n                                        phone: editEmployee.phone,\n                                        role: editEmployee.role,\n                                    });\n\n                                    // עדכון רשימת העובדים ב-UI עם הפרטים החדשים\n                                    setEmployees((prevEmployees) =>\n                                        prevEmployees.map((employee) =>\n                                            employee.id === updatedEmployee.id ? updatedEmployee : employee\n                                        )\n                                    );\n\n                                    toast.success('Employee updated successfully!');\n                                }\n\n                                setIsEditModalOpen(false); // סגירת המודל\n                            } catch (err) {\n                                toast.error('Failed to update employee. Please try again.');\n                                console.error(err);\n                            }\n                        }}\n                    >\n\n                        <label>Name:</label>\n                        <input\n                            type=\"text\"\n                            name=\"name\"\n                            value={editEmployee?.name || ''}\n                            onChange={(e) =>\n                                setEditEmployee((prev) => ({ ...prev, name: e.target.value }))\n                            }\n                            required\n                        />\n                        <label>Email:</label>\n                        <input\n                            type=\"email\"\n                            name=\"email\"\n                            value={editEmployee?.email || ''}\n                            onChange={(e) =>\n                                setEditEmployee((prev) => ({ ...prev, email: e.target.value }))\n                            }\n                            required\n                        />\n                        <label>Phone:</label>\n                        <input\n                            type=\"text\"\n                            name=\"phone\"\n                            value={editEmployee?.phone || ''}\n                            onChange={(e) =>\n                                setEditEmployee((prev) => ({ ...prev, phone: e.target.value }))\n                            }\n                            required\n                        />\n                        <label>Role:</label>\n                        <select\n                            name=\"role\"\n                            value={editEmployee?.role || ''}\n                            onChange={(e) =>\n                                setEditEmployee((prev) => ({ ...prev, role: e.target.value }))\n                            }\n                        >\n                            <option value=\"employee\">Employee</option>\n                            <option value=\"admin\">Admin</option>\n                        </select>\n                        <button type=\"submit\">Save Changes</button>\n                        <button\n                            type=\"button\"\n                            onClick={() => setIsEditModalOpen(false)}\n                            className=\"cancel-button\"\n                        >\n                            Cancel\n                        </button>\n                    </form>\n                </Modal>\n\n            </div>\n            <ToastContainer />\n        </div>\n    );\n}\n\nexport default EmployeesScreen;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}