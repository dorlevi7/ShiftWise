{"ast":null,"code":"// Convert a file object (e.g., image) to a Base64-encoded string using FileReader\nexport const fileToBase64 = file => {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n\n    // Resolve with the result when reading is complete\n    reader.onloadend = () => resolve(reader.result);\n\n    // Reject the promise if an error occurs\n    reader.onerror = reject;\n\n    // Start reading the file as a Data URL (Base64 string)\n    reader.readAsDataURL(file);\n  });\n};","map":{"version":3,"names":["fileToBase64","file","Promise","resolve","reject","reader","FileReader","onloadend","result","onerror","readAsDataURL"],"sources":["/Users/dorlevi/IdeaProjects/newShiftWise/client/src/utils/fileUtils.js"],"sourcesContent":["// Convert a file object (e.g., image) to a Base64-encoded string using FileReader\nexport const fileToBase64 = (file) => {\n    return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n\n        // Resolve with the result when reading is complete\n        reader.onloadend = () => resolve(reader.result);\n\n        // Reject the promise if an error occurs\n        reader.onerror = reject;\n\n        // Start reading the file as a Data URL (Base64 string)\n        reader.readAsDataURL(file);\n    });\n};\n"],"mappings":"AAAA;AACA,OAAO,MAAMA,YAAY,GAAIC,IAAI,IAAK;EAClC,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;IACpC,MAAMC,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;;IAE/B;IACAD,MAAM,CAACE,SAAS,GAAG,MAAMJ,OAAO,CAACE,MAAM,CAACG,MAAM,CAAC;;IAE/C;IACAH,MAAM,CAACI,OAAO,GAAGL,MAAM;;IAEvB;IACAC,MAAM,CAACK,aAAa,CAACT,IAAI,CAAC;EAC9B,CAAC,CAAC;AACN,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}