{"ast":null,"code":"// src/utils/validationUtils.js\n\nexport const isValidEmail = email => {\n  const regex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  return typeof email === 'string' && regex.test(email.trim());\n};\nexport const isValidPhone = phone => {\n  const regex = /^\\+?\\d{7,15}$/;\n  return typeof phone === 'string' && regex.test(phone.trim());\n};\nexport const isNonEmpty = value => {\n  return typeof value === 'string' && value.trim().length > 0;\n};\nexport const isStrongPassword = password => {\n  return typeof password === 'string' && password.length >= 6;\n};\nexport const validateSignupForm = (company, admin) => {\n  const errors = [];\n\n  // Company\n  if (!isNonEmpty(company.name)) errors.push('Company name is required.');\n  if (!isNonEmpty(company.address)) errors.push('Company address is required.');\n  if (!isValidPhone(company.phone)) errors.push('Invalid company phone number.');\n  if (!isValidEmail(company.email)) errors.push('Invalid company email address.');\n\n  // Admin\n  if (!isNonEmpty(admin.name)) errors.push('Admin name is required.');\n  if (!isValidPhone(admin.phone)) errors.push('Invalid admin phone number.');\n  if (!isValidEmail(admin.email)) errors.push('Invalid admin email address.');\n  if (!isStrongPassword(admin.password)) errors.push('Password must be at least 6 characters.');\n  return errors;\n};","map":{"version":3,"names":["isValidEmail","email","regex","test","trim","isValidPhone","phone","isNonEmpty","value","length","isStrongPassword","password","validateSignupForm","company","admin","errors","name","push","address"],"sources":["/Users/dorlevi/IdeaProjects/newShiftWise/client/src/utils/validationUtils.js"],"sourcesContent":["// src/utils/validationUtils.js\n\nexport const isValidEmail = (email) => {\n    const regex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return typeof email === 'string' && regex.test(email.trim());\n};\n\nexport const isValidPhone = (phone) => {\n    const regex = /^\\+?\\d{7,15}$/;\n    return typeof phone === 'string' && regex.test(phone.trim());\n};\n\nexport const isNonEmpty = (value) => {\n    return typeof value === 'string' && value.trim().length > 0;\n};\n\nexport const isStrongPassword = (password) => {\n    return typeof password === 'string' && password.length >= 6;\n};\n\nexport const validateSignupForm = (company, admin) => {\n    const errors = [];\n\n    // Company\n    if (!isNonEmpty(company.name)) errors.push('Company name is required.');\n    if (!isNonEmpty(company.address)) errors.push('Company address is required.');\n    if (!isValidPhone(company.phone)) errors.push('Invalid company phone number.');\n    if (!isValidEmail(company.email)) errors.push('Invalid company email address.');\n\n    // Admin\n    if (!isNonEmpty(admin.name)) errors.push('Admin name is required.');\n    if (!isValidPhone(admin.phone)) errors.push('Invalid admin phone number.');\n    if (!isValidEmail(admin.email)) errors.push('Invalid admin email address.');\n    if (!isStrongPassword(admin.password)) errors.push('Password must be at least 6 characters.');\n\n    return errors;\n};\n"],"mappings":"AAAA;;AAEA,OAAO,MAAMA,YAAY,GAAIC,KAAK,IAAK;EACnC,MAAMC,KAAK,GAAG,4BAA4B;EAC1C,OAAO,OAAOD,KAAK,KAAK,QAAQ,IAAIC,KAAK,CAACC,IAAI,CAACF,KAAK,CAACG,IAAI,CAAC,CAAC,CAAC;AAChE,CAAC;AAED,OAAO,MAAMC,YAAY,GAAIC,KAAK,IAAK;EACnC,MAAMJ,KAAK,GAAG,eAAe;EAC7B,OAAO,OAAOI,KAAK,KAAK,QAAQ,IAAIJ,KAAK,CAACC,IAAI,CAACG,KAAK,CAACF,IAAI,CAAC,CAAC,CAAC;AAChE,CAAC;AAED,OAAO,MAAMG,UAAU,GAAIC,KAAK,IAAK;EACjC,OAAO,OAAOA,KAAK,KAAK,QAAQ,IAAIA,KAAK,CAACJ,IAAI,CAAC,CAAC,CAACK,MAAM,GAAG,CAAC;AAC/D,CAAC;AAED,OAAO,MAAMC,gBAAgB,GAAIC,QAAQ,IAAK;EAC1C,OAAO,OAAOA,QAAQ,KAAK,QAAQ,IAAIA,QAAQ,CAACF,MAAM,IAAI,CAAC;AAC/D,CAAC;AAED,OAAO,MAAMG,kBAAkB,GAAGA,CAACC,OAAO,EAAEC,KAAK,KAAK;EAClD,MAAMC,MAAM,GAAG,EAAE;;EAEjB;EACA,IAAI,CAACR,UAAU,CAACM,OAAO,CAACG,IAAI,CAAC,EAAED,MAAM,CAACE,IAAI,CAAC,2BAA2B,CAAC;EACvE,IAAI,CAACV,UAAU,CAACM,OAAO,CAACK,OAAO,CAAC,EAAEH,MAAM,CAACE,IAAI,CAAC,8BAA8B,CAAC;EAC7E,IAAI,CAACZ,YAAY,CAACQ,OAAO,CAACP,KAAK,CAAC,EAAES,MAAM,CAACE,IAAI,CAAC,+BAA+B,CAAC;EAC9E,IAAI,CAACjB,YAAY,CAACa,OAAO,CAACZ,KAAK,CAAC,EAAEc,MAAM,CAACE,IAAI,CAAC,gCAAgC,CAAC;;EAE/E;EACA,IAAI,CAACV,UAAU,CAACO,KAAK,CAACE,IAAI,CAAC,EAAED,MAAM,CAACE,IAAI,CAAC,yBAAyB,CAAC;EACnE,IAAI,CAACZ,YAAY,CAACS,KAAK,CAACR,KAAK,CAAC,EAAES,MAAM,CAACE,IAAI,CAAC,6BAA6B,CAAC;EAC1E,IAAI,CAACjB,YAAY,CAACc,KAAK,CAACb,KAAK,CAAC,EAAEc,MAAM,CAACE,IAAI,CAAC,8BAA8B,CAAC;EAC3E,IAAI,CAACP,gBAAgB,CAACI,KAAK,CAACH,QAAQ,CAAC,EAAEI,MAAM,CAACE,IAAI,CAAC,yCAAyC,CAAC;EAE7F,OAAOF,MAAM;AACjB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}