{"ast":null,"code":"var _jsxFileName = \"/Users/dorlevi/IdeaProjects/newShiftWise/client/src/components/HomeScreen.js\",\n  _s = $RefreshSig$();\n// External libraries\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\n// Components\nimport Navbar from './Navbar';\nimport BackgroundWrapper from './Layouts/BackgroundWrapper';\nimport Loader from './Common/Loader';\n\n// Styles\nimport '../styles/HomeScreen.css';\nimport '../styles/Navbar.css';\n\n// Services\nimport { getAvailability, fetchPublishStatus } from '../services/availabilityService';\nimport { getAdminMessage, saveAdminMessage } from '../services/homeService';\n\n// Utilities\nimport { calculateWeekKey } from '../utils/utils';\n\n// Third-party Libraries\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction HomeScreen() {\n  _s();\n  var _userData$company;\n  const [userData, setUserData] = useState(null);\n  const navigate = useNavigate();\n  const [scheduleByDate, setScheduleByDate] = useState({\n    current: [],\n    next: []\n  });\n  const [weeklyStats, setWeeklyStats] = useState({\n    totalShifts: 0,\n    nextShift: null\n  });\n  const [adminMessage, setAdminMessage] = useState('');\n  const [isSaving, setIsSaving] = useState(false);\n  useEffect(() => {\n    window.scrollTo({\n      top: 0\n    });\n  }, []);\n  useEffect(() => {\n    const fetchAdminMessage = async () => {\n      if (userData) {\n        try {\n          const messageData = await getAdminMessage(userData.company.id);\n          setAdminMessage(messageData.message || '');\n        } catch (error) {\n          console.error('Failed to load admin message:', error);\n        }\n      }\n    };\n    fetchAdminMessage();\n  }, [userData]);\n  const handleSaveAdminMessage = async () => {\n    try {\n      setIsSaving(true);\n      await saveAdminMessage(userData.company.id, adminMessage);\n      toast.success('Message saved!');\n    } catch (error) {\n      toast.error('Failed to save message');\n    } finally {\n      setIsSaving(false);\n    }\n  };\n  useEffect(() => {\n    const loggedUser = JSON.parse(localStorage.getItem('user'));\n    if (!loggedUser) {\n      navigate('/');\n    } else {\n      setUserData(loggedUser);\n    }\n  }, [navigate]);\n  useEffect(() => {\n    const fetchShifts = async () => {\n      if (!userData) return;\n      const companyId = userData.company.id;\n      const userId = userData.user.id;\n      const weekOffsets = [0, 1];\n      const allWeeks = {};\n      const shifts = ['Morning', 'Noon', 'Evening', 'Night'];\n      const shiftTimes = {\n        Morning: '06:00-14:00',\n        Noon: '10:00-18:00',\n        Evening: '14:00-22:00',\n        Night: '22:00-06:00'\n      };\n      const days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n      for (let offset of weekOffsets) {\n        var _statusObj$status;\n        const weekKey = calculateWeekKey(offset);\n        const statusObj = await fetchPublishStatus(companyId, weekKey);\n        const isPublished = (_statusObj$status = statusObj === null || statusObj === void 0 ? void 0 : statusObj.status) !== null && _statusObj$status !== void 0 ? _statusObj$status : false;\n        if (!isPublished) {\n          allWeeks[offset === 0 ? 'current' : 'next'] = [];\n          continue;\n        }\n        const availability = await getAvailability(companyId, weekKey, userId);\n        const startOfWeek = new Date();\n        startOfWeek.setDate(startOfWeek.getDate() + offset * 7 - startOfWeek.getDay());\n        const formatted = [];\n        days.forEach((day, i) => {\n          const date = new Date(startOfWeek);\n          date.setDate(startOfWeek.getDate() + i);\n          const dateStr = date.toLocaleDateString('en-GB');\n          shifts.forEach(shift => {\n            var _availability$shift, _availability$shift$d;\n            const status = availability === null || availability === void 0 ? void 0 : (_availability$shift = availability[shift]) === null || _availability$shift === void 0 ? void 0 : (_availability$shift$d = _availability$shift[day]) === null || _availability$shift$d === void 0 ? void 0 : _availability$shift$d.status;\n            if (status === 'selected') {\n              formatted.push({\n                date: dateStr,\n                day,\n                shift,\n                time: shiftTimes[shift]\n              });\n            }\n          });\n        });\n        allWeeks[offset === 0 ? 'current' : 'next'] = formatted;\n      }\n      const allShifts = [...(allWeeks.current || []), ...(allWeeks.next || [])];\n      const allShiftsSorted = allShifts.sort((a, b) => {\n        const [dayA, monthA, yearA] = a.date.split('/').map(Number);\n        const [dayB, monthB, yearB] = b.date.split('/').map(Number);\n        const dateA = new Date(yearA, monthA - 1, dayA);\n        const dateB = new Date(yearB, monthB - 1, dayB);\n        return dateA - dateB;\n      });\n      const now = new Date();\n      const nextShift = allShiftsSorted.find(item => {\n        const [day, month, year] = item.date.split('/').map(Number);\n        const [startHour, startMinute] = item.time.split('-')[0].split(':').map(Number);\n        const shiftDateTime = new Date(year, month - 1, day, startHour, startMinute);\n        return shiftDateTime >= now;\n      });\n      setScheduleByDate(allWeeks);\n      setWeeklyStats({\n        totalShifts: allShifts.length,\n        nextShift\n      });\n    };\n    fetchShifts();\n  }, [userData]);\n  if (!userData) {\n    return /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 16\n    }, this);\n  }\n  const greeting = () => {\n    const hour = new Date().getHours();\n    if (hour < 12) return 'Good morning';\n    if (hour < 18) return 'Good afternoon';\n    return 'Good evening';\n  };\n  const todayStr = new Date().toLocaleDateString('en-GB', {\n    weekday: 'long',\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric'\n  });\n  return /*#__PURE__*/_jsxDEV(BackgroundWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navbar-placeholder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"home-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"home-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"home-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: [greeting(), \", \", userData.user.name, \"!\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/images/ShiftWise_Owl_Home.png\",\n            alt: \"ShiftWise Owl\",\n            className: \"home-logo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            gap: '6px',\n            fontSize: '15px',\n            color: '#444',\n            fontWeight: 500,\n            marginBottom: '5px'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"today-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Today is\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"today-date\",\n              children: todayStr\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"company-inline\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"company-label\",\n            children: \"Company: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"company-name\",\n            children: ((_userData$company = userData.company) === null || _userData$company === void 0 ? void 0 : _userData$company.name) || \"N/A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"admin-message-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"\\uD83D\\uDCE2 Message from Admin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 25\n          }, this), userData.user.role === 'admin' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n              className: \"admin-message-textarea\",\n              value: adminMessage,\n              onChange: e => setAdminMessage(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleSaveAdminMessage,\n              className: \"action-button\",\n              disabled: isSaving,\n              style: {\n                marginTop: '10px'\n              },\n              children: isSaving ? 'Saving...' : 'Save Message'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              whiteSpace: 'pre-wrap'\n            },\n            children: adminMessage || 'No message from admin yet.'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"weekly-schedules\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Shifts for the current week\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 25\n          }, this), scheduleByDate.current.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: scheduleByDate.current.map((item, index) => {\n              const isNextShift = weeklyStats.nextShift && weeklyStats.nextShift.date === item.date && weeklyStats.nextShift.shift === item.shift && weeklyStats.nextShift.time === item.time;\n              return /*#__PURE__*/_jsxDEV(\"li\", {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: isNextShift ? 'next-shift' : '',\n                  children: [isNextShift && /*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      marginRight: '6px'\n                    },\n                    children: \"\\u23ED\\uFE0F\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 256,\n                    columnNumber: 65\n                  }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: item.date\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 257,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      margin: '0 6px'\n                    },\n                    children: \"\\u2013\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 258,\n                    columnNumber: 49\n                  }, this), item.shift, \" \\u2013 \", item.time]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 255,\n                  columnNumber: 45\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 41\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No shifts scheduled for the current week.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Shifts for next week\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 25\n          }, this), scheduleByDate.next.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: scheduleByDate.next.map((item, index) => {\n              const isNextShift = weeklyStats.nextShift && weeklyStats.nextShift.date === item.date && weeklyStats.nextShift.shift === item.shift && weeklyStats.nextShift.time === item.time;\n              return /*#__PURE__*/_jsxDEV(\"li\", {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: isNextShift ? 'next-shift' : '',\n                  children: [isNextShift && /*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      marginRight: '6px'\n                    },\n                    children: \"\\u23ED\\uFE0F\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 282,\n                    columnNumber: 65\n                  }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: item.date\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 283,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      margin: '0 6px'\n                    },\n                    children: \"\\u2013\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 284,\n                    columnNumber: 49\n                  }, this), item.shift, \" \\u2013 \", item.time]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 281,\n                  columnNumber: 45\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 41\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No shifts scheduled for next week.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"home-actions\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"action-button\",\n            onClick: () => navigate('/profile'),\n            children: \"Go to Profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 179,\n    columnNumber: 9\n  }, this);\n}\n_s(HomeScreen, \"iU/W7X8/ldX9bs8VJdHzo+y34j8=\", false, function () {\n  return [useNavigate];\n});\n_c = HomeScreen;\nexport default HomeScreen;\nvar _c;\n$RefreshReg$(_c, \"HomeScreen\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","Navbar","BackgroundWrapper","Loader","getAvailability","fetchPublishStatus","getAdminMessage","saveAdminMessage","calculateWeekKey","toast","ToastContainer","jsxDEV","_jsxDEV","Fragment","_Fragment","HomeScreen","_s","_userData$company","userData","setUserData","navigate","scheduleByDate","setScheduleByDate","current","next","weeklyStats","setWeeklyStats","totalShifts","nextShift","adminMessage","setAdminMessage","isSaving","setIsSaving","window","scrollTo","top","fetchAdminMessage","messageData","company","id","message","error","console","handleSaveAdminMessage","success","loggedUser","JSON","parse","localStorage","getItem","fetchShifts","companyId","userId","user","weekOffsets","allWeeks","shifts","shiftTimes","Morning","Noon","Evening","Night","days","offset","_statusObj$status","weekKey","statusObj","isPublished","status","availability","startOfWeek","Date","setDate","getDate","getDay","formatted","forEach","day","i","date","dateStr","toLocaleDateString","shift","_availability$shift","_availability$shift$d","push","time","allShifts","allShiftsSorted","sort","a","b","dayA","monthA","yearA","split","map","Number","dayB","monthB","yearB","dateA","dateB","now","find","item","month","year","startHour","startMinute","shiftDateTime","length","fileName","_jsxFileName","lineNumber","columnNumber","greeting","hour","getHours","todayStr","weekday","children","className","name","src","alt","style","display","justifyContent","alignItems","gap","fontSize","color","fontWeight","marginBottom","role","value","onChange","e","target","onClick","disabled","marginTop","whiteSpace","index","isNextShift","marginRight","margin","_c","$RefreshReg$"],"sources":["/Users/dorlevi/IdeaProjects/newShiftWise/client/src/components/HomeScreen.js"],"sourcesContent":["// External libraries\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\n// Components\nimport Navbar from './Navbar';\nimport BackgroundWrapper from './Layouts/BackgroundWrapper';\nimport Loader from './Common/Loader';\n\n// Styles\nimport '../styles/HomeScreen.css';\nimport '../styles/Navbar.css';\n\n// Services\nimport { getAvailability, fetchPublishStatus } from '../services/availabilityService';\nimport { getAdminMessage, saveAdminMessage } from '../services/homeService';\n\n// Utilities\nimport { calculateWeekKey } from '../utils/utils';\n\n// Third-party Libraries\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nfunction HomeScreen() {\n    const [userData, setUserData] = useState(null);\n    const navigate = useNavigate();\n    const [scheduleByDate, setScheduleByDate] = useState({ current: [], next: [] });\n    const [weeklyStats, setWeeklyStats] = useState({ totalShifts: 0, nextShift: null });\n    const [adminMessage, setAdminMessage] = useState('');\n    const [isSaving, setIsSaving] = useState(false);\n\n    useEffect(() => {\n        window.scrollTo({ top: 0 });\n    }, []);\n\n    useEffect(() => {\n        const fetchAdminMessage = async () => {\n            if (userData) {\n                try {\n                    const messageData = await getAdminMessage(userData.company.id);\n                    setAdminMessage(messageData.message || '');\n                } catch (error) {\n                    console.error('Failed to load admin message:', error);\n                }\n            }\n        };\n\n        fetchAdminMessage();\n    }, [userData]);\n\n    const handleSaveAdminMessage = async () => {\n        try {\n            setIsSaving(true);\n            await saveAdminMessage(userData.company.id, adminMessage);\n            toast.success('Message saved!');\n        } catch (error) {\n            toast.error('Failed to save message');\n        } finally {\n            setIsSaving(false);\n        }\n    };\n\n    useEffect(() => {\n        const loggedUser = JSON.parse(localStorage.getItem('user'));\n        if (!loggedUser) {\n            navigate('/');\n        } else {\n            setUserData(loggedUser);\n        }\n    }, [navigate]);\n\n    useEffect(() => {\n        const fetchShifts = async () => {\n            if (!userData) return;\n\n            const companyId = userData.company.id;\n            const userId = userData.user.id;\n            const weekOffsets = [0, 1];\n            const allWeeks = {};\n\n            const shifts = ['Morning', 'Noon', 'Evening', 'Night'];\n            const shiftTimes = {\n                Morning: '06:00-14:00',\n                Noon: '10:00-18:00',\n                Evening: '14:00-22:00',\n                Night: '22:00-06:00',\n            };\n\n            const days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n\n            for (let offset of weekOffsets) {\n                const weekKey = calculateWeekKey(offset);\n\n                const statusObj = await fetchPublishStatus(companyId, weekKey);\n                const isPublished = statusObj?.status ?? false;\n\n                if (!isPublished) {\n                    allWeeks[offset === 0 ? 'current' : 'next'] = [];\n                    continue;\n                }\n\n                const availability = await getAvailability(companyId, weekKey, userId);\n\n                const startOfWeek = new Date();\n                startOfWeek.setDate(startOfWeek.getDate() + offset * 7 - startOfWeek.getDay());\n\n                const formatted = [];\n\n                days.forEach((day, i) => {\n                    const date = new Date(startOfWeek);\n                    date.setDate(startOfWeek.getDate() + i);\n                    const dateStr = date.toLocaleDateString('en-GB');\n\n                    shifts.forEach((shift) => {\n                        const status = availability?.[shift]?.[day]?.status;\n                        if (status === 'selected') {\n                            formatted.push({\n                                date: dateStr,\n                                day,\n                                shift,\n                                time: shiftTimes[shift],\n                            });\n                        }\n                    });\n                });\n\n                allWeeks[offset === 0 ? 'current' : 'next'] = formatted;\n            }\n\n            const allShifts = [...(allWeeks.current || []), ...(allWeeks.next || [])];\n\n            const allShiftsSorted = allShifts.sort((a, b) => {\n                const [dayA, monthA, yearA] = a.date.split('/').map(Number);\n                const [dayB, monthB, yearB] = b.date.split('/').map(Number);\n                const dateA = new Date(yearA, monthA - 1, dayA);\n                const dateB = new Date(yearB, monthB - 1, dayB);\n                return dateA - dateB;\n            });\n\n            const now = new Date();\n            const nextShift = allShiftsSorted.find((item) => {\n                const [day, month, year] = item.date.split('/').map(Number);\n                const [startHour, startMinute] = item.time.split('-')[0].split(':').map(Number);\n                const shiftDateTime = new Date(year, month - 1, day, startHour, startMinute);\n                return shiftDateTime >= now;\n            });\n\n            setScheduleByDate(allWeeks);\n            setWeeklyStats({\n                totalShifts: allShifts.length,\n                nextShift\n            });\n        };\n\n        fetchShifts();\n    }, [userData]);\n\n\n    if (!userData) {\n        return <Loader />;\n    }\n\n    const greeting = () => {\n        const hour = new Date().getHours();\n        if (hour < 12) return 'Good morning';\n        if (hour < 18) return 'Good afternoon';\n        return 'Good evening';\n    };\n\n    const todayStr = new Date().toLocaleDateString('en-GB', {\n        weekday: 'long',\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric'\n    });\n\n    return (\n        <BackgroundWrapper>\n            <ToastContainer />\n            <Navbar />\n            <div className=\"navbar-placeholder\"></div>\n\n            <div className=\"home-wrapper\">\n\n                <div className=\"home-container\">\n\n                    <div className=\"home-header\">\n                        <h1>{greeting()}, {userData.user.name}!</h1>\n\n                        <img\n                            src=\"/images/ShiftWise_Owl_Home.png\"\n                            alt=\"ShiftWise Owl\"\n                            className=\"home-logo\"\n                        />\n                    </div>\n\n                    <div style={{\n                        display: 'flex',\n                        justifyContent: 'center',\n                        alignItems: 'center',\n                        gap: '6px',\n                        fontSize: '15px',\n                        color: '#444',\n                        fontWeight: 500,\n                        marginBottom: '5px'\n                    }}>\n                        <div className=\"today-container\">\n                            <span>Today is</span>\n                            <span className=\"today-date\">{todayStr}</span>\n                        </div>\n                    </div>\n\n                    <div className=\"company-inline\">\n                        <span className=\"company-label\">Company: </span>\n                        <span className=\"company-name\">{userData.company?.name || \"N/A\"}</span>\n                    </div>\n\n                    <div className=\"admin-message-box\">\n                        <h3>📢 Message from Admin</h3>\n                        {userData.user.role === 'admin' ? (\n                            <>\n                                <textarea\n                                    className=\"admin-message-textarea\"\n                                    value={adminMessage}\n                                    onChange={(e) => setAdminMessage(e.target.value)}\n                                />\n                                <button\n                                    onClick={handleSaveAdminMessage}\n                                    className=\"action-button\"\n                                    disabled={isSaving}\n                                    style={{ marginTop: '10px' }}\n                                >\n                                    {isSaving ? 'Saving...' : 'Save Message'}\n                                </button>\n                            </>\n                        ) : (\n                            <p style={{ whiteSpace: 'pre-wrap' }}>{adminMessage || 'No message from admin yet.'}</p>\n                        )}\n                    </div>\n\n                    <div className=\"weekly-schedules\">\n                        <h3>Shifts for the current week</h3>\n                        {scheduleByDate.current.length > 0 ? (\n                            <ul>\n                                {scheduleByDate.current.map((item, index) => {\n                                    const isNextShift =\n                                        weeklyStats.nextShift &&\n                                        weeklyStats.nextShift.date === item.date &&\n                                        weeklyStats.nextShift.shift === item.shift &&\n                                        weeklyStats.nextShift.time === item.time;\n\n                                    return (\n                                        <li key={index}>\n                                            <div className={isNextShift ? 'next-shift' : ''}>\n                                                {isNextShift && <span style={{ marginRight: '6px' }}>⏭️</span>}\n                                                <strong>{item.date}</strong>\n                                                <span style={{ margin: '0 6px' }}>–</span>\n                                                {item.shift} – {item.time}\n                                            </div>\n                                        </li>\n                                    );\n                                })}\n                            </ul>\n                        ) : (\n                            <p>No shifts scheduled for the current week.</p>\n                        )}\n\n                        <h3>Shifts for next week</h3>\n                        {scheduleByDate.next.length > 0 ? (\n                            <ul>\n                                {scheduleByDate.next.map((item, index) => {\n                                    const isNextShift =\n                                        weeklyStats.nextShift &&\n                                        weeklyStats.nextShift.date === item.date &&\n                                        weeklyStats.nextShift.shift === item.shift &&\n                                        weeklyStats.nextShift.time === item.time;\n\n                                    return (\n                                        <li key={index}>\n                                            <div className={isNextShift ? 'next-shift' : ''}>\n                                                {isNextShift && <span style={{ marginRight: '6px' }}>⏭️</span>}\n                                                <strong>{item.date}</strong>\n                                                <span style={{ margin: '0 6px' }}>–</span>\n                                                {item.shift} – {item.time}\n                                            </div>\n                                        </li>\n                                    );\n                                })}\n                            </ul>\n                        ) : (\n                            <p>No shifts scheduled for next week.</p>\n                        )}\n                    </div>\n\n                    <div className=\"home-actions\">\n                        <button className=\"action-button\" onClick={() => navigate('/profile')}>\n                            Go to Profile\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </BackgroundWrapper>\n    );\n}\n\nexport default HomeScreen;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}