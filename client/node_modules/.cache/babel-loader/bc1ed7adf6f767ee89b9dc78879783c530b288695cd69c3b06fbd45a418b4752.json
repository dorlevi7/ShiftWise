{"ast":null,"code":"const db = require('../config/firebase');\n\n// שמירת זמינות לשבוע מסוים תחת חברה מסוימת\nexports.saveAvailability = async (companyId, weekKey, userId, availability) => {\n  // הוספת סטטוס דיפולטי 'default' אם לא קיים\n  const updatedAvailability = availability.map(item => ({\n    ...item,\n    status: item.status || 'default' // אם לא קיים סטטוס, הוסף 'default'\n  }));\n  const ref = db.ref(`/companies/${companyId}/availability/${weekKey}/${userId}`);\n  await ref.set(updatedAvailability);\n};\n\n// שליפת זמינות לשבוע מסוים תחת חברה מסוימת עבור משתמש מסוים\nexports.getAvailability = async (companyId, weekKey, userId) => {\n  const ref = db.ref(`/companies/${companyId}/availability/${weekKey}/${userId}`);\n  const snapshot = await ref.once('value');\n  const data = snapshot.val();\n\n  // עדכון סטטוס ל-'default' אם אינו קיים\n  if (data) {\n    return data.map(item => ({\n      ...item,\n      status: item.status || 'default' // אם לא קיים סטטוס, הוסף 'default'\n    }));\n  }\n  return null; // מחזיר null אם אין נתונים\n};\n\n// שמירת הערות לשבוע מסוים תחת חברה ומשתמש\nexports.saveWeeklyNotes = async (companyId, weekKey, userId, notes) => {\n  const ref = db.ref(`/companies/${companyId}/availability/${weekKey}/${userId}/notes`);\n  await ref.set(notes);\n};\n\n// שליפת כל הזמינויות לשבוע מסוים תחת חברה מסוימת\nexports.getAllAvailabilities = async (companyId, weekKey) => {\n  const ref = db.ref(`/companies/${companyId}/availability/${weekKey}`);\n  const snapshot = await ref.once('value');\n  const data = snapshot.val() || {};\n\n  // עדכון סטטוס דיפולטי 'default' אם לא קיים\n  return Object.fromEntries(Object.entries(data).map(([userId, userAvailability]) => [userId, userAvailability.map(item => ({\n    ...item,\n    status: item.status || 'default'\n  }))]));\n};","map":{"version":3,"names":["db","require","exports","saveAvailability","companyId","weekKey","userId","availability","updatedAvailability","map","item","status","ref","set","getAvailability","snapshot","once","data","val","saveWeeklyNotes","notes","getAllAvailabilities","Object","fromEntries","entries","userAvailability"],"sources":["/Users/dorlevi/IdeaProjects/newShiftWise/client/src/services/availabilityService.js"],"sourcesContent":["const db = require('../config/firebase');\n\n// שמירת זמינות לשבוע מסוים תחת חברה מסוימת\nexports.saveAvailability = async (companyId, weekKey, userId, availability) => {\n    // הוספת סטטוס דיפולטי 'default' אם לא קיים\n    const updatedAvailability = availability.map(item => ({\n        ...item,\n        status: item.status || 'default', // אם לא קיים סטטוס, הוסף 'default'\n    }));\n\n    const ref = db.ref(`/companies/${companyId}/availability/${weekKey}/${userId}`);\n    await ref.set(updatedAvailability);\n};\n\n// שליפת זמינות לשבוע מסוים תחת חברה מסוימת עבור משתמש מסוים\nexports.getAvailability = async (companyId, weekKey, userId) => {\n    const ref = db.ref(`/companies/${companyId}/availability/${weekKey}/${userId}`);\n    const snapshot = await ref.once('value');\n    const data = snapshot.val();\n\n    // עדכון סטטוס ל-'default' אם אינו קיים\n    if (data) {\n        return data.map(item => ({\n            ...item,\n            status: item.status || 'default', // אם לא קיים סטטוס, הוסף 'default'\n        }));\n    }\n\n    return null; // מחזיר null אם אין נתונים\n};\n\n// שמירת הערות לשבוע מסוים תחת חברה ומשתמש\nexports.saveWeeklyNotes = async (companyId, weekKey, userId, notes) => {\n    const ref = db.ref(`/companies/${companyId}/availability/${weekKey}/${userId}/notes`);\n    await ref.set(notes);\n};\n\n// שליפת כל הזמינויות לשבוע מסוים תחת חברה מסוימת\nexports.getAllAvailabilities = async (companyId, weekKey) => {\n    const ref = db.ref(`/companies/${companyId}/availability/${weekKey}`);\n    const snapshot = await ref.once('value');\n    const data = snapshot.val() || {};\n\n    // עדכון סטטוס דיפולטי 'default' אם לא קיים\n    return Object.fromEntries(\n        Object.entries(data).map(([userId, userAvailability]) => [\n            userId,\n            userAvailability.map(item => ({\n                ...item,\n                status: item.status || 'default',\n            })),\n        ])\n    );\n};\n"],"mappings":"AAAA,MAAMA,EAAE,GAAGC,OAAO,CAAC,oBAAoB,CAAC;;AAExC;AACAC,OAAO,CAACC,gBAAgB,GAAG,OAAOC,SAAS,EAAEC,OAAO,EAAEC,MAAM,EAAEC,YAAY,KAAK;EAC3E;EACA,MAAMC,mBAAmB,GAAGD,YAAY,CAACE,GAAG,CAACC,IAAI,KAAK;IAClD,GAAGA,IAAI;IACPC,MAAM,EAAED,IAAI,CAACC,MAAM,IAAI,SAAS,CAAE;EACtC,CAAC,CAAC,CAAC;EAEH,MAAMC,GAAG,GAAGZ,EAAE,CAACY,GAAG,CAAC,cAAcR,SAAS,iBAAiBC,OAAO,IAAIC,MAAM,EAAE,CAAC;EAC/E,MAAMM,GAAG,CAACC,GAAG,CAACL,mBAAmB,CAAC;AACtC,CAAC;;AAED;AACAN,OAAO,CAACY,eAAe,GAAG,OAAOV,SAAS,EAAEC,OAAO,EAAEC,MAAM,KAAK;EAC5D,MAAMM,GAAG,GAAGZ,EAAE,CAACY,GAAG,CAAC,cAAcR,SAAS,iBAAiBC,OAAO,IAAIC,MAAM,EAAE,CAAC;EAC/E,MAAMS,QAAQ,GAAG,MAAMH,GAAG,CAACI,IAAI,CAAC,OAAO,CAAC;EACxC,MAAMC,IAAI,GAAGF,QAAQ,CAACG,GAAG,CAAC,CAAC;;EAE3B;EACA,IAAID,IAAI,EAAE;IACN,OAAOA,IAAI,CAACR,GAAG,CAACC,IAAI,KAAK;MACrB,GAAGA,IAAI;MACPC,MAAM,EAAED,IAAI,CAACC,MAAM,IAAI,SAAS,CAAE;IACtC,CAAC,CAAC,CAAC;EACP;EAEA,OAAO,IAAI,CAAC,CAAC;AACjB,CAAC;;AAED;AACAT,OAAO,CAACiB,eAAe,GAAG,OAAOf,SAAS,EAAEC,OAAO,EAAEC,MAAM,EAAEc,KAAK,KAAK;EACnE,MAAMR,GAAG,GAAGZ,EAAE,CAACY,GAAG,CAAC,cAAcR,SAAS,iBAAiBC,OAAO,IAAIC,MAAM,QAAQ,CAAC;EACrF,MAAMM,GAAG,CAACC,GAAG,CAACO,KAAK,CAAC;AACxB,CAAC;;AAED;AACAlB,OAAO,CAACmB,oBAAoB,GAAG,OAAOjB,SAAS,EAAEC,OAAO,KAAK;EACzD,MAAMO,GAAG,GAAGZ,EAAE,CAACY,GAAG,CAAC,cAAcR,SAAS,iBAAiBC,OAAO,EAAE,CAAC;EACrE,MAAMU,QAAQ,GAAG,MAAMH,GAAG,CAACI,IAAI,CAAC,OAAO,CAAC;EACxC,MAAMC,IAAI,GAAGF,QAAQ,CAACG,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC;;EAEjC;EACA,OAAOI,MAAM,CAACC,WAAW,CACrBD,MAAM,CAACE,OAAO,CAACP,IAAI,CAAC,CAACR,GAAG,CAAC,CAAC,CAACH,MAAM,EAAEmB,gBAAgB,CAAC,KAAK,CACrDnB,MAAM,EACNmB,gBAAgB,CAAChB,GAAG,CAACC,IAAI,KAAK;IAC1B,GAAGA,IAAI;IACPC,MAAM,EAAED,IAAI,CAACC,MAAM,IAAI;EAC3B,CAAC,CAAC,CAAC,CACN,CACL,CAAC;AACL,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}