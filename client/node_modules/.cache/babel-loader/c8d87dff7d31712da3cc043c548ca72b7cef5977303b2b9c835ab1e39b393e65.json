{"ast":null,"code":"var _jsxFileName = \"/Users/dorlevi/IdeaProjects/newShiftWise/client/src/components/EmployeesScreen.js\",\n  _s = $RefreshSig$();\n// React & state\nimport React, { useState, useEffect } from 'react';\n\n// UI Components & Libraries\nimport Modal from 'react-modal';\nimport { toast, ToastContainer } from 'react-toastify';\nimport { ThreeDots } from 'react-loader-spinner';\nimport Navbar from '../components/Navbar';\nimport Loader from './Loader';\nimport BackgroundWrapper from './BackgroundWrapper';\n\n// Styles\nimport 'react-toastify/dist/ReactToastify.css';\nimport '../styles/EmployeesScreen.css';\nimport '../styles/Navbar.css';\n\n// Data\nimport employeesData from '../data/emps.json'; // יש לוודא שהקובץ נמצא בתיקייה data\n\n// Services\nimport { getUsers, removeCompanyFromUser, addUser, updateUserCompanies, updateUser } from '../services/userService';\nimport { removeUserFromCompany, addEmployeeToCompany } from '../services/companyService';\nimport { sendNotification } from '../services/notificationService';\nimport { fileToBase64 } from '../utils/fileUtils';\nimport EditProfileModal from '../components/EditProfileModal';\nimport { updateUserInLocalStorage } from '../utils/userUtils'; // ודא שזה מיובא\n\nimport { getPhotoDataUrl, findExistingUser, associateUserWithCompany, createAndAddNewEmployee, resetNewEmployeeForm } from '../utils/employeeUtils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nModal.setAppElement('#root');\nfunction EmployeesScreen() {\n  _s();\n  // Employees data\n  const [employees, setEmployees] = useState([]);\n\n  // Form data\n  const [newEmployee, setNewEmployee] = useState({\n    name: '',\n    email: '',\n    phone: '',\n    role: 'employee',\n    password: '',\n    photoFile: null\n  });\n\n  // App state\n  const [isLoading, setIsLoading] = useState(true);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [error, setError] = useState('');\n  const [loggedUser, setLoggedUser] = useState(null);\n\n  // Modals\n  const [isAddEmployeeModalOpen, setIsAddEmployeeModalOpen] = useState(false);\n  const [isEditModalOpen, setIsEditModalOpen] = useState(false);\n  const [isConfirmDeleteModalOpen, setIsConfirmDeleteModalOpen] = useState(false);\n\n  // Edit/delete handlers\n  const [editEmployee, setEditEmployee] = useState(null);\n  const [employeeToDelete, setEmployeeToDelete] = useState(null);\n\n  // UI helpers\n  const [openCards, setOpenCards] = useState({});\n  const [searchQuery, setSearchQuery] = useState('');\n  const [filterRole, setFilterRole] = useState('all');\n  const [isNotificationModalOpen, setIsNotificationModalOpen] = useState(false);\n  const [selectedNotificationRecipients, setSelectedNotificationRecipients] = useState([]);\n  const [notificationMessage, setNotificationMessage] = useState('');\n  useEffect(() => {\n    const loggedUser = JSON.parse(localStorage.getItem('user'));\n    console.log(\"🔐 Logged user from localStorage:\", loggedUser);\n    setLoggedUser(loggedUser);\n  }, []);\n  useEffect(() => {\n    const fetchEmployees = async () => {\n      try {\n        var _loggedUser$company;\n        const loggedUser = JSON.parse(localStorage.getItem('user'));\n        setLoggedUser(loggedUser);\n        const companyId = loggedUser === null || loggedUser === void 0 ? void 0 : (_loggedUser$company = loggedUser.company) === null || _loggedUser$company === void 0 ? void 0 : _loggedUser$company.id;\n        if (!companyId) {\n          setError('No company information found.');\n          return;\n        }\n        const data = await getUsers();\n        const usersWithIds = data ? Object.entries(data).map(([id, user]) => ({\n          id,\n          ...user\n        })) : [];\n        const filteredEmployees = usersWithIds.filter(user => {\n          var _user$companyIds;\n          return (_user$companyIds = user.companyIds) === null || _user$companyIds === void 0 ? void 0 : _user$companyIds.some(company => company.companyId === companyId);\n        });\n        setEmployees(filteredEmployees);\n      } catch (err) {\n        setError('Failed to fetch employees.');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchEmployees();\n  }, []);\n  const openConfirmDeleteModal = employee => {\n    setEmployeeToDelete(employee);\n    setIsConfirmDeleteModalOpen(true);\n  };\n  const closeConfirmDeleteModal = () => {\n    setIsConfirmDeleteModalOpen(false);\n    setEmployeeToDelete(null);\n  };\n  const handleDeleteConfirmed = async () => {\n    if (!employeeToDelete) return;\n    try {\n      var _loggedUser$company2;\n      const companyId = loggedUser === null || loggedUser === void 0 ? void 0 : (_loggedUser$company2 = loggedUser.company) === null || _loggedUser$company2 === void 0 ? void 0 : _loggedUser$company2.id;\n      if (!companyId) {\n        toast.error('No company information found. Please try again.');\n        return;\n      }\n      await removeCompanyFromUser(employeeToDelete.id, companyId);\n      await removeUserFromCompany(companyId, employeeToDelete.id);\n      setEmployees(employees.filter(employee => employee.id !== employeeToDelete.id));\n      toast.success('Employee deleted successfully!');\n    } catch (err) {\n      toast.error('Failed to delete employee.');\n      console.error(err);\n    } finally {\n      closeConfirmDeleteModal();\n    }\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewEmployee(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleAddEmployee = async e => {\n    e.preventDefault();\n    try {\n      const company = loggedUser === null || loggedUser === void 0 ? void 0 : loggedUser.company;\n      if (!company) return toast.error('No company information found.');\n      const photoDataUrl = await getPhotoDataUrl(newEmployee.photoFile);\n      const existingUser = await findExistingUser(newEmployee.email);\n      if (existingUser) {\n        await associateUserWithCompany(existingUser, company, employees, setEmployees);\n      } else {\n        await createAndAddNewEmployee(newEmployee, photoDataUrl, company, setEmployees);\n      }\n      resetNewEmployeeForm(setNewEmployee);\n      setIsAddEmployeeModalOpen(false);\n    } catch (err) {\n      toast.error('Failed to add employee.');\n      console.error(err);\n    }\n  };\n  const toggleCard = id => {\n    setOpenCards(prev => ({\n      ...prev,\n      [id]: !prev[id]\n    }));\n  };\n  const handleEditClick = employee => {\n    setEditEmployee(employee); // הגדרת העובד הנבחר לעריכה\n    setIsEditModalOpen(true); // פתיחת המודל\n  };\n  const handleLoadEmployeesFromJSON = async () => {\n    try {\n      if (!loggedUser || !loggedUser.company) {\n        toast.error('No company information found. Please try again.');\n        return;\n      }\n      setIsProcessing(true); // הפעלת ה-Loader\n\n      const companyId = loggedUser.company.id;\n      const allUsers = await getUsers();\n      const newEmployees = employeesData.filter(employee => {\n        var _existingUser$company;\n        const existingUser = Object.values(allUsers).find(user => user.email === employee.email);\n        if (!existingUser) {\n          return true; // משתמש לא קיים כלל - נוסיף אותו\n        }\n        const isInCompany = (_existingUser$company = existingUser.companyIds) === null || _existingUser$company === void 0 ? void 0 : _existingUser$company.some(company => company.companyId === companyId);\n        return !isInCompany; // אם הוא לא משויך לחברה, נוסיף אותו שוב\n      });\n      for (const employee of newEmployees) {\n        const existingUser = Object.values(allUsers).find(user => user.email === employee.email);\n        if (existingUser) {\n          await updateUserCompanies(existingUser, loggedUser.company);\n          await addEmployeeToCompany(companyId, existingUser.id);\n        } else {\n          const addedEmployee = await addUser(employee);\n          await updateUserCompanies(addedEmployee, loggedUser.company);\n          await addEmployeeToCompany(companyId, addedEmployee.id);\n        }\n      }\n      const updatedUsers = await getUsers();\n      const usersWithIds = Object.entries(updatedUsers).map(([id, user]) => ({\n        id,\n        ...user\n      }));\n      const filteredEmployees = usersWithIds.filter(user => {\n        var _user$companyIds2;\n        return (_user$companyIds2 = user.companyIds) === null || _user$companyIds2 === void 0 ? void 0 : _user$companyIds2.some(company => company.companyId === companyId);\n      });\n      setEmployees(filteredEmployees);\n      toast.success(`${newEmployees.length} employees added successfully!`);\n    } catch (error) {\n      toast.error('Failed to load employees from JSON.');\n      console.error(error);\n    } finally {\n      setIsProcessing(false); // כיבוי ה-Loader\n    }\n  };\n  const handleDeleteAllEmployees = async () => {\n    try {\n      if (!loggedUser || !loggedUser.company) {\n        toast.error('No company information found. Please try again.');\n        return;\n      }\n      setIsProcessing(true); // הפעלת ה-Loader\n\n      const companyId = loggedUser.company.id;\n      const employeesToDelete = employees.filter(employee => employee.role !== 'admin');\n      if (employeesToDelete.length === 0) {\n        toast.info('No employees to delete.');\n        return;\n      }\n      for (const employee of employeesToDelete) {\n        await removeCompanyFromUser(employee.id, companyId);\n        await removeUserFromCompany(companyId, employee.id);\n      }\n      setEmployees(employees.filter(employee => employee.role === 'admin'));\n      toast.success(`${employeesToDelete.length} employees deleted successfully!`);\n    } catch (err) {\n      toast.error('Failed to delete employees.');\n      console.error(err);\n    } finally {\n      setIsProcessing(false); // כיבוי ה-Loader\n    }\n  };\n  const filteredEmployees = employees.filter(employee => {\n    return (employee.name.toLowerCase().startsWith(searchQuery.toLowerCase()) || employee.email.toLowerCase().startsWith(searchQuery.toLowerCase())) && (filterRole === 'all' || employee.role === filterRole);\n  });\n  return /*#__PURE__*/_jsxDEV(BackgroundWrapper, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navbar-placeholder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"employees-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Employees\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Search by name or email...\",\n            value: searchQuery,\n            onChange: e => setSearchQuery(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: filterRole,\n            onChange: e => setFilterRole(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"all\",\n              children: \"All Roles\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"employee\",\n              children: \"Employee\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"admin\",\n              children: \"Admin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 21\n        }, this), isLoading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 25\n        }, this) : error ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"employees-cards\",\n          children: filteredEmployees.map(employee => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `employee-card ${openCards[employee.id] ? 'open' : 'closed'}`,\n            onClick: () => toggleCard(employee.id),\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: employee.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 37\n            }, this), openCards[employee.id] && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"employee-details-horizontal\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: employee.photoData || '/images/Profile.jpeg',\n                alt: `${employee.name}'s profile`,\n                className: \"employee-photo-horizontal\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"employee-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Email: \", employee.email]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 316,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Phone: \", employee.phone]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 317,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Role: \", employee.role]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 318,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"employee-actions\",\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"action-button edit\",\n                    onClick: e => {\n                      e.stopPropagation();\n                      handleEditClick(employee);\n                    },\n                    children: \"Edit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 320,\n                    columnNumber: 53\n                  }, this), employee.role !== 'admin' && /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"action-button delete\",\n                    onClick: e => {\n                      e.stopPropagation();\n                      openConfirmDeleteModal(employee);\n                    },\n                    children: \"Delete\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 330,\n                    columnNumber: 57\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 319,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 315,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 41\n            }, this)]\n          }, employee.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 25\n        }, this), isProcessing && /*#__PURE__*/_jsxDEV(ThreeDots, {\n          height: \"50\",\n          width: \"50\",\n          radius: \"9\",\n          color: \"#3498db\",\n          ariaLabel: \"processing\",\n          wrapperStyle: {\n            display: 'flex',\n            justifyContent: 'center',\n            marginTop: '20px'\n          },\n          visible: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"toggle-form-button\",\n          onClick: () => setIsAddEmployeeModalOpen(true),\n          children: \"Add New Employee\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"toggle-form-button\",\n          onClick: () => setIsNotificationModalOpen(true),\n          children: \"Send Notification\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"toggle-form-button\",\n          onClick: handleLoadEmployeesFromJSON,\n          children: \"Add Employees from JSON\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"toggle-form-button delete-all\",\n          onClick: handleDeleteAllEmployees,\n          children: \"Delete All Non-Admin Employees\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal, {\n          isOpen: isNotificationModalOpen,\n          onRequestClose: () => setIsNotificationModalOpen(false),\n          className: \"modal\",\n          overlayClassName: \"modal-overlay\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Send Notification to Employees\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"addOrEdit-employee-form notification-form\",\n            onSubmit: async e => {\n              e.preventDefault();\n              try {\n                var _loggedUser$company3;\n                const companyId = loggedUser === null || loggedUser === void 0 ? void 0 : (_loggedUser$company3 = loggedUser.company) === null || _loggedUser$company3 === void 0 ? void 0 : _loggedUser$company3.id;\n                const link = '/schedule';\n                for (const userId of selectedNotificationRecipients) {\n                  await sendNotification(companyId, userId, notificationMessage.trim(), link);\n                }\n                toast.success('Notifications sent!');\n                setIsNotificationModalOpen(false);\n                setSelectedNotificationRecipients([]);\n                setNotificationMessage('');\n              } catch (error) {\n                toast.error('Failed to send notifications.');\n                console.error(error);\n              }\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Select Recipients:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 417,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"select-all-checkbox\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: employees.filter(emp => emp.role !== 'admin').every(emp => selectedNotificationRecipients.includes(emp.id)),\n                onChange: e => {\n                  const isChecked = e.target.checked;\n                  const nonAdminIds = employees.filter(emp => emp.role !== 'admin').map(emp => emp.id);\n                  setSelectedNotificationRecipients(isChecked ? nonAdminIds : []);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 420,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Select All Employees\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 433,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 419,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"employee-checkboxes\",\n              children: employees.filter(emp => emp.role !== 'admin').map(emp => /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  checked: selectedNotificationRecipients.includes(emp.id),\n                  onChange: e => {\n                    if (e.target.checked) {\n                      setSelectedNotificationRecipients(prev => [...prev, emp.id]);\n                    } else {\n                      setSelectedNotificationRecipients(prev => prev.filter(id => id !== emp.id));\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 441,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    marginLeft: '6px'\n                  },\n                  children: emp.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 454,\n                  columnNumber: 45\n                }, this)]\n              }, emp.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 440,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 436,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Message:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 459,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              value: notificationMessage,\n              onChange: e => setNotificationMessage(e.target.value),\n              placeholder: \"Enter your message...\",\n              rows: 4\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 460,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"modal-buttons\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"confirm-button\",\n                disabled: selectedNotificationRecipients.length === 0 || !notificationMessage.trim(),\n                children: \"Send\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 468,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"cancel-button\",\n                onClick: () => setIsNotificationModalOpen(false),\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 475,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 467,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal, {\n          isOpen: isConfirmDeleteModalOpen,\n          onRequestClose: closeConfirmDeleteModal,\n          className: \"confirm-delete-modal\",\n          overlayClassName: \"modal-overlay\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Confirm Employee Deletion\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 494,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Are you sure you want to remove \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: employeeToDelete === null || employeeToDelete === void 0 ? void 0 : employeeToDelete.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 496,\n              columnNumber: 61\n            }, this), \" from the company?\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 495,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"confirm-button\",\n              onClick: handleDeleteConfirmed,\n              children: \"Confirm\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 499,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"cancel-button\",\n              onClick: closeConfirmDeleteModal,\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 502,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 498,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 488,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal, {\n          isOpen: isAddEmployeeModalOpen,\n          onRequestClose: () => setIsAddEmployeeModalOpen(false),\n          className: \"modal\",\n          overlayClassName: \"modal-overlay\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Add New Employee\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 515,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"addOrEdit-employee-form\",\n            onSubmit: handleAddEmployee,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 517,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"name\",\n              value: newEmployee.name,\n              onChange: handleChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 518,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Email:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 525,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              name: \"email\",\n              value: newEmployee.email,\n              onChange: handleChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 526,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Phone:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 533,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"phone\",\n              value: newEmployee.phone,\n              onChange: handleChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 534,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Password:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 541,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              name: \"password\",\n              value: newEmployee.password,\n              onChange: handleChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 542,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Role:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 549,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              name: \"role\",\n              value: newEmployee.role,\n              onChange: handleChange,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"employee\",\n                children: \"Employee\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 551,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"admin\",\n                children: \"Admin\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 552,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 550,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Profile Photo:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 554,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              accept: \"image/*\",\n              onChange: e => setNewEmployee(prev => ({\n                ...prev,\n                photoFile: e.target.files[0]\n              }))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 555,\n              columnNumber: 29\n            }, this), newEmployee.photoFile && /*#__PURE__*/_jsxDEV(\"img\", {\n              src: URL.createObjectURL(newEmployee.photoFile),\n              alt: \"Preview\",\n              style: {\n                width: '100px',\n                height: '100px',\n                objectFit: 'cover',\n                borderRadius: '8px',\n                margin: '10px 0'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 567,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"Add Employee\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 581,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => setIsAddEmployeeModalOpen(false),\n              className: \"cancel-button\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 582,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 516,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 509,\n          columnNumber: 21\n        }, this), isEditModalOpen && editEmployee && /*#__PURE__*/_jsxDEV(EditProfileModal, {\n          isOpen: isEditModalOpen,\n          onClose: () => setIsEditModalOpen(false),\n          profileUser: editEmployee,\n          setProfileUser: setEditEmployee,\n          onSubmit: async e => {\n            e.preventDefault();\n            try {\n              if (editEmployee && editEmployee.id) {\n                var _loggedUser$user;\n                let updatedPhotoData = editEmployee.photoData || '';\n                if (editEmployee.photoFile) {\n                  updatedPhotoData = await fileToBase64(editEmployee.photoFile);\n                }\n                const updatedEmployee = await updateUser(editEmployee.id, {\n                  name: editEmployee.name,\n                  email: editEmployee.email,\n                  phone: editEmployee.phone,\n                  role: editEmployee.role,\n                  photoData: updatedPhotoData\n                });\n                setEmployees(prevEmployees => prevEmployees.map(employee => employee.id === updatedEmployee.id ? updatedEmployee : employee));\n\n                // ✅ אם המשתמש הערוך הוא המשתמש המחובר – עדכן localStorage\n                if ((loggedUser === null || loggedUser === void 0 ? void 0 : (_loggedUser$user = loggedUser.user) === null || _loggedUser$user === void 0 ? void 0 : _loggedUser$user.id) === updatedEmployee.id) {\n                  updateUserInLocalStorage(loggedUser, updatedEmployee);\n                }\n                toast.success('Employee updated successfully!');\n                setIsEditModalOpen(false);\n              }\n            } catch (err) {\n              toast.error('Failed to update employee. Please try again.');\n              console.error(err);\n            }\n          },\n          title: \"Edit Employee\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 592,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 638,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 271,\n    columnNumber: 9\n  }, this);\n}\n_s(EmployeesScreen, \"NiG/wlJ+Fz4OpM7CyJzpxFwC6Jk=\");\n_c = EmployeesScreen;\nexport default EmployeesScreen;\nvar _c;\n$RefreshReg$(_c, \"EmployeesScreen\");","map":{"version":3,"names":["React","useState","useEffect","Modal","toast","ToastContainer","ThreeDots","Navbar","Loader","BackgroundWrapper","employeesData","getUsers","removeCompanyFromUser","addUser","updateUserCompanies","updateUser","removeUserFromCompany","addEmployeeToCompany","sendNotification","fileToBase64","EditProfileModal","updateUserInLocalStorage","getPhotoDataUrl","findExistingUser","associateUserWithCompany","createAndAddNewEmployee","resetNewEmployeeForm","jsxDEV","_jsxDEV","setAppElement","EmployeesScreen","_s","employees","setEmployees","newEmployee","setNewEmployee","name","email","phone","role","password","photoFile","isLoading","setIsLoading","isProcessing","setIsProcessing","error","setError","loggedUser","setLoggedUser","isAddEmployeeModalOpen","setIsAddEmployeeModalOpen","isEditModalOpen","setIsEditModalOpen","isConfirmDeleteModalOpen","setIsConfirmDeleteModalOpen","editEmployee","setEditEmployee","employeeToDelete","setEmployeeToDelete","openCards","setOpenCards","searchQuery","setSearchQuery","filterRole","setFilterRole","isNotificationModalOpen","setIsNotificationModalOpen","selectedNotificationRecipients","setSelectedNotificationRecipients","notificationMessage","setNotificationMessage","JSON","parse","localStorage","getItem","console","log","fetchEmployees","_loggedUser$company","companyId","company","id","data","usersWithIds","Object","entries","map","user","filteredEmployees","filter","_user$companyIds","companyIds","some","err","openConfirmDeleteModal","employee","closeConfirmDeleteModal","handleDeleteConfirmed","_loggedUser$company2","success","handleChange","e","value","target","prev","handleAddEmployee","preventDefault","photoDataUrl","existingUser","toggleCard","handleEditClick","handleLoadEmployeesFromJSON","allUsers","newEmployees","_existingUser$company","values","find","isInCompany","addedEmployee","updatedUsers","_user$companyIds2","length","handleDeleteAllEmployees","employeesToDelete","info","toLowerCase","startsWith","children","fileName","_jsxFileName","lineNumber","columnNumber","className","type","placeholder","onChange","onClick","src","photoData","alt","stopPropagation","height","width","radius","color","ariaLabel","wrapperStyle","display","justifyContent","marginTop","visible","isOpen","onRequestClose","overlayClassName","onSubmit","_loggedUser$company3","link","userId","trim","checked","emp","every","includes","isChecked","nonAdminIds","style","marginLeft","rows","disabled","required","accept","files","URL","createObjectURL","objectFit","borderRadius","margin","onClose","profileUser","setProfileUser","_loggedUser$user","updatedPhotoData","updatedEmployee","prevEmployees","title","_c","$RefreshReg$"],"sources":["/Users/dorlevi/IdeaProjects/newShiftWise/client/src/components/EmployeesScreen.js"],"sourcesContent":["// React & state\nimport React, { useState, useEffect } from 'react';\n\n// UI Components & Libraries\nimport Modal from 'react-modal';\nimport { toast, ToastContainer } from 'react-toastify';\nimport { ThreeDots } from 'react-loader-spinner';\nimport Navbar from '../components/Navbar';\nimport Loader from './Loader';\nimport BackgroundWrapper from './BackgroundWrapper';\n\n\n// Styles\nimport 'react-toastify/dist/ReactToastify.css';\nimport '../styles/EmployeesScreen.css';\nimport '../styles/Navbar.css';\n\n// Data\nimport employeesData from '../data/emps.json'; // יש לוודא שהקובץ נמצא בתיקייה data\n\n// Services\nimport { getUsers, removeCompanyFromUser, addUser, updateUserCompanies, updateUser } from '../services/userService';\nimport { removeUserFromCompany, addEmployeeToCompany } from '../services/companyService';\n\nimport { sendNotification } from '../services/notificationService';\nimport { fileToBase64 } from '../utils/fileUtils';\n\nimport EditProfileModal from '../components/EditProfileModal';\nimport { updateUserInLocalStorage } from '../utils/userUtils'; // ודא שזה מיובא\n\nimport { getPhotoDataUrl, findExistingUser, associateUserWithCompany, createAndAddNewEmployee, resetNewEmployeeForm } from '../utils/employeeUtils';\n\nModal.setAppElement('#root');\n\nfunction EmployeesScreen() {\n\n    // Employees data\n    const [employees, setEmployees] = useState([]);\n\n    // Form data\n    const [newEmployee, setNewEmployee] = useState({\n        name: '', email: '', phone: '', role: 'employee', password: '', photoFile: null\n    });\n\n    // App state\n    const [isLoading, setIsLoading] = useState(true);\n    const [isProcessing, setIsProcessing] = useState(false);\n    const [error, setError] = useState('');\n    const [loggedUser, setLoggedUser] = useState(null);\n\n    // Modals\n    const [isAddEmployeeModalOpen, setIsAddEmployeeModalOpen] = useState(false);\n    const [isEditModalOpen, setIsEditModalOpen] = useState(false);\n    const [isConfirmDeleteModalOpen, setIsConfirmDeleteModalOpen] = useState(false);\n\n    // Edit/delete handlers\n    const [editEmployee, setEditEmployee] = useState(null);\n    const [employeeToDelete, setEmployeeToDelete] = useState(null);\n\n    // UI helpers\n    const [openCards, setOpenCards] = useState({});\n    const [searchQuery, setSearchQuery] = useState('');\n    const [filterRole, setFilterRole] = useState('all');\n\n    const [isNotificationModalOpen, setIsNotificationModalOpen] = useState(false);\n    const [selectedNotificationRecipients, setSelectedNotificationRecipients] = useState([]);\n    const [notificationMessage, setNotificationMessage] = useState('');\n\n    useEffect(() => {\n        const loggedUser = JSON.parse(localStorage.getItem('user'));\n        console.log(\"🔐 Logged user from localStorage:\", loggedUser);\n        setLoggedUser(loggedUser);\n    }, []);\n\n    useEffect(() => {\n        const fetchEmployees = async () => {\n            try {\n                const loggedUser = JSON.parse(localStorage.getItem('user'));\n                setLoggedUser(loggedUser);\n                const companyId = loggedUser?.company?.id;\n\n                if (!companyId) {\n                    setError('No company information found.');\n                    return;\n                }\n\n                const data = await getUsers();\n                const usersWithIds = data ? Object.entries(data).map(([id, user]) => ({ id, ...user })) : [];\n                const filteredEmployees = usersWithIds.filter((user) =>\n                    user.companyIds?.some((company) => company.companyId === companyId)\n                );\n\n                setEmployees(filteredEmployees);\n            } catch (err) {\n                setError('Failed to fetch employees.');\n            } finally {\n                setIsLoading(false);\n            }\n        };\n\n        fetchEmployees();\n    }, []);\n\n    const openConfirmDeleteModal = (employee) => {\n        setEmployeeToDelete(employee);\n        setIsConfirmDeleteModalOpen(true);\n    };\n\n    const closeConfirmDeleteModal = () => {\n        setIsConfirmDeleteModalOpen(false);\n        setEmployeeToDelete(null);\n    };\n\n    const handleDeleteConfirmed = async () => {\n        if (!employeeToDelete) return;\n        try {\n            const companyId = loggedUser?.company?.id;\n\n            if (!companyId) {\n                toast.error('No company information found. Please try again.');\n                return;\n            }\n\n            await removeCompanyFromUser(employeeToDelete.id, companyId);\n            await removeUserFromCompany(companyId, employeeToDelete.id);\n\n            setEmployees(employees.filter((employee) => employee.id !== employeeToDelete.id));\n            toast.success('Employee deleted successfully!');\n        } catch (err) {\n            toast.error('Failed to delete employee.');\n            console.error(err);\n        } finally {\n            closeConfirmDeleteModal();\n        }\n    };\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        setNewEmployee((prev) => ({ ...prev, [name]: value }));\n    };\n\n    const handleAddEmployee = async (e) => {\n        e.preventDefault();\n        try {\n            const company = loggedUser?.company;\n            if (!company) return toast.error('No company information found.');\n\n            const photoDataUrl = await getPhotoDataUrl(newEmployee.photoFile);\n            const existingUser = await findExistingUser(newEmployee.email);\n\n            if (existingUser) {\n                await associateUserWithCompany(existingUser, company, employees, setEmployees);\n            } else {\n                await createAndAddNewEmployee(newEmployee, photoDataUrl, company, setEmployees);\n            }\n\n            resetNewEmployeeForm(setNewEmployee);\n            setIsAddEmployeeModalOpen(false);\n        } catch (err) {\n            toast.error('Failed to add employee.');\n            console.error(err);\n        }\n    };\n\n    const toggleCard = (id) => {\n        setOpenCards((prev) => ({\n            ...prev,\n            [id]: !prev[id],\n        }));\n    };\n\n    const handleEditClick = (employee) => {\n        setEditEmployee(employee); // הגדרת העובד הנבחר לעריכה\n        setIsEditModalOpen(true); // פתיחת המודל\n    };\n\n\n    const handleLoadEmployeesFromJSON = async () => {\n        try {\n            if (!loggedUser || !loggedUser.company) {\n                toast.error('No company information found. Please try again.');\n                return;\n            }\n\n            setIsProcessing(true); // הפעלת ה-Loader\n\n            const companyId = loggedUser.company.id;\n            const allUsers = await getUsers();\n\n            const newEmployees = employeesData.filter((employee) => {\n                const existingUser = Object.values(allUsers).find((user) => user.email === employee.email);\n\n                if (!existingUser) {\n                    return true; // משתמש לא קיים כלל - נוסיף אותו\n                }\n\n                const isInCompany = existingUser.companyIds?.some((company) => company.companyId === companyId);\n                return !isInCompany; // אם הוא לא משויך לחברה, נוסיף אותו שוב\n            });\n\n            for (const employee of newEmployees) {\n                const existingUser = Object.values(allUsers).find((user) => user.email === employee.email);\n\n                if (existingUser) {\n                    await updateUserCompanies(existingUser, loggedUser.company);\n                    await addEmployeeToCompany(companyId, existingUser.id);\n                } else {\n                    const addedEmployee = await addUser(employee);\n                    await updateUserCompanies(addedEmployee, loggedUser.company);\n                    await addEmployeeToCompany(companyId, addedEmployee.id);\n                }\n            }\n\n            const updatedUsers = await getUsers();\n            const usersWithIds = Object.entries(updatedUsers).map(([id, user]) => ({ id, ...user }));\n            const filteredEmployees = usersWithIds.filter((user) =>\n                user.companyIds?.some((company) => company.companyId === companyId)\n            );\n\n            setEmployees(filteredEmployees);\n            toast.success(`${newEmployees.length} employees added successfully!`);\n        } catch (error) {\n            toast.error('Failed to load employees from JSON.');\n            console.error(error);\n        } finally {\n            setIsProcessing(false); // כיבוי ה-Loader\n        }\n    };\n\n    const handleDeleteAllEmployees = async () => {\n        try {\n            if (!loggedUser || !loggedUser.company) {\n                toast.error('No company information found. Please try again.');\n                return;\n            }\n\n            setIsProcessing(true); // הפעלת ה-Loader\n\n            const companyId = loggedUser.company.id;\n            const employeesToDelete = employees.filter(employee => employee.role !== 'admin');\n\n            if (employeesToDelete.length === 0) {\n                toast.info('No employees to delete.');\n                return;\n            }\n\n            for (const employee of employeesToDelete) {\n                await removeCompanyFromUser(employee.id, companyId);\n                await removeUserFromCompany(companyId, employee.id);\n            }\n\n            setEmployees(employees.filter(employee => employee.role === 'admin'));\n            toast.success(`${employeesToDelete.length} employees deleted successfully!`);\n        } catch (err) {\n            toast.error('Failed to delete employees.');\n            console.error(err);\n        } finally {\n            setIsProcessing(false); // כיבוי ה-Loader\n        }\n    };\n\n    const filteredEmployees = employees.filter((employee) => {\n        return (\n            (employee.name.toLowerCase().startsWith(searchQuery.toLowerCase()) ||\n                employee.email.toLowerCase().startsWith(searchQuery.toLowerCase())) &&\n            (filterRole === 'all' || employee.role === filterRole)\n        );\n    });\n\n    return (\n        <BackgroundWrapper >\n\n            <div>\n                <Navbar />\n                <div className=\"navbar-placeholder\"></div>\n                <div className=\"employees-container\">\n                    <h1>Employees</h1>\n\n                    <div className=\"search-container\">\n                        <input\n                            type=\"text\"\n                            placeholder=\"Search by name or email...\"\n                            value={searchQuery}\n                            onChange={(e) => setSearchQuery(e.target.value)}\n                        />\n                        <select value={filterRole} onChange={(e) => setFilterRole(e.target.value)}>\n                            <option value=\"all\">All Roles</option>\n                            <option value=\"employee\">Employee</option>\n                            <option value=\"admin\">Admin</option>\n                        </select>\n                    </div>\n\n                    {isLoading ? (\n                        <Loader />\n                    ) : error ? (\n                        <p className=\"error\">{error}</p>\n                    ) : (\n                        <div className=\"employees-cards\">\n                            {filteredEmployees.map((employee) => (\n\n                                <div\n                                    key={employee.id}\n                                    className={`employee-card ${openCards[employee.id] ? 'open' : 'closed'}`}\n                                    onClick={() => toggleCard(employee.id)}\n                                >\n                                    <h3>{employee.name}</h3>\n                                    {openCards[employee.id] && (\n                                        <div className=\"employee-details-horizontal\">\n                                            <img\n                                                src={employee.photoData || '/images/Profile.jpeg'}\n                                                alt={`${employee.name}'s profile`}\n                                                className=\"employee-photo-horizontal\"\n                                            />\n\n                                            <div className=\"employee-info\">\n                                                <p>Email: {employee.email}</p>\n                                                <p>Phone: {employee.phone}</p>\n                                                <p>Role: {employee.role}</p>\n                                                <div className=\"employee-actions\">\n                                                    <button\n                                                        className=\"action-button edit\"\n                                                        onClick={(e) => {\n                                                            e.stopPropagation();\n                                                            handleEditClick(employee);\n                                                        }}\n                                                    >\n                                                        Edit\n                                                    </button>\n                                                    {employee.role !== 'admin' && (\n                                                        <button\n                                                            className=\"action-button delete\"\n                                                            onClick={(e) => {\n                                                                e.stopPropagation();\n                                                                openConfirmDeleteModal(employee);\n                                                            }}\n                                                        >\n                                                            Delete\n                                                        </button>\n                                                    )}\n                                                </div>\n                                            </div>\n                                        </div>\n\n                                    )}\n\n                                </div>\n                            ))}\n\n                        </div>\n                    )}\n\n                    {isProcessing && (\n                        <ThreeDots\n                            height=\"50\"\n                            width=\"50\"\n                            radius=\"9\"\n                            color=\"#3498db\"\n                            ariaLabel=\"processing\"\n                            wrapperStyle={{ display: 'flex', justifyContent: 'center', marginTop: '20px' }}\n                            visible={true}\n                        />\n                    )}\n\n                    <button\n                        className=\"toggle-form-button\"\n                        onClick={() => setIsAddEmployeeModalOpen(true)}\n                    >\n                        Add New Employee\n                    </button>\n                    <button\n                        className=\"toggle-form-button\"\n                        onClick={() => setIsNotificationModalOpen(true)}\n                    >\n                        Send Notification\n                    </button>\n\n                    {/* 🔹 כפתור חדש להוספת עובדים מקובץ JSON */}\n                    <button className=\"toggle-form-button\" onClick={handleLoadEmployeesFromJSON}>\n                        Add Employees from JSON\n                    </button>\n                    <button\n                        className=\"toggle-form-button delete-all\"\n                        onClick={handleDeleteAllEmployees}\n                    >\n                        Delete All Non-Admin Employees\n                    </button>\n                    <Modal\n                        isOpen={isNotificationModalOpen}\n                        onRequestClose={() => setIsNotificationModalOpen(false)}\n                        className=\"modal\"\n                        overlayClassName=\"modal-overlay\"\n                    >\n                        <h3>Send Notification to Employees</h3>\n\n                        <form\n                            className=\"addOrEdit-employee-form notification-form\"\n                            onSubmit={async (e) => {\n                                e.preventDefault();\n                                try {\n                                    const companyId = loggedUser?.company?.id;\n                                    const link = '/schedule';\n\n                                    for (const userId of selectedNotificationRecipients) {\n                                        await sendNotification(companyId, userId, notificationMessage.trim(), link);\n                                    }\n\n                                    toast.success('Notifications sent!');\n                                    setIsNotificationModalOpen(false);\n                                    setSelectedNotificationRecipients([]);\n                                    setNotificationMessage('');\n                                } catch (error) {\n                                    toast.error('Failed to send notifications.');\n                                    console.error(error);\n                                }\n                            }}\n                        >\n                            <label>Select Recipients:</label>\n\n                            <div className=\"select-all-checkbox\">\n                                <input\n                                    type=\"checkbox\"\n                                    checked={employees\n                                        .filter(emp => emp.role !== 'admin')\n                                        .every(emp => selectedNotificationRecipients.includes(emp.id))}\n                                    onChange={(e) => {\n                                        const isChecked = e.target.checked;\n                                        const nonAdminIds = employees\n                                            .filter(emp => emp.role !== 'admin')\n                                            .map(emp => emp.id);\n                                        setSelectedNotificationRecipients(isChecked ? nonAdminIds : []);\n                                    }}\n                                />\n                                <span>Select All Employees</span>\n                            </div>\n\n                            <div className=\"employee-checkboxes\">\n                                {employees\n                                    .filter(emp => emp.role !== 'admin')\n                                    .map(emp => (\n                                        <div key={emp.id}>\n                                            <input\n                                                type=\"checkbox\"\n                                                checked={selectedNotificationRecipients.includes(emp.id)}\n                                                onChange={(e) => {\n                                                    if (e.target.checked) {\n                                                        setSelectedNotificationRecipients(prev => [...prev, emp.id]);\n                                                    } else {\n                                                        setSelectedNotificationRecipients(prev =>\n                                                            prev.filter(id => id !== emp.id)\n                                                        );\n                                                    }\n                                                }}\n                                            />\n                                            <span style={{ marginLeft: '6px' }}>{emp.name}</span>\n                                        </div>\n                                    ))}\n                            </div>\n\n                            <label>Message:</label>\n                            <textarea\n                                value={notificationMessage}\n                                onChange={(e) => setNotificationMessage(e.target.value)}\n                                placeholder=\"Enter your message...\"\n                                rows={4}\n                            />\n\n                            <div className=\"modal-buttons\">\n                                <button\n                                    type=\"submit\"\n                                    className=\"confirm-button\"\n                                    disabled={selectedNotificationRecipients.length === 0 || !notificationMessage.trim()}\n                                >\n                                    Send\n                                </button>\n                                <button\n                                    type=\"button\"\n                                    className=\"cancel-button\"\n                                    onClick={() => setIsNotificationModalOpen(false)}\n                                >\n                                    Cancel\n                                </button>\n                            </div>\n                        </form>\n                    </Modal>\n\n\n\n                    <Modal\n                        isOpen={isConfirmDeleteModalOpen}\n                        onRequestClose={closeConfirmDeleteModal}\n                        className=\"confirm-delete-modal\"\n                        overlayClassName=\"modal-overlay\"\n                    >\n                        <h2>Confirm Employee Deletion</h2>\n                        <p>\n                            Are you sure you want to remove <strong>{employeeToDelete?.name}</strong> from the company?\n                        </p>\n                        <div className=\"modal-buttons\">\n                            <button className=\"confirm-button\" onClick={handleDeleteConfirmed}>\n                                Confirm\n                            </button>\n                            <button className=\"cancel-button\" onClick={closeConfirmDeleteModal}>\n                                Cancel\n                            </button>\n                        </div>\n                    </Modal>\n\n\n                    <Modal\n                        isOpen={isAddEmployeeModalOpen}\n                        onRequestClose={() => setIsAddEmployeeModalOpen(false)}\n                        className=\"modal\"\n                        overlayClassName=\"modal-overlay\"\n                    >\n                        <h3>Add New Employee</h3>\n                        <form className=\"addOrEdit-employee-form\" onSubmit={handleAddEmployee}>\n                            <label>Name:</label>\n                            <input\n                                type=\"text\"\n                                name=\"name\"\n                                value={newEmployee.name}\n                                onChange={handleChange}\n                                required\n                            />\n                            <label>Email:</label>\n                            <input\n                                type=\"email\"\n                                name=\"email\"\n                                value={newEmployee.email}\n                                onChange={handleChange}\n                                required\n                            />\n                            <label>Phone:</label>\n                            <input\n                                type=\"text\"\n                                name=\"phone\"\n                                value={newEmployee.phone}\n                                onChange={handleChange}\n                                required\n                            />\n                            <label>Password:</label>\n                            <input\n                                type=\"password\"\n                                name=\"password\"\n                                value={newEmployee.password}\n                                onChange={handleChange}\n                                required\n                            />\n                            <label>Role:</label>\n                            <select name=\"role\" value={newEmployee.role} onChange={handleChange}>\n                                <option value=\"employee\">Employee</option>\n                                <option value=\"admin\">Admin</option>\n                            </select>\n                            <label>Profile Photo:</label>\n                            <input\n                                type=\"file\"\n                                accept=\"image/*\"\n                                onChange={(e) =>\n                                    setNewEmployee((prev) => ({\n                                        ...prev,\n                                        photoFile: e.target.files[0]\n                                    }))\n                                }\n                            />\n\n                            {newEmployee.photoFile && (\n                                <img\n                                    src={URL.createObjectURL(newEmployee.photoFile)}\n                                    alt=\"Preview\"\n                                    style={{\n                                        width: '100px',\n                                        height: '100px',\n                                        objectFit: 'cover',\n                                        borderRadius: '8px',\n                                        margin: '10px 0'\n                                    }}\n                                />\n                            )}\n\n\n                            <button type=\"submit\">Add Employee</button>\n                            <button\n                                type=\"button\"\n                                onClick={() => setIsAddEmployeeModalOpen(false)}\n                                className=\"cancel-button\"\n                            >\n                                Cancel\n                            </button>\n                        </form>\n                    </Modal>\n                    {isEditModalOpen && editEmployee && (\n                        <EditProfileModal\n                            isOpen={isEditModalOpen}\n                            onClose={() => setIsEditModalOpen(false)}\n                            profileUser={editEmployee}\n                            setProfileUser={setEditEmployee}\n                            onSubmit={async (e) => {\n                                e.preventDefault();\n                                try {\n                                    if (editEmployee && editEmployee.id) {\n                                        let updatedPhotoData = editEmployee.photoData || '';\n                                        if (editEmployee.photoFile) {\n                                            updatedPhotoData = await fileToBase64(editEmployee.photoFile);\n                                        }\n\n                                        const updatedEmployee = await updateUser(editEmployee.id, {\n                                            name: editEmployee.name,\n                                            email: editEmployee.email,\n                                            phone: editEmployee.phone,\n                                            role: editEmployee.role,\n                                            photoData: updatedPhotoData,\n                                        });\n\n                                        setEmployees((prevEmployees) =>\n                                            prevEmployees.map((employee) =>\n                                                employee.id === updatedEmployee.id ? updatedEmployee : employee\n                                            )\n                                        );\n\n                                        // ✅ אם המשתמש הערוך הוא המשתמש המחובר – עדכן localStorage\n                                        if (loggedUser?.user?.id === updatedEmployee.id) {\n                                            updateUserInLocalStorage(loggedUser, updatedEmployee);\n                                        }\n\n                                        toast.success('Employee updated successfully!');\n                                        setIsEditModalOpen(false);\n                                    }\n                                } catch (err) {\n                                    toast.error('Failed to update employee. Please try again.');\n                                    console.error(err);\n                                }\n                            }}\n                            title=\"Edit Employee\"\n                        />\n                    )}\n\n                </div>\n                <ToastContainer />\n            </div>\n        </BackgroundWrapper >\n\n    );\n}\n\nexport default EmployeesScreen;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;;AAElD;AACA,OAAOC,KAAK,MAAM,aAAa;AAC/B,SAASC,KAAK,EAAEC,cAAc,QAAQ,gBAAgB;AACtD,SAASC,SAAS,QAAQ,sBAAsB;AAChD,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,iBAAiB,MAAM,qBAAqB;;AAGnD;AACA,OAAO,uCAAuC;AAC9C,OAAO,+BAA+B;AACtC,OAAO,sBAAsB;;AAE7B;AACA,OAAOC,aAAa,MAAM,mBAAmB,CAAC,CAAC;;AAE/C;AACA,SAASC,QAAQ,EAAEC,qBAAqB,EAAEC,OAAO,EAAEC,mBAAmB,EAAEC,UAAU,QAAQ,yBAAyB;AACnH,SAASC,qBAAqB,EAAEC,oBAAoB,QAAQ,4BAA4B;AAExF,SAASC,gBAAgB,QAAQ,iCAAiC;AAClE,SAASC,YAAY,QAAQ,oBAAoB;AAEjD,OAAOC,gBAAgB,MAAM,gCAAgC;AAC7D,SAASC,wBAAwB,QAAQ,oBAAoB,CAAC,CAAC;;AAE/D,SAASC,eAAe,EAAEC,gBAAgB,EAAEC,wBAAwB,EAAEC,uBAAuB,EAAEC,oBAAoB,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpJzB,KAAK,CAAC0B,aAAa,CAAC,OAAO,CAAC;AAE5B,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EAEvB;EACA,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGhC,QAAQ,CAAC,EAAE,CAAC;;EAE9C;EACA,MAAM,CAACiC,WAAW,EAAEC,cAAc,CAAC,GAAGlC,QAAQ,CAAC;IAC3CmC,IAAI,EAAE,EAAE;IAAEC,KAAK,EAAE,EAAE;IAAEC,KAAK,EAAE,EAAE;IAAEC,IAAI,EAAE,UAAU;IAAEC,QAAQ,EAAE,EAAE;IAAEC,SAAS,EAAE;EAC/E,CAAC,CAAC;;EAEF;EACA,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAG1C,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAAC2C,YAAY,EAAEC,eAAe,CAAC,GAAG5C,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAAC6C,KAAK,EAAEC,QAAQ,CAAC,GAAG9C,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAAC+C,UAAU,EAAEC,aAAa,CAAC,GAAGhD,QAAQ,CAAC,IAAI,CAAC;;EAElD;EACA,MAAM,CAACiD,sBAAsB,EAAEC,yBAAyB,CAAC,GAAGlD,QAAQ,CAAC,KAAK,CAAC;EAC3E,MAAM,CAACmD,eAAe,EAAEC,kBAAkB,CAAC,GAAGpD,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAACqD,wBAAwB,EAAEC,2BAA2B,CAAC,GAAGtD,QAAQ,CAAC,KAAK,CAAC;;EAE/E;EACA,MAAM,CAACuD,YAAY,EAAEC,eAAe,CAAC,GAAGxD,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACyD,gBAAgB,EAAEC,mBAAmB,CAAC,GAAG1D,QAAQ,CAAC,IAAI,CAAC;;EAE9D;EACA,MAAM,CAAC2D,SAAS,EAAEC,YAAY,CAAC,GAAG5D,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC9C,MAAM,CAAC6D,WAAW,EAAEC,cAAc,CAAC,GAAG9D,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAAC+D,UAAU,EAAEC,aAAa,CAAC,GAAGhE,QAAQ,CAAC,KAAK,CAAC;EAEnD,MAAM,CAACiE,uBAAuB,EAAEC,0BAA0B,CAAC,GAAGlE,QAAQ,CAAC,KAAK,CAAC;EAC7E,MAAM,CAACmE,8BAA8B,EAAEC,iCAAiC,CAAC,GAAGpE,QAAQ,CAAC,EAAE,CAAC;EACxF,MAAM,CAACqE,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGtE,QAAQ,CAAC,EAAE,CAAC;EAElEC,SAAS,CAAC,MAAM;IACZ,MAAM8C,UAAU,GAAGwB,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;IAC3DC,OAAO,CAACC,GAAG,CAAC,mCAAmC,EAAE7B,UAAU,CAAC;IAC5DC,aAAa,CAACD,UAAU,CAAC;EAC7B,CAAC,EAAE,EAAE,CAAC;EAEN9C,SAAS,CAAC,MAAM;IACZ,MAAM4E,cAAc,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QAAA,IAAAC,mBAAA;QACA,MAAM/B,UAAU,GAAGwB,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;QAC3D1B,aAAa,CAACD,UAAU,CAAC;QACzB,MAAMgC,SAAS,GAAGhC,UAAU,aAAVA,UAAU,wBAAA+B,mBAAA,GAAV/B,UAAU,CAAEiC,OAAO,cAAAF,mBAAA,uBAAnBA,mBAAA,CAAqBG,EAAE;QAEzC,IAAI,CAACF,SAAS,EAAE;UACZjC,QAAQ,CAAC,+BAA+B,CAAC;UACzC;QACJ;QAEA,MAAMoC,IAAI,GAAG,MAAMxE,QAAQ,CAAC,CAAC;QAC7B,MAAMyE,YAAY,GAAGD,IAAI,GAAGE,MAAM,CAACC,OAAO,CAACH,IAAI,CAAC,CAACI,GAAG,CAAC,CAAC,CAACL,EAAE,EAAEM,IAAI,CAAC,MAAM;UAAEN,EAAE;UAAE,GAAGM;QAAK,CAAC,CAAC,CAAC,GAAG,EAAE;QAC5F,MAAMC,iBAAiB,GAAGL,YAAY,CAACM,MAAM,CAAEF,IAAI;UAAA,IAAAG,gBAAA;UAAA,QAAAA,gBAAA,GAC/CH,IAAI,CAACI,UAAU,cAAAD,gBAAA,uBAAfA,gBAAA,CAAiBE,IAAI,CAAEZ,OAAO,IAAKA,OAAO,CAACD,SAAS,KAAKA,SAAS,CAAC;QAAA,CACvE,CAAC;QAED/C,YAAY,CAACwD,iBAAiB,CAAC;MACnC,CAAC,CAAC,OAAOK,GAAG,EAAE;QACV/C,QAAQ,CAAC,4BAA4B,CAAC;MAC1C,CAAC,SAAS;QACNJ,YAAY,CAAC,KAAK,CAAC;MACvB;IACJ,CAAC;IAEDmC,cAAc,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMiB,sBAAsB,GAAIC,QAAQ,IAAK;IACzCrC,mBAAmB,CAACqC,QAAQ,CAAC;IAC7BzC,2BAA2B,CAAC,IAAI,CAAC;EACrC,CAAC;EAED,MAAM0C,uBAAuB,GAAGA,CAAA,KAAM;IAClC1C,2BAA2B,CAAC,KAAK,CAAC;IAClCI,mBAAmB,CAAC,IAAI,CAAC;EAC7B,CAAC;EAED,MAAMuC,qBAAqB,GAAG,MAAAA,CAAA,KAAY;IACtC,IAAI,CAACxC,gBAAgB,EAAE;IACvB,IAAI;MAAA,IAAAyC,oBAAA;MACA,MAAMnB,SAAS,GAAGhC,UAAU,aAAVA,UAAU,wBAAAmD,oBAAA,GAAVnD,UAAU,CAAEiC,OAAO,cAAAkB,oBAAA,uBAAnBA,oBAAA,CAAqBjB,EAAE;MAEzC,IAAI,CAACF,SAAS,EAAE;QACZ5E,KAAK,CAAC0C,KAAK,CAAC,iDAAiD,CAAC;QAC9D;MACJ;MAEA,MAAMlC,qBAAqB,CAAC8C,gBAAgB,CAACwB,EAAE,EAAEF,SAAS,CAAC;MAC3D,MAAMhE,qBAAqB,CAACgE,SAAS,EAAEtB,gBAAgB,CAACwB,EAAE,CAAC;MAE3DjD,YAAY,CAACD,SAAS,CAAC0D,MAAM,CAAEM,QAAQ,IAAKA,QAAQ,CAACd,EAAE,KAAKxB,gBAAgB,CAACwB,EAAE,CAAC,CAAC;MACjF9E,KAAK,CAACgG,OAAO,CAAC,gCAAgC,CAAC;IACnD,CAAC,CAAC,OAAON,GAAG,EAAE;MACV1F,KAAK,CAAC0C,KAAK,CAAC,4BAA4B,CAAC;MACzC8B,OAAO,CAAC9B,KAAK,CAACgD,GAAG,CAAC;IACtB,CAAC,SAAS;MACNG,uBAAuB,CAAC,CAAC;IAC7B;EACJ,CAAC;EAED,MAAMI,YAAY,GAAIC,CAAC,IAAK;IACxB,MAAM;MAAElE,IAAI;MAAEmE;IAAM,CAAC,GAAGD,CAAC,CAACE,MAAM;IAChCrE,cAAc,CAAEsE,IAAI,KAAM;MAAE,GAAGA,IAAI;MAAE,CAACrE,IAAI,GAAGmE;IAAM,CAAC,CAAC,CAAC;EAC1D,CAAC;EAED,MAAMG,iBAAiB,GAAG,MAAOJ,CAAC,IAAK;IACnCA,CAAC,CAACK,cAAc,CAAC,CAAC;IAClB,IAAI;MACA,MAAM1B,OAAO,GAAGjC,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAEiC,OAAO;MACnC,IAAI,CAACA,OAAO,EAAE,OAAO7E,KAAK,CAAC0C,KAAK,CAAC,+BAA+B,CAAC;MAEjE,MAAM8D,YAAY,GAAG,MAAMtF,eAAe,CAACY,WAAW,CAACO,SAAS,CAAC;MACjE,MAAMoE,YAAY,GAAG,MAAMtF,gBAAgB,CAACW,WAAW,CAACG,KAAK,CAAC;MAE9D,IAAIwE,YAAY,EAAE;QACd,MAAMrF,wBAAwB,CAACqF,YAAY,EAAE5B,OAAO,EAAEjD,SAAS,EAAEC,YAAY,CAAC;MAClF,CAAC,MAAM;QACH,MAAMR,uBAAuB,CAACS,WAAW,EAAE0E,YAAY,EAAE3B,OAAO,EAAEhD,YAAY,CAAC;MACnF;MAEAP,oBAAoB,CAACS,cAAc,CAAC;MACpCgB,yBAAyB,CAAC,KAAK,CAAC;IACpC,CAAC,CAAC,OAAO2C,GAAG,EAAE;MACV1F,KAAK,CAAC0C,KAAK,CAAC,yBAAyB,CAAC;MACtC8B,OAAO,CAAC9B,KAAK,CAACgD,GAAG,CAAC;IACtB;EACJ,CAAC;EAED,MAAMgB,UAAU,GAAI5B,EAAE,IAAK;IACvBrB,YAAY,CAAE4C,IAAI,KAAM;MACpB,GAAGA,IAAI;MACP,CAACvB,EAAE,GAAG,CAACuB,IAAI,CAACvB,EAAE;IAClB,CAAC,CAAC,CAAC;EACP,CAAC;EAED,MAAM6B,eAAe,GAAIf,QAAQ,IAAK;IAClCvC,eAAe,CAACuC,QAAQ,CAAC,CAAC,CAAC;IAC3B3C,kBAAkB,CAAC,IAAI,CAAC,CAAC,CAAC;EAC9B,CAAC;EAGD,MAAM2D,2BAA2B,GAAG,MAAAA,CAAA,KAAY;IAC5C,IAAI;MACA,IAAI,CAAChE,UAAU,IAAI,CAACA,UAAU,CAACiC,OAAO,EAAE;QACpC7E,KAAK,CAAC0C,KAAK,CAAC,iDAAiD,CAAC;QAC9D;MACJ;MAEAD,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC;;MAEvB,MAAMmC,SAAS,GAAGhC,UAAU,CAACiC,OAAO,CAACC,EAAE;MACvC,MAAM+B,QAAQ,GAAG,MAAMtG,QAAQ,CAAC,CAAC;MAEjC,MAAMuG,YAAY,GAAGxG,aAAa,CAACgF,MAAM,CAAEM,QAAQ,IAAK;QAAA,IAAAmB,qBAAA;QACpD,MAAMN,YAAY,GAAGxB,MAAM,CAAC+B,MAAM,CAACH,QAAQ,CAAC,CAACI,IAAI,CAAE7B,IAAI,IAAKA,IAAI,CAACnD,KAAK,KAAK2D,QAAQ,CAAC3D,KAAK,CAAC;QAE1F,IAAI,CAACwE,YAAY,EAAE;UACf,OAAO,IAAI,CAAC,CAAC;QACjB;QAEA,MAAMS,WAAW,IAAAH,qBAAA,GAAGN,YAAY,CAACjB,UAAU,cAAAuB,qBAAA,uBAAvBA,qBAAA,CAAyBtB,IAAI,CAAEZ,OAAO,IAAKA,OAAO,CAACD,SAAS,KAAKA,SAAS,CAAC;QAC/F,OAAO,CAACsC,WAAW,CAAC,CAAC;MACzB,CAAC,CAAC;MAEF,KAAK,MAAMtB,QAAQ,IAAIkB,YAAY,EAAE;QACjC,MAAML,YAAY,GAAGxB,MAAM,CAAC+B,MAAM,CAACH,QAAQ,CAAC,CAACI,IAAI,CAAE7B,IAAI,IAAKA,IAAI,CAACnD,KAAK,KAAK2D,QAAQ,CAAC3D,KAAK,CAAC;QAE1F,IAAIwE,YAAY,EAAE;UACd,MAAM/F,mBAAmB,CAAC+F,YAAY,EAAE7D,UAAU,CAACiC,OAAO,CAAC;UAC3D,MAAMhE,oBAAoB,CAAC+D,SAAS,EAAE6B,YAAY,CAAC3B,EAAE,CAAC;QAC1D,CAAC,MAAM;UACH,MAAMqC,aAAa,GAAG,MAAM1G,OAAO,CAACmF,QAAQ,CAAC;UAC7C,MAAMlF,mBAAmB,CAACyG,aAAa,EAAEvE,UAAU,CAACiC,OAAO,CAAC;UAC5D,MAAMhE,oBAAoB,CAAC+D,SAAS,EAAEuC,aAAa,CAACrC,EAAE,CAAC;QAC3D;MACJ;MAEA,MAAMsC,YAAY,GAAG,MAAM7G,QAAQ,CAAC,CAAC;MACrC,MAAMyE,YAAY,GAAGC,MAAM,CAACC,OAAO,CAACkC,YAAY,CAAC,CAACjC,GAAG,CAAC,CAAC,CAACL,EAAE,EAAEM,IAAI,CAAC,MAAM;QAAEN,EAAE;QAAE,GAAGM;MAAK,CAAC,CAAC,CAAC;MACxF,MAAMC,iBAAiB,GAAGL,YAAY,CAACM,MAAM,CAAEF,IAAI;QAAA,IAAAiC,iBAAA;QAAA,QAAAA,iBAAA,GAC/CjC,IAAI,CAACI,UAAU,cAAA6B,iBAAA,uBAAfA,iBAAA,CAAiB5B,IAAI,CAAEZ,OAAO,IAAKA,OAAO,CAACD,SAAS,KAAKA,SAAS,CAAC;MAAA,CACvE,CAAC;MAED/C,YAAY,CAACwD,iBAAiB,CAAC;MAC/BrF,KAAK,CAACgG,OAAO,CAAC,GAAGc,YAAY,CAACQ,MAAM,gCAAgC,CAAC;IACzE,CAAC,CAAC,OAAO5E,KAAK,EAAE;MACZ1C,KAAK,CAAC0C,KAAK,CAAC,qCAAqC,CAAC;MAClD8B,OAAO,CAAC9B,KAAK,CAACA,KAAK,CAAC;IACxB,CAAC,SAAS;MACND,eAAe,CAAC,KAAK,CAAC,CAAC,CAAC;IAC5B;EACJ,CAAC;EAED,MAAM8E,wBAAwB,GAAG,MAAAA,CAAA,KAAY;IACzC,IAAI;MACA,IAAI,CAAC3E,UAAU,IAAI,CAACA,UAAU,CAACiC,OAAO,EAAE;QACpC7E,KAAK,CAAC0C,KAAK,CAAC,iDAAiD,CAAC;QAC9D;MACJ;MAEAD,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC;;MAEvB,MAAMmC,SAAS,GAAGhC,UAAU,CAACiC,OAAO,CAACC,EAAE;MACvC,MAAM0C,iBAAiB,GAAG5F,SAAS,CAAC0D,MAAM,CAACM,QAAQ,IAAIA,QAAQ,CAACzD,IAAI,KAAK,OAAO,CAAC;MAEjF,IAAIqF,iBAAiB,CAACF,MAAM,KAAK,CAAC,EAAE;QAChCtH,KAAK,CAACyH,IAAI,CAAC,yBAAyB,CAAC;QACrC;MACJ;MAEA,KAAK,MAAM7B,QAAQ,IAAI4B,iBAAiB,EAAE;QACtC,MAAMhH,qBAAqB,CAACoF,QAAQ,CAACd,EAAE,EAAEF,SAAS,CAAC;QACnD,MAAMhE,qBAAqB,CAACgE,SAAS,EAAEgB,QAAQ,CAACd,EAAE,CAAC;MACvD;MAEAjD,YAAY,CAACD,SAAS,CAAC0D,MAAM,CAACM,QAAQ,IAAIA,QAAQ,CAACzD,IAAI,KAAK,OAAO,CAAC,CAAC;MACrEnC,KAAK,CAACgG,OAAO,CAAC,GAAGwB,iBAAiB,CAACF,MAAM,kCAAkC,CAAC;IAChF,CAAC,CAAC,OAAO5B,GAAG,EAAE;MACV1F,KAAK,CAAC0C,KAAK,CAAC,6BAA6B,CAAC;MAC1C8B,OAAO,CAAC9B,KAAK,CAACgD,GAAG,CAAC;IACtB,CAAC,SAAS;MACNjD,eAAe,CAAC,KAAK,CAAC,CAAC,CAAC;IAC5B;EACJ,CAAC;EAED,MAAM4C,iBAAiB,GAAGzD,SAAS,CAAC0D,MAAM,CAAEM,QAAQ,IAAK;IACrD,OACI,CAACA,QAAQ,CAAC5D,IAAI,CAAC0F,WAAW,CAAC,CAAC,CAACC,UAAU,CAACjE,WAAW,CAACgE,WAAW,CAAC,CAAC,CAAC,IAC9D9B,QAAQ,CAAC3D,KAAK,CAACyF,WAAW,CAAC,CAAC,CAACC,UAAU,CAACjE,WAAW,CAACgE,WAAW,CAAC,CAAC,CAAC,MACrE9D,UAAU,KAAK,KAAK,IAAIgC,QAAQ,CAACzD,IAAI,KAAKyB,UAAU,CAAC;EAE9D,CAAC,CAAC;EAEF,oBACIpC,OAAA,CAACnB,iBAAiB;IAAAuH,QAAA,eAEdpG,OAAA;MAAAoG,QAAA,gBACIpG,OAAA,CAACrB,MAAM;QAAA0H,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACVxG,OAAA;QAAKyG,SAAS,EAAC;MAAoB;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAC1CxG,OAAA;QAAKyG,SAAS,EAAC,qBAAqB;QAAAL,QAAA,gBAChCpG,OAAA;UAAAoG,QAAA,EAAI;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAElBxG,OAAA;UAAKyG,SAAS,EAAC,kBAAkB;UAAAL,QAAA,gBAC7BpG,OAAA;YACI0G,IAAI,EAAC,MAAM;YACXC,WAAW,EAAC,4BAA4B;YACxChC,KAAK,EAAEzC,WAAY;YACnB0E,QAAQ,EAAGlC,CAAC,IAAKvC,cAAc,CAACuC,CAAC,CAACE,MAAM,CAACD,KAAK;UAAE;YAAA0B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACnD,CAAC,eACFxG,OAAA;YAAQ2E,KAAK,EAAEvC,UAAW;YAACwE,QAAQ,EAAGlC,CAAC,IAAKrC,aAAa,CAACqC,CAAC,CAACE,MAAM,CAACD,KAAK,CAAE;YAAAyB,QAAA,gBACtEpG,OAAA;cAAQ2E,KAAK,EAAC,KAAK;cAAAyB,QAAA,EAAC;YAAS;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACtCxG,OAAA;cAAQ2E,KAAK,EAAC,UAAU;cAAAyB,QAAA,EAAC;YAAQ;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eAC1CxG,OAAA;cAAQ2E,KAAK,EAAC,OAAO;cAAAyB,QAAA,EAAC;YAAK;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACR,CAAC,EAEL1F,SAAS,gBACNd,OAAA,CAACpB,MAAM;UAAAyH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,GACVtF,KAAK,gBACLlB,OAAA;UAAGyG,SAAS,EAAC,OAAO;UAAAL,QAAA,EAAElF;QAAK;UAAAmF,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,gBAEhCxG,OAAA;UAAKyG,SAAS,EAAC,iBAAiB;UAAAL,QAAA,EAC3BvC,iBAAiB,CAACF,GAAG,CAAES,QAAQ,iBAE5BpE,OAAA;YAEIyG,SAAS,EAAE,iBAAiBzE,SAAS,CAACoC,QAAQ,CAACd,EAAE,CAAC,GAAG,MAAM,GAAG,QAAQ,EAAG;YACzEuD,OAAO,EAAEA,CAAA,KAAM3B,UAAU,CAACd,QAAQ,CAACd,EAAE,CAAE;YAAA8C,QAAA,gBAEvCpG,OAAA;cAAAoG,QAAA,EAAKhC,QAAQ,CAAC5D;YAAI;cAAA6F,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,EACvBxE,SAAS,CAACoC,QAAQ,CAACd,EAAE,CAAC,iBACnBtD,OAAA;cAAKyG,SAAS,EAAC,6BAA6B;cAAAL,QAAA,gBACxCpG,OAAA;gBACI8G,GAAG,EAAE1C,QAAQ,CAAC2C,SAAS,IAAI,sBAAuB;gBAClDC,GAAG,EAAE,GAAG5C,QAAQ,CAAC5D,IAAI,YAAa;gBAClCiG,SAAS,EAAC;cAA2B;gBAAAJ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACxC,CAAC,eAEFxG,OAAA;gBAAKyG,SAAS,EAAC,eAAe;gBAAAL,QAAA,gBAC1BpG,OAAA;kBAAAoG,QAAA,GAAG,SAAO,EAAChC,QAAQ,CAAC3D,KAAK;gBAAA;kBAAA4F,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC,eAC9BxG,OAAA;kBAAAoG,QAAA,GAAG,SAAO,EAAChC,QAAQ,CAAC1D,KAAK;gBAAA;kBAAA2F,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC,eAC9BxG,OAAA;kBAAAoG,QAAA,GAAG,QAAM,EAAChC,QAAQ,CAACzD,IAAI;gBAAA;kBAAA0F,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC,eAC5BxG,OAAA;kBAAKyG,SAAS,EAAC,kBAAkB;kBAAAL,QAAA,gBAC7BpG,OAAA;oBACIyG,SAAS,EAAC,oBAAoB;oBAC9BI,OAAO,EAAGnC,CAAC,IAAK;sBACZA,CAAC,CAACuC,eAAe,CAAC,CAAC;sBACnB9B,eAAe,CAACf,QAAQ,CAAC;oBAC7B,CAAE;oBAAAgC,QAAA,EACL;kBAED;oBAAAC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAQ,CAAC,EACRpC,QAAQ,CAACzD,IAAI,KAAK,OAAO,iBACtBX,OAAA;oBACIyG,SAAS,EAAC,sBAAsB;oBAChCI,OAAO,EAAGnC,CAAC,IAAK;sBACZA,CAAC,CAACuC,eAAe,CAAC,CAAC;sBACnB9C,sBAAsB,CAACC,QAAQ,CAAC;oBACpC,CAAE;oBAAAgC,QAAA,EACL;kBAED;oBAAAC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAQ,CACX;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACA,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACL,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACL,CAER;UAAA,GA1CIpC,QAAQ,CAACd,EAAE;YAAA+C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OA4Cf,CACR;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAED,CACR,EAEAxF,YAAY,iBACThB,OAAA,CAACtB,SAAS;UACNwI,MAAM,EAAC,IAAI;UACXC,KAAK,EAAC,IAAI;UACVC,MAAM,EAAC,GAAG;UACVC,KAAK,EAAC,SAAS;UACfC,SAAS,EAAC,YAAY;UACtBC,YAAY,EAAE;YAAEC,OAAO,EAAE,MAAM;YAAEC,cAAc,EAAE,QAAQ;YAAEC,SAAS,EAAE;UAAO,CAAE;UAC/EC,OAAO,EAAE;QAAK;UAAAtB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjB,CACJ,eAEDxG,OAAA;UACIyG,SAAS,EAAC,oBAAoB;UAC9BI,OAAO,EAAEA,CAAA,KAAMtF,yBAAyB,CAAC,IAAI,CAAE;UAAA6E,QAAA,EAClD;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACTxG,OAAA;UACIyG,SAAS,EAAC,oBAAoB;UAC9BI,OAAO,EAAEA,CAAA,KAAMtE,0BAA0B,CAAC,IAAI,CAAE;UAAA6D,QAAA,EACnD;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAGTxG,OAAA;UAAQyG,SAAS,EAAC,oBAAoB;UAACI,OAAO,EAAEzB,2BAA4B;UAAAgB,QAAA,EAAC;QAE7E;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACTxG,OAAA;UACIyG,SAAS,EAAC,+BAA+B;UACzCI,OAAO,EAAEd,wBAAyB;UAAAK,QAAA,EACrC;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACTxG,OAAA,CAACzB,KAAK;UACFqJ,MAAM,EAAEtF,uBAAwB;UAChCuF,cAAc,EAAEA,CAAA,KAAMtF,0BAA0B,CAAC,KAAK,CAAE;UACxDkE,SAAS,EAAC,OAAO;UACjBqB,gBAAgB,EAAC,eAAe;UAAA1B,QAAA,gBAEhCpG,OAAA;YAAAoG,QAAA,EAAI;UAA8B;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAEvCxG,OAAA;YACIyG,SAAS,EAAC,2CAA2C;YACrDsB,QAAQ,EAAE,MAAOrD,CAAC,IAAK;cACnBA,CAAC,CAACK,cAAc,CAAC,CAAC;cAClB,IAAI;gBAAA,IAAAiD,oBAAA;gBACA,MAAM5E,SAAS,GAAGhC,UAAU,aAAVA,UAAU,wBAAA4G,oBAAA,GAAV5G,UAAU,CAAEiC,OAAO,cAAA2E,oBAAA,uBAAnBA,oBAAA,CAAqB1E,EAAE;gBACzC,MAAM2E,IAAI,GAAG,WAAW;gBAExB,KAAK,MAAMC,MAAM,IAAI1F,8BAA8B,EAAE;kBACjD,MAAMlD,gBAAgB,CAAC8D,SAAS,EAAE8E,MAAM,EAAExF,mBAAmB,CAACyF,IAAI,CAAC,CAAC,EAAEF,IAAI,CAAC;gBAC/E;gBAEAzJ,KAAK,CAACgG,OAAO,CAAC,qBAAqB,CAAC;gBACpCjC,0BAA0B,CAAC,KAAK,CAAC;gBACjCE,iCAAiC,CAAC,EAAE,CAAC;gBACrCE,sBAAsB,CAAC,EAAE,CAAC;cAC9B,CAAC,CAAC,OAAOzB,KAAK,EAAE;gBACZ1C,KAAK,CAAC0C,KAAK,CAAC,+BAA+B,CAAC;gBAC5C8B,OAAO,CAAC9B,KAAK,CAACA,KAAK,CAAC;cACxB;YACJ,CAAE;YAAAkF,QAAA,gBAEFpG,OAAA;cAAAoG,QAAA,EAAO;YAAkB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eAEjCxG,OAAA;cAAKyG,SAAS,EAAC,qBAAqB;cAAAL,QAAA,gBAChCpG,OAAA;gBACI0G,IAAI,EAAC,UAAU;gBACf0B,OAAO,EAAEhI,SAAS,CACb0D,MAAM,CAACuE,GAAG,IAAIA,GAAG,CAAC1H,IAAI,KAAK,OAAO,CAAC,CACnC2H,KAAK,CAACD,GAAG,IAAI7F,8BAA8B,CAAC+F,QAAQ,CAACF,GAAG,CAAC/E,EAAE,CAAC,CAAE;gBACnEsD,QAAQ,EAAGlC,CAAC,IAAK;kBACb,MAAM8D,SAAS,GAAG9D,CAAC,CAACE,MAAM,CAACwD,OAAO;kBAClC,MAAMK,WAAW,GAAGrI,SAAS,CACxB0D,MAAM,CAACuE,GAAG,IAAIA,GAAG,CAAC1H,IAAI,KAAK,OAAO,CAAC,CACnCgD,GAAG,CAAC0E,GAAG,IAAIA,GAAG,CAAC/E,EAAE,CAAC;kBACvBb,iCAAiC,CAAC+F,SAAS,GAAGC,WAAW,GAAG,EAAE,CAAC;gBACnE;cAAE;gBAAApC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACL,CAAC,eACFxG,OAAA;gBAAAoG,QAAA,EAAM;cAAoB;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAChC,CAAC,eAENxG,OAAA;cAAKyG,SAAS,EAAC,qBAAqB;cAAAL,QAAA,EAC/BhG,SAAS,CACL0D,MAAM,CAACuE,GAAG,IAAIA,GAAG,CAAC1H,IAAI,KAAK,OAAO,CAAC,CACnCgD,GAAG,CAAC0E,GAAG,iBACJrI,OAAA;gBAAAoG,QAAA,gBACIpG,OAAA;kBACI0G,IAAI,EAAC,UAAU;kBACf0B,OAAO,EAAE5F,8BAA8B,CAAC+F,QAAQ,CAACF,GAAG,CAAC/E,EAAE,CAAE;kBACzDsD,QAAQ,EAAGlC,CAAC,IAAK;oBACb,IAAIA,CAAC,CAACE,MAAM,CAACwD,OAAO,EAAE;sBAClB3F,iCAAiC,CAACoC,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAEwD,GAAG,CAAC/E,EAAE,CAAC,CAAC;oBAChE,CAAC,MAAM;sBACHb,iCAAiC,CAACoC,IAAI,IAClCA,IAAI,CAACf,MAAM,CAACR,EAAE,IAAIA,EAAE,KAAK+E,GAAG,CAAC/E,EAAE,CACnC,CAAC;oBACL;kBACJ;gBAAE;kBAAA+C,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACL,CAAC,eACFxG,OAAA;kBAAM0I,KAAK,EAAE;oBAAEC,UAAU,EAAE;kBAAM,CAAE;kBAAAvC,QAAA,EAAEiC,GAAG,CAAC7H;gBAAI;kBAAA6F,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC;cAAA,GAd/C6B,GAAG,CAAC/E,EAAE;gBAAA+C,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAeX,CACR;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACL,CAAC,eAENxG,OAAA;cAAAoG,QAAA,EAAO;YAAQ;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACvBxG,OAAA;cACI2E,KAAK,EAAEjC,mBAAoB;cAC3BkE,QAAQ,EAAGlC,CAAC,IAAK/B,sBAAsB,CAAC+B,CAAC,CAACE,MAAM,CAACD,KAAK,CAAE;cACxDgC,WAAW,EAAC,uBAAuB;cACnCiC,IAAI,EAAE;YAAE;cAAAvC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACX,CAAC,eAEFxG,OAAA;cAAKyG,SAAS,EAAC,eAAe;cAAAL,QAAA,gBAC1BpG,OAAA;gBACI0G,IAAI,EAAC,QAAQ;gBACbD,SAAS,EAAC,gBAAgB;gBAC1BoC,QAAQ,EAAErG,8BAA8B,CAACsD,MAAM,KAAK,CAAC,IAAI,CAACpD,mBAAmB,CAACyF,IAAI,CAAC,CAAE;gBAAA/B,QAAA,EACxF;cAED;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eACTxG,OAAA;gBACI0G,IAAI,EAAC,QAAQ;gBACbD,SAAS,EAAC,eAAe;gBACzBI,OAAO,EAAEA,CAAA,KAAMtE,0BAA0B,CAAC,KAAK,CAAE;gBAAA6D,QAAA,EACpD;cAED;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACR,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACJ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC,eAIRxG,OAAA,CAACzB,KAAK;UACFqJ,MAAM,EAAElG,wBAAyB;UACjCmG,cAAc,EAAExD,uBAAwB;UACxCoC,SAAS,EAAC,sBAAsB;UAChCqB,gBAAgB,EAAC,eAAe;UAAA1B,QAAA,gBAEhCpG,OAAA;YAAAoG,QAAA,EAAI;UAAyB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAClCxG,OAAA;YAAAoG,QAAA,GAAG,kCACiC,eAAApG,OAAA;cAAAoG,QAAA,EAAStE,gBAAgB,aAAhBA,gBAAgB,uBAAhBA,gBAAgB,CAAEtB;YAAI;cAAA6F,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAS,CAAC,sBAC7E;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,eACJxG,OAAA;YAAKyG,SAAS,EAAC,eAAe;YAAAL,QAAA,gBAC1BpG,OAAA;cAAQyG,SAAS,EAAC,gBAAgB;cAACI,OAAO,EAAEvC,qBAAsB;cAAA8B,QAAA,EAAC;YAEnE;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACTxG,OAAA;cAAQyG,SAAS,EAAC,eAAe;cAACI,OAAO,EAAExC,uBAAwB;cAAA+B,QAAA,EAAC;YAEpE;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACR,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eAGRxG,OAAA,CAACzB,KAAK;UACFqJ,MAAM,EAAEtG,sBAAuB;UAC/BuG,cAAc,EAAEA,CAAA,KAAMtG,yBAAyB,CAAC,KAAK,CAAE;UACvDkF,SAAS,EAAC,OAAO;UACjBqB,gBAAgB,EAAC,eAAe;UAAA1B,QAAA,gBAEhCpG,OAAA;YAAAoG,QAAA,EAAI;UAAgB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACzBxG,OAAA;YAAMyG,SAAS,EAAC,yBAAyB;YAACsB,QAAQ,EAAEjD,iBAAkB;YAAAsB,QAAA,gBAClEpG,OAAA;cAAAoG,QAAA,EAAO;YAAK;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACpBxG,OAAA;cACI0G,IAAI,EAAC,MAAM;cACXlG,IAAI,EAAC,MAAM;cACXmE,KAAK,EAAErE,WAAW,CAACE,IAAK;cACxBoG,QAAQ,EAAEnC,YAAa;cACvBqE,QAAQ;YAAA;cAAAzC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACX,CAAC,eACFxG,OAAA;cAAAoG,QAAA,EAAO;YAAM;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACrBxG,OAAA;cACI0G,IAAI,EAAC,OAAO;cACZlG,IAAI,EAAC,OAAO;cACZmE,KAAK,EAAErE,WAAW,CAACG,KAAM;cACzBmG,QAAQ,EAAEnC,YAAa;cACvBqE,QAAQ;YAAA;cAAAzC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACX,CAAC,eACFxG,OAAA;cAAAoG,QAAA,EAAO;YAAM;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACrBxG,OAAA;cACI0G,IAAI,EAAC,MAAM;cACXlG,IAAI,EAAC,OAAO;cACZmE,KAAK,EAAErE,WAAW,CAACI,KAAM;cACzBkG,QAAQ,EAAEnC,YAAa;cACvBqE,QAAQ;YAAA;cAAAzC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACX,CAAC,eACFxG,OAAA;cAAAoG,QAAA,EAAO;YAAS;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACxBxG,OAAA;cACI0G,IAAI,EAAC,UAAU;cACflG,IAAI,EAAC,UAAU;cACfmE,KAAK,EAAErE,WAAW,CAACM,QAAS;cAC5BgG,QAAQ,EAAEnC,YAAa;cACvBqE,QAAQ;YAAA;cAAAzC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACX,CAAC,eACFxG,OAAA;cAAAoG,QAAA,EAAO;YAAK;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACpBxG,OAAA;cAAQQ,IAAI,EAAC,MAAM;cAACmE,KAAK,EAAErE,WAAW,CAACK,IAAK;cAACiG,QAAQ,EAAEnC,YAAa;cAAA2B,QAAA,gBAChEpG,OAAA;gBAAQ2E,KAAK,EAAC,UAAU;gBAAAyB,QAAA,EAAC;cAAQ;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eAC1CxG,OAAA;gBAAQ2E,KAAK,EAAC,OAAO;gBAAAyB,QAAA,EAAC;cAAK;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAChC,CAAC,eACTxG,OAAA;cAAAoG,QAAA,EAAO;YAAc;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eAC7BxG,OAAA;cACI0G,IAAI,EAAC,MAAM;cACXqC,MAAM,EAAC,SAAS;cAChBnC,QAAQ,EAAGlC,CAAC,IACRnE,cAAc,CAAEsE,IAAI,KAAM;gBACtB,GAAGA,IAAI;gBACPhE,SAAS,EAAE6D,CAAC,CAACE,MAAM,CAACoE,KAAK,CAAC,CAAC;cAC/B,CAAC,CAAC;YACL;cAAA3C,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACJ,CAAC,EAEDlG,WAAW,CAACO,SAAS,iBAClBb,OAAA;cACI8G,GAAG,EAAEmC,GAAG,CAACC,eAAe,CAAC5I,WAAW,CAACO,SAAS,CAAE;cAChDmG,GAAG,EAAC,SAAS;cACb0B,KAAK,EAAE;gBACHvB,KAAK,EAAE,OAAO;gBACdD,MAAM,EAAE,OAAO;gBACfiC,SAAS,EAAE,OAAO;gBAClBC,YAAY,EAAE,KAAK;gBACnBC,MAAM,EAAE;cACZ;YAAE;cAAAhD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACL,CACJ,eAGDxG,OAAA;cAAQ0G,IAAI,EAAC,QAAQ;cAAAN,QAAA,EAAC;YAAY;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eAC3CxG,OAAA;cACI0G,IAAI,EAAC,QAAQ;cACbG,OAAO,EAAEA,CAAA,KAAMtF,yBAAyB,CAAC,KAAK,CAAE;cAChDkF,SAAS,EAAC,eAAe;cAAAL,QAAA,EAC5B;YAED;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACP,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC,EACPhF,eAAe,IAAII,YAAY,iBAC5B5B,OAAA,CAACR,gBAAgB;UACboI,MAAM,EAAEpG,eAAgB;UACxB8H,OAAO,EAAEA,CAAA,KAAM7H,kBAAkB,CAAC,KAAK,CAAE;UACzC8H,WAAW,EAAE3H,YAAa;UAC1B4H,cAAc,EAAE3H,eAAgB;UAChCkG,QAAQ,EAAE,MAAOrD,CAAC,IAAK;YACnBA,CAAC,CAACK,cAAc,CAAC,CAAC;YAClB,IAAI;cACA,IAAInD,YAAY,IAAIA,YAAY,CAAC0B,EAAE,EAAE;gBAAA,IAAAmG,gBAAA;gBACjC,IAAIC,gBAAgB,GAAG9H,YAAY,CAACmF,SAAS,IAAI,EAAE;gBACnD,IAAInF,YAAY,CAACf,SAAS,EAAE;kBACxB6I,gBAAgB,GAAG,MAAMnK,YAAY,CAACqC,YAAY,CAACf,SAAS,CAAC;gBACjE;gBAEA,MAAM8I,eAAe,GAAG,MAAMxK,UAAU,CAACyC,YAAY,CAAC0B,EAAE,EAAE;kBACtD9C,IAAI,EAAEoB,YAAY,CAACpB,IAAI;kBACvBC,KAAK,EAAEmB,YAAY,CAACnB,KAAK;kBACzBC,KAAK,EAAEkB,YAAY,CAAClB,KAAK;kBACzBC,IAAI,EAAEiB,YAAY,CAACjB,IAAI;kBACvBoG,SAAS,EAAE2C;gBACf,CAAC,CAAC;gBAEFrJ,YAAY,CAAEuJ,aAAa,IACvBA,aAAa,CAACjG,GAAG,CAAES,QAAQ,IACvBA,QAAQ,CAACd,EAAE,KAAKqG,eAAe,CAACrG,EAAE,GAAGqG,eAAe,GAAGvF,QAC3D,CACJ,CAAC;;gBAED;gBACA,IAAI,CAAAhD,UAAU,aAAVA,UAAU,wBAAAqI,gBAAA,GAAVrI,UAAU,CAAEwC,IAAI,cAAA6F,gBAAA,uBAAhBA,gBAAA,CAAkBnG,EAAE,MAAKqG,eAAe,CAACrG,EAAE,EAAE;kBAC7C7D,wBAAwB,CAAC2B,UAAU,EAAEuI,eAAe,CAAC;gBACzD;gBAEAnL,KAAK,CAACgG,OAAO,CAAC,gCAAgC,CAAC;gBAC/C/C,kBAAkB,CAAC,KAAK,CAAC;cAC7B;YACJ,CAAC,CAAC,OAAOyC,GAAG,EAAE;cACV1F,KAAK,CAAC0C,KAAK,CAAC,8CAA8C,CAAC;cAC3D8B,OAAO,CAAC9B,KAAK,CAACgD,GAAG,CAAC;YACtB;UACJ,CAAE;UACF2F,KAAK,EAAC;QAAe;UAAAxD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxB,CACJ;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEA,CAAC,eACNxG,OAAA,CAACvB,cAAc;QAAA4H,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACU,CAAC;AAG7B;AAACrG,EAAA,CAhmBQD,eAAe;AAAA4J,EAAA,GAAf5J,eAAe;AAkmBxB,eAAeA,eAAe;AAAC,IAAA4J,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}