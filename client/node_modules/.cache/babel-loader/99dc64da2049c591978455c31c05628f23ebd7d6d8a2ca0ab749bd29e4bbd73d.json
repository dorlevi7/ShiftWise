{"ast":null,"code":"var _jsxFileName = \"/Users/dorlevi/IdeaProjects/newShiftWise/client/src/components/HomeScreen.js\",\n  _s = $RefreshSig$();\n// React & State\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\n// Components\nimport Navbar from './Navbar';\nimport BackgroundWrapper from './BackgroundWrapper';\nimport Loader from './Loader';\n\n// Styles\nimport '../styles/HomeScreen.css';\nimport '../styles/Navbar.css';\n\n// Services\nimport { getAvailability } from '../services/availabilityService';\nimport { getAdminMessage, saveAdminMessage } from '../services/homeService';\n\n// Utilities\nimport { calculateWeekKey } from '../utils/utils';\n\n// Third-party Libraries\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction HomeScreen() {\n  _s();\n  var _userData$company;\n  const [userData, setUserData] = useState(null);\n  const navigate = useNavigate();\n  const [scheduleByDate, setScheduleByDate] = useState({\n    current: [],\n    next: []\n  });\n  const [weeklyStats, setWeeklyStats] = useState({\n    totalShifts: 0,\n    nextShift: null\n  });\n  const [adminMessage, setAdminMessage] = useState('');\n  const [isSaving, setIsSaving] = useState(false);\n  useEffect(() => {\n    const fetchAdminMessage = async () => {\n      if (userData) {\n        try {\n          const messageData = await getAdminMessage(userData.company.id);\n          setAdminMessage(messageData.message || '');\n        } catch (error) {\n          console.error('Failed to load admin message:', error);\n        }\n      }\n    };\n    fetchAdminMessage();\n  }, [userData]);\n  const handleSaveAdminMessage = async () => {\n    try {\n      setIsSaving(true);\n      await saveAdminMessage(userData.company.id, adminMessage);\n      toast.success('Message saved!');\n    } catch (error) {\n      toast.error('Failed to save message');\n    } finally {\n      setIsSaving(false);\n    }\n  };\n  useEffect(() => {\n    const loggedUser = JSON.parse(localStorage.getItem('user'));\n    if (!loggedUser) {\n      navigate('/');\n    } else {\n      setUserData(loggedUser);\n    }\n  }, [navigate]);\n  useEffect(() => {\n    const fetchShifts = async () => {\n      if (!userData) return;\n      const companyId = userData.company.id;\n      const userId = userData.user.id;\n      const weekOffsets = [0, 1];\n      const allWeeks = {};\n      const shifts = ['Morning', 'Noon', 'Evening', 'Night'];\n      const shiftTimes = {\n        Morning: '06:00-14:00',\n        Noon: '10:00-18:00',\n        Evening: '14:00-22:00',\n        Night: '22:00-06:00'\n      };\n      const days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n      for (let offset of weekOffsets) {\n        const weekKey = calculateWeekKey(offset);\n        const availability = await getAvailability(companyId, weekKey, userId);\n        const startOfWeek = new Date();\n        startOfWeek.setDate(startOfWeek.getDate() + offset * 7 - startOfWeek.getDay());\n        const formatted = [];\n        days.forEach((day, i) => {\n          const date = new Date(startOfWeek);\n          date.setDate(startOfWeek.getDate() + i);\n          const dateStr = date.toLocaleDateString('en-GB'); // format: DD/MM/YYYY\n\n          shifts.forEach(shift => {\n            var _availability$shift, _availability$shift$d;\n            const status = availability === null || availability === void 0 ? void 0 : (_availability$shift = availability[shift]) === null || _availability$shift === void 0 ? void 0 : (_availability$shift$d = _availability$shift[day]) === null || _availability$shift$d === void 0 ? void 0 : _availability$shift$d.status;\n            if (status === 'selected') {\n              formatted.push({\n                date: dateStr,\n                day,\n                shift,\n                time: shiftTimes[shift]\n              });\n            }\n          });\n        });\n        allWeeks[offset === 0 ? 'current' : 'next'] = formatted;\n      }\n\n      // 🔵 סטטיסטיקה שבועית אישית\n      const allShifts = [...(allWeeks.current || []), ...(allWeeks.next || [])];\n      const allShiftsSorted = allShifts.sort((a, b) => {\n        const [dayA, monthA, yearA] = a.date.split('/').map(Number);\n        const [dayB, monthB, yearB] = b.date.split('/').map(Number);\n        const dateA = new Date(yearA, monthA - 1, dayA);\n        const dateB = new Date(yearB, monthB - 1, dayB);\n        return dateA - dateB;\n      });\n      const now = new Date();\n      const nextShift = allShiftsSorted.find(item => {\n        const [day, month, year] = item.date.split('/').map(Number);\n        const [startHour, startMinute] = item.time.split('-')[0].split(':').map(Number);\n        const shiftDateTime = new Date(year, month - 1, day, startHour, startMinute);\n        return shiftDateTime >= now;\n      });\n      setScheduleByDate(allWeeks);\n      setWeeklyStats({\n        totalShifts: allShifts.length,\n        nextShift\n      });\n    };\n    fetchShifts();\n  }, [userData]);\n  if (!userData) {\n    return /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 16\n    }, this);\n  }\n  const greeting = () => {\n    const hour = new Date().getHours();\n    if (hour < 12) return 'Good morning';\n    if (hour < 18) return 'Good afternoon';\n    return 'Good evening';\n  };\n  const todayStr = new Date().toLocaleDateString('en-GB', {\n    weekday: 'long',\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric'\n  });\n  return /*#__PURE__*/_jsxDEV(BackgroundWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navbar-placeholder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"home-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [greeting(), \", \", userData.user.name, \"!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          gap: '6px',\n          fontSize: '15px',\n          color: '#444',\n          fontWeight: 500,\n          marginBottom: '10px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"today-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Today is\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"today-date\",\n            children: todayStr\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"company-inline\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"company-label\",\n          children: \"Company: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"company-name\",\n          children: ((_userData$company = userData.company) === null || _userData$company === void 0 ? void 0 : _userData$company.name) || \"N/A\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"admin-message-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\uD83D\\uDCE2 Message from Admin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 21\n        }, this), userData.user.role === 'admin' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"admin-message-textarea\",\n            value: adminMessage,\n            onChange: e => setAdminMessage(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSaveAdminMessage,\n            className: \"action-button\",\n            disabled: isSaving,\n            style: {\n              marginTop: '10px'\n            },\n            children: isSaving ? 'Saving...' : 'Save Message'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            whiteSpace: 'pre-wrap'\n          },\n          children: adminMessage || 'No message from admin yet.'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weekly-schedules\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Shifts for the current week\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 21\n        }, this), scheduleByDate.current.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: scheduleByDate.current.map((item, index) => {\n            const isNextShift = weeklyStats.nextShift && weeklyStats.nextShift.date === item.date && weeklyStats.nextShift.shift === item.shift && weeklyStats.nextShift.time === item.time;\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: isNextShift ? 'next-shift' : '',\n                children: [isNextShift && /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    marginRight: '6px'\n                  },\n                  children: \"\\u23ED\\uFE0F\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 235,\n                  columnNumber: 61\n                }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: item.date\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 236,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    margin: '0 6px'\n                  },\n                  children: \"\\u2013\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 237,\n                  columnNumber: 45\n                }, this), item.shift, \" \\u2013 \", item.time]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 41\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 37\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No shifts scheduled for the current week.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Shifts for next week\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 21\n        }, this), scheduleByDate.next.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: scheduleByDate.next.map((item, index) => {\n            const isNextShift = weeklyStats.nextShift && weeklyStats.nextShift.date === item.date && weeklyStats.nextShift.shift === item.shift && weeklyStats.nextShift.time === item.time;\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: isNextShift ? 'next-shift' : '',\n                children: [isNextShift && /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    marginRight: '6px'\n                  },\n                  children: \"\\u23ED\\uFE0F\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 261,\n                  columnNumber: 61\n                }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: item.date\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 262,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    margin: '0 6px'\n                  },\n                  children: \"\\u2013\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 263,\n                  columnNumber: 45\n                }, this), item.shift, \" \\u2013 \", item.time]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 41\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 37\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No shifts scheduled for next week.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"home-actions\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"action-button\",\n          onClick: () => navigate('/profile'),\n          children: \"Go to Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 168,\n    columnNumber: 9\n  }, this);\n}\n_s(HomeScreen, \"eUX5ER4CABRR5kLGdhVun2xqn4Y=\", false, function () {\n  return [useNavigate];\n});\n_c = HomeScreen;\nexport default HomeScreen;\nvar _c;\n$RefreshReg$(_c, \"HomeScreen\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","Navbar","BackgroundWrapper","Loader","getAvailability","getAdminMessage","saveAdminMessage","calculateWeekKey","toast","ToastContainer","jsxDEV","_jsxDEV","Fragment","_Fragment","HomeScreen","_s","_userData$company","userData","setUserData","navigate","scheduleByDate","setScheduleByDate","current","next","weeklyStats","setWeeklyStats","totalShifts","nextShift","adminMessage","setAdminMessage","isSaving","setIsSaving","fetchAdminMessage","messageData","company","id","message","error","console","handleSaveAdminMessage","success","loggedUser","JSON","parse","localStorage","getItem","fetchShifts","companyId","userId","user","weekOffsets","allWeeks","shifts","shiftTimes","Morning","Noon","Evening","Night","days","offset","weekKey","availability","startOfWeek","Date","setDate","getDate","getDay","formatted","forEach","day","i","date","dateStr","toLocaleDateString","shift","_availability$shift","_availability$shift$d","status","push","time","allShifts","allShiftsSorted","sort","a","b","dayA","monthA","yearA","split","map","Number","dayB","monthB","yearB","dateA","dateB","now","find","item","month","year","startHour","startMinute","shiftDateTime","length","fileName","_jsxFileName","lineNumber","columnNumber","greeting","hour","getHours","todayStr","weekday","children","className","name","style","display","justifyContent","alignItems","gap","fontSize","color","fontWeight","marginBottom","role","value","onChange","e","target","onClick","disabled","marginTop","whiteSpace","index","isNextShift","marginRight","margin","_c","$RefreshReg$"],"sources":["/Users/dorlevi/IdeaProjects/newShiftWise/client/src/components/HomeScreen.js"],"sourcesContent":["// React & State\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\n// Components\nimport Navbar from './Navbar';\nimport BackgroundWrapper from './BackgroundWrapper';\nimport Loader from './Loader';\n\n// Styles\nimport '../styles/HomeScreen.css';\nimport '../styles/Navbar.css';\n\n// Services\nimport { getAvailability } from '../services/availabilityService';\nimport { getAdminMessage, saveAdminMessage } from '../services/homeService';\n\n// Utilities\nimport { calculateWeekKey } from '../utils/utils';\n\n// Third-party Libraries\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nfunction HomeScreen() {\n    const [userData, setUserData] = useState(null);\n    const navigate = useNavigate();\n    const [scheduleByDate, setScheduleByDate] = useState({ current: [], next: [] });\n\n    const [weeklyStats, setWeeklyStats] = useState({ totalShifts: 0, nextShift: null });\n    const [adminMessage, setAdminMessage] = useState('');\n    const [isSaving, setIsSaving] = useState(false);\n\n    useEffect(() => {\n        const fetchAdminMessage = async () => {\n            if (userData) {\n                try {\n                    const messageData = await getAdminMessage(userData.company.id);\n                    setAdminMessage(messageData.message || '');\n                } catch (error) {\n                    console.error('Failed to load admin message:', error);\n                }\n            }\n        };\n\n        fetchAdminMessage();\n    }, [userData]);\n\n    const handleSaveAdminMessage = async () => {\n        try {\n            setIsSaving(true);\n            await saveAdminMessage(userData.company.id, adminMessage);\n            toast.success('Message saved!');\n        } catch (error) {\n            toast.error('Failed to save message');\n        } finally {\n            setIsSaving(false);\n        }\n    };\n\n    useEffect(() => {\n        const loggedUser = JSON.parse(localStorage.getItem('user'));\n        if (!loggedUser) {\n            navigate('/');\n        } else {\n            setUserData(loggedUser);\n        }\n    }, [navigate]);\n\n    useEffect(() => {\n        const fetchShifts = async () => {\n            if (!userData) return;\n\n            const companyId = userData.company.id;\n            const userId = userData.user.id;\n            const weekOffsets = [0, 1];\n            const allWeeks = {};\n\n            const shifts = ['Morning', 'Noon', 'Evening', 'Night'];\n            const shiftTimes = {\n                Morning: '06:00-14:00',\n                Noon: '10:00-18:00',\n                Evening: '14:00-22:00',\n                Night: '22:00-06:00',\n            };\n\n            const days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n\n            for (let offset of weekOffsets) {\n                const weekKey = calculateWeekKey(offset);\n                const availability = await getAvailability(companyId, weekKey, userId);\n\n                const startOfWeek = new Date();\n                startOfWeek.setDate(startOfWeek.getDate() + offset * 7 - startOfWeek.getDay());\n\n                const formatted = [];\n\n                days.forEach((day, i) => {\n                    const date = new Date(startOfWeek);\n                    date.setDate(startOfWeek.getDate() + i);\n                    const dateStr = date.toLocaleDateString('en-GB'); // format: DD/MM/YYYY\n\n                    shifts.forEach((shift) => {\n                        const status = availability?.[shift]?.[day]?.status;\n                        if (status === 'selected') {\n                            formatted.push({\n                                date: dateStr,\n                                day,\n                                shift,\n                                time: shiftTimes[shift],\n                            });\n                        }\n                    });\n                });\n\n                allWeeks[offset === 0 ? 'current' : 'next'] = formatted;\n            }\n\n            // 🔵 סטטיסטיקה שבועית אישית\n            const allShifts = [...(allWeeks.current || []), ...(allWeeks.next || [])];\n\n            const allShiftsSorted = allShifts.sort((a, b) => {\n                const [dayA, monthA, yearA] = a.date.split('/').map(Number);\n                const [dayB, monthB, yearB] = b.date.split('/').map(Number);\n                const dateA = new Date(yearA, monthA - 1, dayA);\n                const dateB = new Date(yearB, monthB - 1, dayB);\n                return dateA - dateB;\n            });\n\n            const now = new Date();\n            const nextShift = allShiftsSorted.find((item) => {\n                const [day, month, year] = item.date.split('/').map(Number);\n                const [startHour, startMinute] = item.time.split('-')[0].split(':').map(Number);\n                const shiftDateTime = new Date(year, month - 1, day, startHour, startMinute);\n                return shiftDateTime >= now;\n            });\n\n            setScheduleByDate(allWeeks);\n            setWeeklyStats({\n                totalShifts: allShifts.length,\n                nextShift\n            });\n        };\n\n        fetchShifts();\n    }, [userData]);\n\n\n    if (!userData) {\n        return <Loader />;\n    }\n\n    const greeting = () => {\n        const hour = new Date().getHours();\n        if (hour < 12) return 'Good morning';\n        if (hour < 18) return 'Good afternoon';\n        return 'Good evening';\n    };\n\n    const todayStr = new Date().toLocaleDateString('en-GB', {\n        weekday: 'long',\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric'\n    });\n\n    return (\n        <BackgroundWrapper>\n            <ToastContainer />\n            <Navbar />\n            <div className=\"navbar-placeholder\"></div>\n\n            <div className=\"home-container\">\n                <h1>{greeting()}, {userData.user.name}!</h1>\n                <div style={{\n                    display: 'flex',\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    gap: '6px',\n                    fontSize: '15px',\n                    color: '#444',\n                    fontWeight: 500,\n                    marginBottom: '10px'\n                }}>\n                    <div className=\"today-container\">\n                        <span>Today is</span>\n                        <span className=\"today-date\">{todayStr}</span>\n                    </div>\n\n                </div>\n\n\n                <div className=\"company-inline\">\n                    <span className=\"company-label\">Company: </span>\n                    <span className=\"company-name\">{userData.company?.name || \"N/A\"}</span>\n                </div>\n\n                <div className=\"admin-message-box\">\n                    <h3>📢 Message from Admin</h3>\n                    {userData.user.role === 'admin' ? (\n                        <>\n                            <textarea\n                                className=\"admin-message-textarea\"\n                                value={adminMessage}\n                                onChange={(e) => setAdminMessage(e.target.value)}\n                            />\n                            <button\n                                onClick={handleSaveAdminMessage}\n                                className=\"action-button\"\n                                disabled={isSaving}\n                                style={{ marginTop: '10px' }}\n                            >\n                                {isSaving ? 'Saving...' : 'Save Message'}\n                            </button>\n                        </>\n                    ) : (\n                        <p style={{ whiteSpace: 'pre-wrap' }}>{adminMessage || 'No message from admin yet.'}</p>\n                    )}\n                </div>\n\n                <div className=\"weekly-schedules\">\n                    <h3>Shifts for the current week</h3>\n                    {scheduleByDate.current.length > 0 ? (\n                        <ul>\n                            {scheduleByDate.current.map((item, index) => {\n                                const isNextShift =\n                                    weeklyStats.nextShift &&\n                                    weeklyStats.nextShift.date === item.date &&\n                                    weeklyStats.nextShift.shift === item.shift &&\n                                    weeklyStats.nextShift.time === item.time;\n\n                                return (\n                                    <li key={index}>\n                                        <div className={isNextShift ? 'next-shift' : ''}>\n                                            {isNextShift && <span style={{ marginRight: '6px' }}>⏭️</span>}\n                                            <strong>{item.date}</strong>\n                                            <span style={{ margin: '0 6px' }}>–</span>\n                                            {item.shift} – {item.time}\n                                        </div>\n                                    </li>\n                                );\n                            })}\n                        </ul>\n                    ) : (\n                        <p>No shifts scheduled for the current week.</p>\n                    )}\n\n                    <h3>Shifts for next week</h3>\n                    {scheduleByDate.next.length > 0 ? (\n                        <ul>\n                            {scheduleByDate.next.map((item, index) => {\n                                const isNextShift =\n                                    weeklyStats.nextShift &&\n                                    weeklyStats.nextShift.date === item.date &&\n                                    weeklyStats.nextShift.shift === item.shift &&\n                                    weeklyStats.nextShift.time === item.time;\n\n                                return (\n                                    <li key={index}>\n                                        <div className={isNextShift ? 'next-shift' : ''}>\n                                            {isNextShift && <span style={{ marginRight: '6px' }}>⏭️</span>}\n                                            <strong>{item.date}</strong>\n                                            <span style={{ margin: '0 6px' }}>–</span>\n                                            {item.shift} – {item.time}\n                                        </div>\n                                    </li>\n                                );\n                            })}\n                        </ul>\n                    ) : (\n                        <p>No shifts scheduled for next week.</p>\n                    )}\n                </div>\n\n                <div className=\"home-actions\">\n                    <button className=\"action-button\" onClick={() => navigate('/profile')}>\n                        Go to Profile\n                    </button>\n                </div>\n            </div>\n        </BackgroundWrapper>\n    );\n}\n\nexport default HomeScreen;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}