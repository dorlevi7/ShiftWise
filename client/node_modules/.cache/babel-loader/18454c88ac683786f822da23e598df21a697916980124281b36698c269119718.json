{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:5000/api/notifications';\nexport const getUserNotifications = async (companyId, userId) => {\n  try {\n    const response = await axios.get(`${API_URL}/${companyId}/${userId}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching notifications:', error.message);\n    throw error;\n  }\n};\nexport const sendNotification = async (companyId, userId, message, linkTo = '', meta = {}) => {\n  try {\n    const response = await axios.post(`${API_URL}/${companyId}/${userId}`, {\n      message,\n      linkTo,\n      meta // 👈 הוספנו את זה\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error sending notification:', error.message);\n    throw error;\n  }\n};\n\n// סימון הודעה כנקראה\nexport const markAsRead = async (companyId, userId, notificationId) => {\n  try {\n    const response = await axios.post(`${API_URL}/${companyId}/${userId}/${notificationId}/read`);\n    return response.data;\n  } catch (error) {\n    console.error('Error marking notification as read:', error.message);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","API_URL","getUserNotifications","companyId","userId","response","get","data","error","console","message","sendNotification","linkTo","meta","post","markAsRead","notificationId"],"sources":["/Users/dorlevi/IdeaProjects/newShiftWise/client/src/services/notificationService.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = 'http://localhost:5000/api/notifications';\n\nexport const getUserNotifications = async (companyId, userId) => {\n    try {\n        const response = await axios.get(`${API_URL}/${companyId}/${userId}`);\n        return response.data;\n    } catch (error) {\n        console.error('Error fetching notifications:', error.message);\n        throw error;\n    }\n};\n\nexport const sendNotification = async (companyId, userId, message, linkTo = '', meta = {}) => {\n    try {\n        const response = await axios.post(`${API_URL}/${companyId}/${userId}`, {\n            message,\n            linkTo,\n            meta  // 👈 הוספנו את זה\n        });\n        return response.data;\n    } catch (error) {\n        console.error('Error sending notification:', error.message);\n        throw error;\n    }\n};\n\n\n// סימון הודעה כנקראה\nexport const markAsRead = async (companyId, userId, notificationId) => {\n    try {\n        const response = await axios.post(`${API_URL}/${companyId}/${userId}/${notificationId}/read`);\n        return response.data;\n    } catch (error) {\n        console.error('Error marking notification as read:', error.message);\n        throw error;\n    }\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,yCAAyC;AAEzD,OAAO,MAAMC,oBAAoB,GAAG,MAAAA,CAAOC,SAAS,EAAEC,MAAM,KAAK;EAC7D,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,GAAG,CAAC,GAAGL,OAAO,IAAIE,SAAS,IAAIC,MAAM,EAAE,CAAC;IACrE,OAAOC,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAACE,OAAO,CAAC;IAC7D,MAAMF,KAAK;EACf;AACJ,CAAC;AAED,OAAO,MAAMG,gBAAgB,GAAG,MAAAA,CAAOR,SAAS,EAAEC,MAAM,EAAEM,OAAO,EAAEE,MAAM,GAAG,EAAE,EAAEC,IAAI,GAAG,CAAC,CAAC,KAAK;EAC1F,IAAI;IACA,MAAMR,QAAQ,GAAG,MAAML,KAAK,CAACc,IAAI,CAAC,GAAGb,OAAO,IAAIE,SAAS,IAAIC,MAAM,EAAE,EAAE;MACnEM,OAAO;MACPE,MAAM;MACNC,IAAI,CAAE;IACV,CAAC,CAAC;IACF,OAAOR,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAACE,OAAO,CAAC;IAC3D,MAAMF,KAAK;EACf;AACJ,CAAC;;AAGD;AACA,OAAO,MAAMO,UAAU,GAAG,MAAAA,CAAOZ,SAAS,EAAEC,MAAM,EAAEY,cAAc,KAAK;EACnE,IAAI;IACA,MAAMX,QAAQ,GAAG,MAAML,KAAK,CAACc,IAAI,CAAC,GAAGb,OAAO,IAAIE,SAAS,IAAIC,MAAM,IAAIY,cAAc,OAAO,CAAC;IAC7F,OAAOX,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,qCAAqC,EAAEA,KAAK,CAACE,OAAO,CAAC;IACnE,MAAMF,KAAK;EACf;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}