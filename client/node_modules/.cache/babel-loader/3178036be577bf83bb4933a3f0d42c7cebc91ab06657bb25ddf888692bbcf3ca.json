{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:5000/api/notifications';\n\n// שליפת ההודעות למשתמש\nexport const getUserNotifications = async (companyId, userId) => {\n  const res = await fetch(`${API_BASE}/${companyId}/${userId}`);\n  if (!res.ok) throw new Error('Failed to fetch notifications');\n  return await res.json();\n};\n\n// שליחת התראה למשתמש\nexport const sendNotification = async (companyId, userId, message, linkTo = '') => {\n  const res = await fetch(`${API_BASE}/${companyId}/${userId}`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      message,\n      linkTo\n    })\n  });\n  if (!res.ok) throw new Error('Failed to send notification');\n  return await res.json();\n};\n\n// סימון הודעה כנקראה\nexport const markAsRead = async (companyId, userId, notificationId) => {\n  const res = await fetch(`${API_BASE}/${companyId}/${userId}/${notificationId}/read`, {\n    method: 'POST'\n  });\n  if (!res.ok) throw new Error('Failed to mark notification as read');\n};","map":{"version":3,"names":["axios","API_URL","getUserNotifications","companyId","userId","res","fetch","API_BASE","ok","Error","json","sendNotification","message","linkTo","method","headers","body","JSON","stringify","markAsRead","notificationId"],"sources":["/Users/dorlevi/IdeaProjects/newShiftWise/client/src/services/notificationService.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = 'http://localhost:5000/api/notifications';\n\n// שליפת ההודעות למשתמש\nexport const getUserNotifications = async (companyId, userId) => {\n    const res = await fetch(`${API_BASE}/${companyId}/${userId}`);\n    if (!res.ok) throw new Error('Failed to fetch notifications');\n    return await res.json();\n};\n\n// שליחת התראה למשתמש\nexport const sendNotification = async (companyId, userId, message, linkTo = '') => {\n    const res = await fetch(`${API_BASE}/${companyId}/${userId}`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ message, linkTo })\n    });\n    if (!res.ok) throw new Error('Failed to send notification');\n    return await res.json();\n};\n\n// סימון הודעה כנקראה\nexport const markAsRead = async (companyId, userId, notificationId) => {\n    const res = await fetch(`${API_BASE}/${companyId}/${userId}/${notificationId}/read`, {\n        method: 'POST'\n    });\n    if (!res.ok) throw new Error('Failed to mark notification as read');\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,yCAAyC;;AAEzD;AACA,OAAO,MAAMC,oBAAoB,GAAG,MAAAA,CAAOC,SAAS,EAAEC,MAAM,KAAK;EAC7D,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGC,QAAQ,IAAIJ,SAAS,IAAIC,MAAM,EAAE,CAAC;EAC7D,IAAI,CAACC,GAAG,CAACG,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,+BAA+B,CAAC;EAC7D,OAAO,MAAMJ,GAAG,CAACK,IAAI,CAAC,CAAC;AAC3B,CAAC;;AAED;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAAA,CAAOR,SAAS,EAAEC,MAAM,EAAEQ,OAAO,EAAEC,MAAM,GAAG,EAAE,KAAK;EAC/E,MAAMR,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGC,QAAQ,IAAIJ,SAAS,IAAIC,MAAM,EAAE,EAAE;IAC1DU,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEN,OAAO;MAAEC;IAAO,CAAC;EAC5C,CAAC,CAAC;EACF,IAAI,CAACR,GAAG,CAACG,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;EAC3D,OAAO,MAAMJ,GAAG,CAACK,IAAI,CAAC,CAAC;AAC3B,CAAC;;AAED;AACA,OAAO,MAAMS,UAAU,GAAG,MAAAA,CAAOhB,SAAS,EAAEC,MAAM,EAAEgB,cAAc,KAAK;EACnE,MAAMf,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGC,QAAQ,IAAIJ,SAAS,IAAIC,MAAM,IAAIgB,cAAc,OAAO,EAAE;IACjFN,MAAM,EAAE;EACZ,CAAC,CAAC;EACF,IAAI,CAACT,GAAG,CAACG,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,qCAAqC,CAAC;AACvE,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}