{"ast":null,"code":"var _jsxFileName = \"/Users/dorlevi/IdeaProjects/newShiftWise/client/src/components/EmployeesScreen.js\",\n  _s = $RefreshSig$();\n// React & state\nimport React, { useState, useEffect, useRef } from 'react';\n\n// UI Components & Libraries\nimport Modal from 'react-modal';\nimport { toast, ToastContainer } from 'react-toastify';\nimport { ThreeDots } from 'react-loader-spinner';\nimport Navbar from '../components/Navbar';\nimport Loader from './Loader';\nimport BackgroundWrapper from './BackgroundWrapper';\n\n// Styles\nimport 'react-toastify/dist/ReactToastify.css';\nimport '../styles/EmployeesScreen.css';\nimport '../styles/Navbar.css';\n\n// Data\nimport employeesData from '../data/emps.json'; // יש לוודא שהקובץ נמצא בתיקייה data\n\n// Services\nimport { getUsers, removeCompanyFromUser, addUser, updateUserCompanies, updateUser } from '../services/userService';\nimport { removeUserFromCompany, addEmployeeToCompany } from '../services/companyService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nModal.setAppElement('#root');\nfunction EmployeesScreen() {\n  _s();\n  // Employees data\n  const [employees, setEmployees] = useState([]);\n\n  // Form data\n  const [newEmployee, setNewEmployee] = useState({\n    name: '',\n    email: '',\n    phone: '',\n    role: 'employee',\n    password: '',\n    photoFile: null\n  });\n\n  // App state\n  const [isLoading, setIsLoading] = useState(true);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [error, setError] = useState('');\n  const [loggedUser, setLoggedUser] = useState(null);\n\n  // Modals\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [isEditModalOpen, setIsEditModalOpen] = useState(false);\n  const [isConfirmDeleteModalOpen, setIsConfirmDeleteModalOpen] = useState(false);\n\n  // Edit/delete handlers\n  const [editEmployee, setEditEmployee] = useState(null);\n  const [employeeToDelete, setEmployeeToDelete] = useState(null);\n\n  // UI helpers\n  const [openCards, setOpenCards] = useState({});\n  const [searchQuery, setSearchQuery] = useState('');\n  const [filterRole, setFilterRole] = useState('all');\n  const fileInputRef = useRef(null);\n  useEffect(() => {\n    const loggedUser = JSON.parse(localStorage.getItem('user'));\n    console.log(\"🔐 Logged user from localStorage:\", loggedUser);\n    setLoggedUser(loggedUser);\n  }, []);\n\n  // On component mount, fetch the list of employees associated with the logged-in user's company:\n  // - Retrieve the logged-in user from localStorage.\n  // - Extract the company ID and validate it.\n  // - Fetch all users from the database.\n  // - Filter users to include only those who belong to the current company.\n  // - Update the local employee list state.\n  // - Handle loading and error states appropriately.\n  useEffect(() => {\n    const fetchEmployees = async () => {\n      try {\n        var _loggedUser$company;\n        const loggedUser = JSON.parse(localStorage.getItem('user'));\n        setLoggedUser(loggedUser);\n        const companyId = loggedUser === null || loggedUser === void 0 ? void 0 : (_loggedUser$company = loggedUser.company) === null || _loggedUser$company === void 0 ? void 0 : _loggedUser$company.id;\n        if (!companyId) {\n          setError('No company information found.');\n          return;\n        }\n        const data = await getUsers();\n        const usersWithIds = data ? Object.entries(data).map(([id, user]) => ({\n          id,\n          ...user\n        })) : [];\n        const filteredEmployees = usersWithIds.filter(user => {\n          var _user$companyIds;\n          return (_user$companyIds = user.companyIds) === null || _user$companyIds === void 0 ? void 0 : _user$companyIds.some(company => company.companyId === companyId);\n        });\n        setEmployees(filteredEmployees);\n      } catch (err) {\n        setError('Failed to fetch employees.');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchEmployees();\n  }, []);\n\n  // Open the confirmation modal for deleting an employee.\n  // Stores the selected employee in state for later use.\n  const openConfirmDeleteModal = employee => {\n    setEmployeeToDelete(employee);\n    setIsConfirmDeleteModalOpen(true);\n  };\n\n  // Close the confirmation modal and clear the selected employee.\n  const closeConfirmDeleteModal = () => {\n    setIsConfirmDeleteModalOpen(false);\n    setEmployeeToDelete(null);\n  };\n\n  // Handle confirmed deletion of an employee:\n  // - Validate company information.\n  // - Remove the employee from the user and company records.\n  // - Update the UI to reflect the deletion.\n  // - Display success or error notifications.\n  const handleDeleteConfirmed = async () => {\n    if (!employeeToDelete) return;\n    try {\n      var _loggedUser$company2;\n      const companyId = loggedUser === null || loggedUser === void 0 ? void 0 : (_loggedUser$company2 = loggedUser.company) === null || _loggedUser$company2 === void 0 ? void 0 : _loggedUser$company2.id;\n      if (!companyId) {\n        toast.error('No company information found. Please try again.');\n        return;\n      }\n      await removeCompanyFromUser(employeeToDelete.id, companyId);\n      await removeUserFromCompany(companyId, employeeToDelete.id);\n      setEmployees(employees.filter(employee => employee.id !== employeeToDelete.id));\n      toast.success('Employee deleted successfully!');\n    } catch (err) {\n      toast.error('Failed to delete employee.');\n      console.error(err);\n    } finally {\n      closeConfirmDeleteModal();\n    }\n  };\n\n  // Handle input changes in the \"Add New Employee\" form.\n  // Updates the corresponding field in the newEmployee state.\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewEmployee(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  // Handle submission of the \"Add New Employee\" form:\n  // - Prevent default form submission.\n  // - Check for valid company information.\n  // - Check if a user with the given email already exists:\n  //     - If yes, associate them with the current company.\n  //     - If not, create a new user and associate them with the company.\n  // - Update the employees list in the UI accordingly.\n  // - Show success or error toasts.\n  // - Reset the form and close the modal after successful addition.\n  const handleAddEmployee = async e => {\n    e.preventDefault();\n    try {\n      const company = loggedUser === null || loggedUser === void 0 ? void 0 : loggedUser.company;\n      if (!company) {\n        toast.error('No company information found. Please try again.');\n        return;\n      }\n\n      // 1. המרת קובץ תמונה ל־Base64 (data URL)\n      let photoDataUrl = '';\n      if (newEmployee.photoFile) {\n        const reader = new FileReader();\n        const file = newEmployee.photoFile;\n        photoDataUrl = await new Promise((resolve, reject) => {\n          reader.onloadend = () => resolve(reader.result);\n          reader.onerror = reject;\n          reader.readAsDataURL(file);\n        });\n      }\n      const allUsers = await getUsers();\n      const existingUser = Object.values(allUsers).find(user => user.email === newEmployee.email);\n      if (existingUser) {\n        await updateUserCompanies(existingUser, company);\n        await addEmployeeToCompany(company.id, existingUser.id);\n        const isUserInUI = employees.some(employee => employee.id === existingUser.id);\n        if (!isUserInUI) {\n          setEmployees(prev => [...prev, existingUser]);\n        }\n        toast.info('User already exists, added to the company successfully.');\n      } else {\n        // 2. הוספת משתמש כולל תמונה\n        const addedEmployee = await addUser({\n          ...newEmployee,\n          photoData: photoDataUrl // ⬅️ התמונה בבסיס הנתונים\n        });\n        await updateUserCompanies(addedEmployee, company);\n        await addEmployeeToCompany(company.id, addedEmployee.id);\n        setEmployees(prev => [...prev, {\n          id: addedEmployee.id,\n          ...addedEmployee\n        }]);\n        toast.success('New user added successfully!');\n      }\n\n      // 3. איפוס הטופס\n      setNewEmployee({\n        name: '',\n        email: '',\n        phone: '',\n        role: 'employee',\n        password: '',\n        photoFile: null\n      });\n      setIsModalOpen(false);\n    } catch (err) {\n      toast.error('Failed to add employee.');\n      console.error(err);\n    }\n  };\n\n  // Toggle the expanded/collapsed state of an employee card by its ID.\n  // If the card is currently open, it will be closed, and vice versa.\n  const toggleCard = id => {\n    setOpenCards(prev => ({\n      ...prev,\n      [id]: !prev[id]\n    }));\n  };\n  const handleEditClick = employee => {\n    setEditEmployee(employee); // הגדרת העובד הנבחר לעריכה\n    setIsEditModalOpen(true); // פתיחת המודל\n  };\n  const handleLoadEmployeesFromJSON = async () => {\n    try {\n      if (!loggedUser || !loggedUser.company) {\n        toast.error('No company information found. Please try again.');\n        return;\n      }\n      setIsProcessing(true); // הפעלת ה-Loader\n\n      const companyId = loggedUser.company.id;\n      const allUsers = await getUsers();\n      const newEmployees = employeesData.filter(employee => {\n        var _existingUser$company;\n        const existingUser = Object.values(allUsers).find(user => user.email === employee.email);\n        if (!existingUser) {\n          return true; // משתמש לא קיים כלל - נוסיף אותו\n        }\n        const isInCompany = (_existingUser$company = existingUser.companyIds) === null || _existingUser$company === void 0 ? void 0 : _existingUser$company.some(company => company.companyId === companyId);\n        return !isInCompany; // אם הוא לא משויך לחברה, נוסיף אותו שוב\n      });\n      for (const employee of newEmployees) {\n        const existingUser = Object.values(allUsers).find(user => user.email === employee.email);\n        if (existingUser) {\n          await updateUserCompanies(existingUser, loggedUser.company);\n          await addEmployeeToCompany(companyId, existingUser.id);\n        } else {\n          const addedEmployee = await addUser(employee);\n          await updateUserCompanies(addedEmployee, loggedUser.company);\n          await addEmployeeToCompany(companyId, addedEmployee.id);\n        }\n      }\n      const updatedUsers = await getUsers();\n      const usersWithIds = Object.entries(updatedUsers).map(([id, user]) => ({\n        id,\n        ...user\n      }));\n      const filteredEmployees = usersWithIds.filter(user => {\n        var _user$companyIds2;\n        return (_user$companyIds2 = user.companyIds) === null || _user$companyIds2 === void 0 ? void 0 : _user$companyIds2.some(company => company.companyId === companyId);\n      });\n      setEmployees(filteredEmployees);\n      toast.success(`${newEmployees.length} employees added successfully!`);\n    } catch (error) {\n      toast.error('Failed to load employees from JSON.');\n      console.error(error);\n    } finally {\n      setIsProcessing(false); // כיבוי ה-Loader\n    }\n  };\n\n  // Delete all non-admin employees from the current company:\n  // - Validate that the logged-in user and company info exist.\n  // - Show a loader while processing.\n  // - Filter out all employees who are not admins.\n  // - For each employee, remove their association with the company both in user and company records.\n  // - Update the UI to show only admins.\n  // - Display appropriate success or error messages.\n  const handleDeleteAllEmployees = async () => {\n    try {\n      if (!loggedUser || !loggedUser.company) {\n        toast.error('No company information found. Please try again.');\n        return;\n      }\n      setIsProcessing(true); // הפעלת ה-Loader\n\n      const companyId = loggedUser.company.id;\n      const employeesToDelete = employees.filter(employee => employee.role !== 'admin');\n      if (employeesToDelete.length === 0) {\n        toast.info('No employees to delete.');\n        return;\n      }\n      for (const employee of employeesToDelete) {\n        await removeCompanyFromUser(employee.id, companyId);\n        await removeUserFromCompany(companyId, employee.id);\n      }\n      setEmployees(employees.filter(employee => employee.role === 'admin'));\n      toast.success(`${employeesToDelete.length} employees deleted successfully!`);\n    } catch (err) {\n      toast.error('Failed to delete employees.');\n      console.error(err);\n    } finally {\n      setIsProcessing(false); // כיבוי ה-Loader\n    }\n  };\n  const filteredEmployees = employees.filter(employee => {\n    return (employee.name.toLowerCase().startsWith(searchQuery.toLowerCase()) || employee.email.toLowerCase().startsWith(searchQuery.toLowerCase())) && (filterRole === 'all' || employee.role === filterRole);\n  });\n\n  // Render the EmployeesScreen UI:\n  // - Navbar at the top with a placeholder to maintain layout spacing.\n  // - A search bar and role filter for filtering employees by name/email and role.\n  // - Conditional rendering based on loading/error state:\n  //     - If loading: show loading message.\n  //     - If error: show error message.\n  //     - Else: display a grid of employee cards, each toggleable to show details (email, phone, role),\n  //       with Edit/Delete options depending on role.\n  // - Action buttons below the list for:\n  //     - Adding a new employee via form modal.\n  //     - Loading multiple employees from a JSON file.\n  //     - Deleting all non-admin employees.\n  // - Modals for:\n  //     - Confirming deletion of a single employee.\n  //     - Adding a new employee (form).\n  //     - Editing an existing employee (form).\n  // - Toast notifications container at the bottom for success/error messages.\n  return /*#__PURE__*/_jsxDEV(BackgroundWrapper, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navbar-placeholder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"employees-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Employees\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Search by name or email...\",\n            value: searchQuery,\n            onChange: e => setSearchQuery(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: filterRole,\n            onChange: e => setFilterRole(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"all\",\n              children: \"All Roles\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"employee\",\n              children: \"Employee\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 368,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"admin\",\n              children: \"Admin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 369,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 21\n        }, this), isLoading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 25\n        }, this) : error ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"employees-cards\",\n          children: filteredEmployees.map(employee => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `employee-card ${openCards[employee.id] ? 'open' : 'closed'}`,\n            onClick: () => toggleCard(employee.id),\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: employee.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 386,\n              columnNumber: 37\n            }, this), openCards[employee.id] && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"employee-details-horizontal\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: employee.photoData || '/images/Profile.jpeg',\n                alt: `${employee.name}'s profile`,\n                className: \"employee-photo-horizontal\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 389,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"employee-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Email: \", employee.email]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 396,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Phone: \", employee.phone]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 397,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Role: \", employee.role]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 398,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"employee-actions\",\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"action-button edit\",\n                    onClick: e => {\n                      e.stopPropagation();\n                      handleEditClick(employee);\n                    },\n                    children: \"Edit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 400,\n                    columnNumber: 53\n                  }, this), employee.role !== 'admin' && /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"action-button delete\",\n                    onClick: e => {\n                      e.stopPropagation();\n                      openConfirmDeleteModal(employee);\n                    },\n                    children: \"Delete\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 410,\n                    columnNumber: 57\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 399,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 395,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 388,\n              columnNumber: 41\n            }, this)]\n          }, employee.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 25\n        }, this), isProcessing && /*#__PURE__*/_jsxDEV(ThreeDots, {\n          height: \"50\",\n          width: \"50\",\n          radius: \"9\",\n          color: \"#3498db\",\n          ariaLabel: \"processing\",\n          wrapperStyle: {\n            display: 'flex',\n            justifyContent: 'center',\n            marginTop: '20px'\n          },\n          visible: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"toggle-form-button\",\n          onClick: () => setIsModalOpen(true),\n          children: \"Add New Employee\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"toggle-form-button\",\n          onClick: handleLoadEmployeesFromJSON,\n          children: \"Add Employees from JSON\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"toggle-form-button delete-all\",\n          onClick: handleDeleteAllEmployees,\n          children: \"Delete All Non-Admin Employees\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal, {\n          isOpen: isConfirmDeleteModalOpen,\n          onRequestClose: closeConfirmDeleteModal,\n          className: \"confirm-delete-modal\",\n          overlayClassName: \"modal-overlay\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Confirm Employee Deletion\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 466,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Are you sure you want to remove \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: employeeToDelete === null || employeeToDelete === void 0 ? void 0 : employeeToDelete.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 468,\n              columnNumber: 61\n            }, this), \" from the company?\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 467,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"confirm-button\",\n              onClick: handleDeleteConfirmed,\n              children: \"Confirm\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 471,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"cancel-button\",\n              onClick: closeConfirmDeleteModal,\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 474,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 470,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal, {\n          isOpen: isModalOpen,\n          onRequestClose: () => setIsModalOpen(false),\n          className: \"modal\",\n          overlayClassName: \"modal-overlay\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Add New Employee\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 487,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"addOrEdit-employee-form\",\n            onSubmit: handleAddEmployee,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 489,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"name\",\n              value: newEmployee.name,\n              onChange: handleChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 490,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Email:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 497,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              name: \"email\",\n              value: newEmployee.email,\n              onChange: handleChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 498,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Phone:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 505,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"phone\",\n              value: newEmployee.phone,\n              onChange: handleChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 506,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Password:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 513,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              name: \"password\",\n              value: newEmployee.password,\n              onChange: handleChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 514,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Role:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 521,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              name: \"role\",\n              value: newEmployee.role,\n              onChange: handleChange,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"employee\",\n                children: \"Employee\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 523,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"admin\",\n                children: \"Admin\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 524,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 522,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Profile Photo:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 526,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              accept: \"image/*\",\n              onChange: e => setNewEmployee(prev => ({\n                ...prev,\n                photoFile: e.target.files[0]\n              }))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 527,\n              columnNumber: 29\n            }, this), newEmployee.photoFile && /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                flexDirection: 'column',\n                alignItems: 'start'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: URL.createObjectURL(newEmployee.photoFile),\n                alt: \"Preview\",\n                style: {\n                  width: '100px',\n                  height: '100px',\n                  objectFit: 'cover',\n                  borderRadius: '8px',\n                  margin: '10px 0'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 540,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"secondary-button\",\n                onClick: () => {\n                  fileInputRef.current.value = ''; // אפס קלט\n                  setNewEmployee(prev => ({\n                    ...prev,\n                    photoFile: null\n                  })); // אפס state\n                },\n                children: \"Remove Photo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 551,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 539,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"Add Employee\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 566,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => setIsModalOpen(false),\n              className: \"cancel-button\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 567,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 488,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal, {\n          isOpen: isEditModalOpen,\n          onRequestClose: () => setIsEditModalOpen(false),\n          className: \"modal\",\n          overlayClassName: \"modal-overlay\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Edit Employee\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 582,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"addOrEdit-employee-form\",\n            onSubmit: async e => {\n              e.preventDefault();\n              try {\n                if (editEmployee && editEmployee.id) {\n                  // המרת תמונה חדשה ל־Base64, אם קיימת\n                  let updatedPhotoData = editEmployee.photoData || '';\n                  if (editEmployee.photoFile) {\n                    const reader = new FileReader();\n                    updatedPhotoData = await new Promise((resolve, reject) => {\n                      reader.onloadend = () => resolve(reader.result);\n                      reader.onerror = reject;\n                      reader.readAsDataURL(editEmployee.photoFile);\n                    });\n                  }\n\n                  // קריאה ל-updateUser עם הפרטים המעודכנים כולל תמונה\n                  const updatedEmployee = await updateUser(editEmployee.id, {\n                    name: editEmployee.name,\n                    email: editEmployee.email,\n                    phone: editEmployee.phone,\n                    role: editEmployee.role,\n                    photoData: updatedPhotoData\n                  });\n\n                  // עדכון רשימת העובדים ב-UI\n                  setEmployees(prevEmployees => prevEmployees.map(employee => employee.id === updatedEmployee.id ? updatedEmployee : employee));\n                  toast.success('Employee updated successfully!');\n                }\n                setIsEditModalOpen(false); // סגירת המודל\n              } catch (err) {\n                toast.error('Failed to update employee. Please try again.');\n                console.error(err);\n              }\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 628,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"name\",\n              value: (editEmployee === null || editEmployee === void 0 ? void 0 : editEmployee.name) || '',\n              onChange: e => setEditEmployee(prev => ({\n                ...prev,\n                name: e.target.value\n              })),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 629,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Email:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 638,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              name: \"email\",\n              value: (editEmployee === null || editEmployee === void 0 ? void 0 : editEmployee.email) || '',\n              onChange: e => setEditEmployee(prev => ({\n                ...prev,\n                email: e.target.value\n              })),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 639,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Phone:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 648,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"phone\",\n              value: (editEmployee === null || editEmployee === void 0 ? void 0 : editEmployee.phone) || '',\n              onChange: e => setEditEmployee(prev => ({\n                ...prev,\n                phone: e.target.value\n              })),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 649,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Role:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 658,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              name: \"role\",\n              value: (editEmployee === null || editEmployee === void 0 ? void 0 : editEmployee.role) || '',\n              onChange: e => setEditEmployee(prev => ({\n                ...prev,\n                role: e.target.value\n              })),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"employee\",\n                children: \"Employee\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 666,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"admin\",\n                children: \"Admin\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 667,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 659,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Profile Photo:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 669,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              accept: \"image/*\",\n              ref: fileInputRef,\n              onChange: e => setNewEmployee(prev => ({\n                ...prev,\n                photoFile: e.target.files[0]\n              }))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 670,\n              columnNumber: 29\n            }, this), (editEmployee === null || editEmployee === void 0 ? void 0 : editEmployee.photoFile) && /*#__PURE__*/_jsxDEV(\"img\", {\n              src: URL.createObjectURL(editEmployee.photoFile),\n              alt: \"Preview\",\n              style: {\n                width: '100px',\n                height: '100px',\n                objectFit: 'cover',\n                borderRadius: '8px',\n                margin: '10px 0'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 684,\n              columnNumber: 33\n            }, this), !(editEmployee !== null && editEmployee !== void 0 && editEmployee.photoFile) && (editEmployee === null || editEmployee === void 0 ? void 0 : editEmployee.photoData) && /*#__PURE__*/_jsxDEV(\"img\", {\n              src: editEmployee.photoData,\n              alt: \"Current\",\n              style: {\n                width: '100px',\n                height: '100px',\n                objectFit: 'cover',\n                borderRadius: '8px',\n                margin: '10px 0'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 698,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"Save Changes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 711,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => setIsEditModalOpen(false),\n              className: \"cancel-button\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 712,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 583,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 576,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 723,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 351,\n    columnNumber: 9\n  }, this);\n}\n_s(EmployeesScreen, \"z1tgEvvrp4My//ls1mu7FaWtg1E=\");\n_c = EmployeesScreen;\nexport default EmployeesScreen;\nvar _c;\n$RefreshReg$(_c, \"EmployeesScreen\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Modal","toast","ToastContainer","ThreeDots","Navbar","Loader","BackgroundWrapper","employeesData","getUsers","removeCompanyFromUser","addUser","updateUserCompanies","updateUser","removeUserFromCompany","addEmployeeToCompany","jsxDEV","_jsxDEV","setAppElement","EmployeesScreen","_s","employees","setEmployees","newEmployee","setNewEmployee","name","email","phone","role","password","photoFile","isLoading","setIsLoading","isProcessing","setIsProcessing","error","setError","loggedUser","setLoggedUser","isModalOpen","setIsModalOpen","isEditModalOpen","setIsEditModalOpen","isConfirmDeleteModalOpen","setIsConfirmDeleteModalOpen","editEmployee","setEditEmployee","employeeToDelete","setEmployeeToDelete","openCards","setOpenCards","searchQuery","setSearchQuery","filterRole","setFilterRole","fileInputRef","JSON","parse","localStorage","getItem","console","log","fetchEmployees","_loggedUser$company","companyId","company","id","data","usersWithIds","Object","entries","map","user","filteredEmployees","filter","_user$companyIds","companyIds","some","err","openConfirmDeleteModal","employee","closeConfirmDeleteModal","handleDeleteConfirmed","_loggedUser$company2","success","handleChange","e","value","target","prev","handleAddEmployee","preventDefault","photoDataUrl","reader","FileReader","file","Promise","resolve","reject","onloadend","result","onerror","readAsDataURL","allUsers","existingUser","values","find","isUserInUI","info","addedEmployee","photoData","toggleCard","handleEditClick","handleLoadEmployeesFromJSON","newEmployees","_existingUser$company","isInCompany","updatedUsers","_user$companyIds2","length","handleDeleteAllEmployees","employeesToDelete","toLowerCase","startsWith","children","fileName","_jsxFileName","lineNumber","columnNumber","className","type","placeholder","onChange","onClick","src","alt","stopPropagation","height","width","radius","color","ariaLabel","wrapperStyle","display","justifyContent","marginTop","visible","isOpen","onRequestClose","overlayClassName","onSubmit","required","accept","files","style","flexDirection","alignItems","URL","createObjectURL","objectFit","borderRadius","margin","current","updatedPhotoData","updatedEmployee","prevEmployees","ref","_c","$RefreshReg$"],"sources":["/Users/dorlevi/IdeaProjects/newShiftWise/client/src/components/EmployeesScreen.js"],"sourcesContent":["// React & state\nimport React, { useState, useEffect, useRef } from 'react';\n\n// UI Components & Libraries\nimport Modal from 'react-modal';\nimport { toast, ToastContainer } from 'react-toastify';\nimport { ThreeDots } from 'react-loader-spinner';\nimport Navbar from '../components/Navbar';\nimport Loader from './Loader';\nimport BackgroundWrapper from './BackgroundWrapper';\n\n\n// Styles\nimport 'react-toastify/dist/ReactToastify.css';\nimport '../styles/EmployeesScreen.css';\nimport '../styles/Navbar.css';\n\n// Data\nimport employeesData from '../data/emps.json'; // יש לוודא שהקובץ נמצא בתיקייה data\n\n// Services\nimport { getUsers, removeCompanyFromUser, addUser, updateUserCompanies, updateUser } from '../services/userService';\nimport { removeUserFromCompany, addEmployeeToCompany } from '../services/companyService';\n\nModal.setAppElement('#root');\n\nfunction EmployeesScreen() {\n\n    // Employees data\n    const [employees, setEmployees] = useState([]);\n\n    // Form data\n    const [newEmployee, setNewEmployee] = useState({\n        name: '', email: '', phone: '', role: 'employee', password: '', photoFile: null\n    });\n\n    // App state\n    const [isLoading, setIsLoading] = useState(true);\n    const [isProcessing, setIsProcessing] = useState(false);\n    const [error, setError] = useState('');\n    const [loggedUser, setLoggedUser] = useState(null);\n\n    // Modals\n    const [isModalOpen, setIsModalOpen] = useState(false);\n    const [isEditModalOpen, setIsEditModalOpen] = useState(false);\n    const [isConfirmDeleteModalOpen, setIsConfirmDeleteModalOpen] = useState(false);\n\n    // Edit/delete handlers\n    const [editEmployee, setEditEmployee] = useState(null);\n    const [employeeToDelete, setEmployeeToDelete] = useState(null);\n\n    // UI helpers\n    const [openCards, setOpenCards] = useState({});\n    const [searchQuery, setSearchQuery] = useState('');\n    const [filterRole, setFilterRole] = useState('all');\n\n    const fileInputRef = useRef(null);\n\n    useEffect(() => {\n        const loggedUser = JSON.parse(localStorage.getItem('user'));\n        console.log(\"🔐 Logged user from localStorage:\", loggedUser);\n        setLoggedUser(loggedUser);\n    }, []);\n\n\n    // On component mount, fetch the list of employees associated with the logged-in user's company:\n    // - Retrieve the logged-in user from localStorage.\n    // - Extract the company ID and validate it.\n    // - Fetch all users from the database.\n    // - Filter users to include only those who belong to the current company.\n    // - Update the local employee list state.\n    // - Handle loading and error states appropriately.\n    useEffect(() => {\n        const fetchEmployees = async () => {\n            try {\n                const loggedUser = JSON.parse(localStorage.getItem('user'));\n                setLoggedUser(loggedUser);\n                const companyId = loggedUser?.company?.id;\n\n                if (!companyId) {\n                    setError('No company information found.');\n                    return;\n                }\n\n                const data = await getUsers();\n                const usersWithIds = data ? Object.entries(data).map(([id, user]) => ({ id, ...user })) : [];\n                const filteredEmployees = usersWithIds.filter((user) =>\n                    user.companyIds?.some((company) => company.companyId === companyId)\n                );\n\n                setEmployees(filteredEmployees);\n            } catch (err) {\n                setError('Failed to fetch employees.');\n            } finally {\n                setIsLoading(false);\n            }\n        };\n\n        fetchEmployees();\n    }, []);\n\n    // Open the confirmation modal for deleting an employee.\n    // Stores the selected employee in state for later use.\n    const openConfirmDeleteModal = (employee) => {\n        setEmployeeToDelete(employee);\n        setIsConfirmDeleteModalOpen(true);\n    };\n\n    // Close the confirmation modal and clear the selected employee.\n    const closeConfirmDeleteModal = () => {\n        setIsConfirmDeleteModalOpen(false);\n        setEmployeeToDelete(null);\n    };\n\n    // Handle confirmed deletion of an employee:\n    // - Validate company information.\n    // - Remove the employee from the user and company records.\n    // - Update the UI to reflect the deletion.\n    // - Display success or error notifications.\n    const handleDeleteConfirmed = async () => {\n        if (!employeeToDelete) return;\n        try {\n            const companyId = loggedUser?.company?.id;\n\n            if (!companyId) {\n                toast.error('No company information found. Please try again.');\n                return;\n            }\n\n            await removeCompanyFromUser(employeeToDelete.id, companyId);\n            await removeUserFromCompany(companyId, employeeToDelete.id);\n\n            setEmployees(employees.filter((employee) => employee.id !== employeeToDelete.id));\n            toast.success('Employee deleted successfully!');\n        } catch (err) {\n            toast.error('Failed to delete employee.');\n            console.error(err);\n        } finally {\n            closeConfirmDeleteModal();\n        }\n    };\n\n    // Handle input changes in the \"Add New Employee\" form.\n    // Updates the corresponding field in the newEmployee state.\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        setNewEmployee((prev) => ({ ...prev, [name]: value }));\n    };\n\n    // Handle submission of the \"Add New Employee\" form:\n    // - Prevent default form submission.\n    // - Check for valid company information.\n    // - Check if a user with the given email already exists:\n    //     - If yes, associate them with the current company.\n    //     - If not, create a new user and associate them with the company.\n    // - Update the employees list in the UI accordingly.\n    // - Show success or error toasts.\n    // - Reset the form and close the modal after successful addition.\n    const handleAddEmployee = async (e) => {\n        e.preventDefault();\n        try {\n            const company = loggedUser?.company;\n\n            if (!company) {\n                toast.error('No company information found. Please try again.');\n                return;\n            }\n\n            // 1. המרת קובץ תמונה ל־Base64 (data URL)\n            let photoDataUrl = '';\n            if (newEmployee.photoFile) {\n                const reader = new FileReader();\n                const file = newEmployee.photoFile;\n\n                photoDataUrl = await new Promise((resolve, reject) => {\n                    reader.onloadend = () => resolve(reader.result);\n                    reader.onerror = reject;\n                    reader.readAsDataURL(file);\n                });\n            }\n\n            const allUsers = await getUsers();\n            const existingUser = Object.values(allUsers).find((user) => user.email === newEmployee.email);\n\n            if (existingUser) {\n                await updateUserCompanies(existingUser, company);\n                await addEmployeeToCompany(company.id, existingUser.id);\n\n                const isUserInUI = employees.some((employee) => employee.id === existingUser.id);\n                if (!isUserInUI) {\n                    setEmployees((prev) => [...prev, existingUser]);\n                }\n\n                toast.info('User already exists, added to the company successfully.');\n            } else {\n                // 2. הוספת משתמש כולל תמונה\n                const addedEmployee = await addUser({\n                    ...newEmployee,\n                    photoData: photoDataUrl // ⬅️ התמונה בבסיס הנתונים\n                });\n\n                await updateUserCompanies(addedEmployee, company);\n                await addEmployeeToCompany(company.id, addedEmployee.id);\n\n                setEmployees((prev) => [...prev, { id: addedEmployee.id, ...addedEmployee }]);\n                toast.success('New user added successfully!');\n            }\n\n            // 3. איפוס הטופס\n            setNewEmployee({ name: '', email: '', phone: '', role: 'employee', password: '', photoFile: null });\n            setIsModalOpen(false);\n        } catch (err) {\n            toast.error('Failed to add employee.');\n            console.error(err);\n        }\n    };\n\n\n    // Toggle the expanded/collapsed state of an employee card by its ID.\n    // If the card is currently open, it will be closed, and vice versa.\n    const toggleCard = (id) => {\n        setOpenCards((prev) => ({\n            ...prev,\n            [id]: !prev[id],\n        }));\n    };\n\n    const handleEditClick = (employee) => {\n        setEditEmployee(employee); // הגדרת העובד הנבחר לעריכה\n        setIsEditModalOpen(true); // פתיחת המודל\n    };\n\n\n    const handleLoadEmployeesFromJSON = async () => {\n        try {\n            if (!loggedUser || !loggedUser.company) {\n                toast.error('No company information found. Please try again.');\n                return;\n            }\n\n            setIsProcessing(true); // הפעלת ה-Loader\n\n            const companyId = loggedUser.company.id;\n            const allUsers = await getUsers();\n\n            const newEmployees = employeesData.filter((employee) => {\n                const existingUser = Object.values(allUsers).find((user) => user.email === employee.email);\n\n                if (!existingUser) {\n                    return true; // משתמש לא קיים כלל - נוסיף אותו\n                }\n\n                const isInCompany = existingUser.companyIds?.some((company) => company.companyId === companyId);\n                return !isInCompany; // אם הוא לא משויך לחברה, נוסיף אותו שוב\n            });\n\n            for (const employee of newEmployees) {\n                const existingUser = Object.values(allUsers).find((user) => user.email === employee.email);\n\n                if (existingUser) {\n                    await updateUserCompanies(existingUser, loggedUser.company);\n                    await addEmployeeToCompany(companyId, existingUser.id);\n                } else {\n                    const addedEmployee = await addUser(employee);\n                    await updateUserCompanies(addedEmployee, loggedUser.company);\n                    await addEmployeeToCompany(companyId, addedEmployee.id);\n                }\n            }\n\n            const updatedUsers = await getUsers();\n            const usersWithIds = Object.entries(updatedUsers).map(([id, user]) => ({ id, ...user }));\n            const filteredEmployees = usersWithIds.filter((user) =>\n                user.companyIds?.some((company) => company.companyId === companyId)\n            );\n\n            setEmployees(filteredEmployees);\n            toast.success(`${newEmployees.length} employees added successfully!`);\n        } catch (error) {\n            toast.error('Failed to load employees from JSON.');\n            console.error(error);\n        } finally {\n            setIsProcessing(false); // כיבוי ה-Loader\n        }\n    };\n\n    // Delete all non-admin employees from the current company:\n    // - Validate that the logged-in user and company info exist.\n    // - Show a loader while processing.\n    // - Filter out all employees who are not admins.\n    // - For each employee, remove their association with the company both in user and company records.\n    // - Update the UI to show only admins.\n    // - Display appropriate success or error messages.\n    const handleDeleteAllEmployees = async () => {\n        try {\n            if (!loggedUser || !loggedUser.company) {\n                toast.error('No company information found. Please try again.');\n                return;\n            }\n\n            setIsProcessing(true); // הפעלת ה-Loader\n\n            const companyId = loggedUser.company.id;\n            const employeesToDelete = employees.filter(employee => employee.role !== 'admin');\n\n            if (employeesToDelete.length === 0) {\n                toast.info('No employees to delete.');\n                return;\n            }\n\n            for (const employee of employeesToDelete) {\n                await removeCompanyFromUser(employee.id, companyId);\n                await removeUserFromCompany(companyId, employee.id);\n            }\n\n            setEmployees(employees.filter(employee => employee.role === 'admin'));\n            toast.success(`${employeesToDelete.length} employees deleted successfully!`);\n        } catch (err) {\n            toast.error('Failed to delete employees.');\n            console.error(err);\n        } finally {\n            setIsProcessing(false); // כיבוי ה-Loader\n        }\n    };\n\n    const filteredEmployees = employees.filter((employee) => {\n        return (\n            (employee.name.toLowerCase().startsWith(searchQuery.toLowerCase()) ||\n                employee.email.toLowerCase().startsWith(searchQuery.toLowerCase())) &&\n            (filterRole === 'all' || employee.role === filterRole)\n        );\n    });\n\n    // Render the EmployeesScreen UI:\n    // - Navbar at the top with a placeholder to maintain layout spacing.\n    // - A search bar and role filter for filtering employees by name/email and role.\n    // - Conditional rendering based on loading/error state:\n    //     - If loading: show loading message.\n    //     - If error: show error message.\n    //     - Else: display a grid of employee cards, each toggleable to show details (email, phone, role),\n    //       with Edit/Delete options depending on role.\n    // - Action buttons below the list for:\n    //     - Adding a new employee via form modal.\n    //     - Loading multiple employees from a JSON file.\n    //     - Deleting all non-admin employees.\n    // - Modals for:\n    //     - Confirming deletion of a single employee.\n    //     - Adding a new employee (form).\n    //     - Editing an existing employee (form).\n    // - Toast notifications container at the bottom for success/error messages.\n    return (\n        <BackgroundWrapper >\n\n            <div>\n                <Navbar />\n                <div className=\"navbar-placeholder\"></div>\n                <div className=\"employees-container\">\n                    <h1>Employees</h1>\n\n                    <div className=\"search-container\">\n                        <input\n                            type=\"text\"\n                            placeholder=\"Search by name or email...\"\n                            value={searchQuery}\n                            onChange={(e) => setSearchQuery(e.target.value)}\n                        />\n                        <select value={filterRole} onChange={(e) => setFilterRole(e.target.value)}>\n                            <option value=\"all\">All Roles</option>\n                            <option value=\"employee\">Employee</option>\n                            <option value=\"admin\">Admin</option>\n                        </select>\n                    </div>\n\n                    {isLoading ? (\n                        <Loader />\n                    ) : error ? (\n                        <p className=\"error\">{error}</p>\n                    ) : (\n                        <div className=\"employees-cards\">\n                            {filteredEmployees.map((employee) => (\n\n                                <div\n                                    key={employee.id}\n                                    className={`employee-card ${openCards[employee.id] ? 'open' : 'closed'}`}\n                                    onClick={() => toggleCard(employee.id)}\n                                >\n                                    <h3>{employee.name}</h3>\n                                    {openCards[employee.id] && (\n                                        <div className=\"employee-details-horizontal\">\n                                            <img\n                                                src={employee.photoData || '/images/Profile.jpeg'}\n                                                alt={`${employee.name}'s profile`}\n                                                className=\"employee-photo-horizontal\"\n                                            />\n\n                                            <div className=\"employee-info\">\n                                                <p>Email: {employee.email}</p>\n                                                <p>Phone: {employee.phone}</p>\n                                                <p>Role: {employee.role}</p>\n                                                <div className=\"employee-actions\">\n                                                    <button\n                                                        className=\"action-button edit\"\n                                                        onClick={(e) => {\n                                                            e.stopPropagation();\n                                                            handleEditClick(employee);\n                                                        }}\n                                                    >\n                                                        Edit\n                                                    </button>\n                                                    {employee.role !== 'admin' && (\n                                                        <button\n                                                            className=\"action-button delete\"\n                                                            onClick={(e) => {\n                                                                e.stopPropagation();\n                                                                openConfirmDeleteModal(employee);\n                                                            }}\n                                                        >\n                                                            Delete\n                                                        </button>\n                                                    )}\n                                                </div>\n                                            </div>\n                                        </div>\n\n                                    )}\n\n                                </div>\n                            ))}\n\n                        </div>\n                    )}\n\n                    {isProcessing && (\n                        <ThreeDots\n                            height=\"50\"\n                            width=\"50\"\n                            radius=\"9\"\n                            color=\"#3498db\"\n                            ariaLabel=\"processing\"\n                            wrapperStyle={{ display: 'flex', justifyContent: 'center', marginTop: '20px' }}\n                            visible={true}\n                        />\n                    )}\n\n                    <button\n                        className=\"toggle-form-button\"\n                        onClick={() => setIsModalOpen(true)}\n                    >\n                        Add New Employee\n                    </button>\n                    {/* 🔹 כפתור חדש להוספת עובדים מקובץ JSON */}\n                    <button className=\"toggle-form-button\" onClick={handleLoadEmployeesFromJSON}>\n                        Add Employees from JSON\n                    </button>\n                    <button\n                        className=\"toggle-form-button delete-all\"\n                        onClick={handleDeleteAllEmployees}\n                    >\n                        Delete All Non-Admin Employees\n                    </button>\n                    <Modal\n                        isOpen={isConfirmDeleteModalOpen}\n                        onRequestClose={closeConfirmDeleteModal}\n                        className=\"confirm-delete-modal\"\n                        overlayClassName=\"modal-overlay\"\n                    >\n                        <h2>Confirm Employee Deletion</h2>\n                        <p>\n                            Are you sure you want to remove <strong>{employeeToDelete?.name}</strong> from the company?\n                        </p>\n                        <div className=\"modal-buttons\">\n                            <button className=\"confirm-button\" onClick={handleDeleteConfirmed}>\n                                Confirm\n                            </button>\n                            <button className=\"cancel-button\" onClick={closeConfirmDeleteModal}>\n                                Cancel\n                            </button>\n                        </div>\n                    </Modal>\n\n\n                    <Modal\n                        isOpen={isModalOpen}\n                        onRequestClose={() => setIsModalOpen(false)}\n                        className=\"modal\"\n                        overlayClassName=\"modal-overlay\"\n                    >\n                        <h3>Add New Employee</h3>\n                        <form className=\"addOrEdit-employee-form\" onSubmit={handleAddEmployee}>\n                            <label>Name:</label>\n                            <input\n                                type=\"text\"\n                                name=\"name\"\n                                value={newEmployee.name}\n                                onChange={handleChange}\n                                required\n                            />\n                            <label>Email:</label>\n                            <input\n                                type=\"email\"\n                                name=\"email\"\n                                value={newEmployee.email}\n                                onChange={handleChange}\n                                required\n                            />\n                            <label>Phone:</label>\n                            <input\n                                type=\"text\"\n                                name=\"phone\"\n                                value={newEmployee.phone}\n                                onChange={handleChange}\n                                required\n                            />\n                            <label>Password:</label>\n                            <input\n                                type=\"password\"\n                                name=\"password\"\n                                value={newEmployee.password}\n                                onChange={handleChange}\n                                required\n                            />\n                            <label>Role:</label>\n                            <select name=\"role\" value={newEmployee.role} onChange={handleChange}>\n                                <option value=\"employee\">Employee</option>\n                                <option value=\"admin\">Admin</option>\n                            </select>\n                            <label>Profile Photo:</label>\n                            <input\n                                type=\"file\"\n                                accept=\"image/*\"\n                                onChange={(e) =>\n                                    setNewEmployee((prev) => ({\n                                        ...prev,\n                                        photoFile: e.target.files[0]\n                                    }))\n                                }\n                            />\n\n                            {newEmployee.photoFile && (\n                                <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'start' }}>\n                                    <img\n                                        src={URL.createObjectURL(newEmployee.photoFile)}\n                                        alt=\"Preview\"\n                                        style={{\n                                            width: '100px',\n                                            height: '100px',\n                                            objectFit: 'cover',\n                                            borderRadius: '8px',\n                                            margin: '10px 0'\n                                        }}\n                                    />\n                                    <button\n                                        type=\"button\"\n                                        className=\"secondary-button\"\n                                        onClick={() => {\n                                            fileInputRef.current.value = ''; // אפס קלט\n                                            setNewEmployee((prev) => ({ ...prev, photoFile: null })); // אפס state\n                                        }}\n                                    >\n                                        Remove Photo\n                                    </button>\n                                </div>\n                            )}\n\n\n\n                            <button type=\"submit\">Add Employee</button>\n                            <button\n                                type=\"button\"\n                                onClick={() => setIsModalOpen(false)}\n                                className=\"cancel-button\"\n                            >\n                                Cancel\n                            </button>\n                        </form>\n                    </Modal>\n                    <Modal\n                        isOpen={isEditModalOpen}\n                        onRequestClose={() => setIsEditModalOpen(false)}\n                        className=\"modal\"\n                        overlayClassName=\"modal-overlay\"\n                    >\n                        <h3>Edit Employee</h3>\n                        <form\n                            className=\"addOrEdit-employee-form\"\n                            onSubmit={async (e) => {\n                                e.preventDefault();\n                                try {\n                                    if (editEmployee && editEmployee.id) {\n                                        // המרת תמונה חדשה ל־Base64, אם קיימת\n                                        let updatedPhotoData = editEmployee.photoData || '';\n                                        if (editEmployee.photoFile) {\n                                            const reader = new FileReader();\n                                            updatedPhotoData = await new Promise((resolve, reject) => {\n                                                reader.onloadend = () => resolve(reader.result);\n                                                reader.onerror = reject;\n                                                reader.readAsDataURL(editEmployee.photoFile);\n                                            });\n                                        }\n\n                                        // קריאה ל-updateUser עם הפרטים המעודכנים כולל תמונה\n                                        const updatedEmployee = await updateUser(editEmployee.id, {\n                                            name: editEmployee.name,\n                                            email: editEmployee.email,\n                                            phone: editEmployee.phone,\n                                            role: editEmployee.role,\n                                            photoData: updatedPhotoData,\n                                        });\n\n                                        // עדכון רשימת העובדים ב-UI\n                                        setEmployees((prevEmployees) =>\n                                            prevEmployees.map((employee) =>\n                                                employee.id === updatedEmployee.id ? updatedEmployee : employee\n                                            )\n                                        );\n\n                                        toast.success('Employee updated successfully!');\n                                    }\n\n                                    setIsEditModalOpen(false); // סגירת המודל\n                                } catch (err) {\n                                    toast.error('Failed to update employee. Please try again.');\n                                    console.error(err);\n                                }\n                            }}\n\n                        >\n\n                            <label>Name:</label>\n                            <input\n                                type=\"text\"\n                                name=\"name\"\n                                value={editEmployee?.name || ''}\n                                onChange={(e) =>\n                                    setEditEmployee((prev) => ({ ...prev, name: e.target.value }))\n                                }\n                                required\n                            />\n                            <label>Email:</label>\n                            <input\n                                type=\"email\"\n                                name=\"email\"\n                                value={editEmployee?.email || ''}\n                                onChange={(e) =>\n                                    setEditEmployee((prev) => ({ ...prev, email: e.target.value }))\n                                }\n                                required\n                            />\n                            <label>Phone:</label>\n                            <input\n                                type=\"text\"\n                                name=\"phone\"\n                                value={editEmployee?.phone || ''}\n                                onChange={(e) =>\n                                    setEditEmployee((prev) => ({ ...prev, phone: e.target.value }))\n                                }\n                                required\n                            />\n                            <label>Role:</label>\n                            <select\n                                name=\"role\"\n                                value={editEmployee?.role || ''}\n                                onChange={(e) =>\n                                    setEditEmployee((prev) => ({ ...prev, role: e.target.value }))\n                                }\n                            >\n                                <option value=\"employee\">Employee</option>\n                                <option value=\"admin\">Admin</option>\n                            </select>\n                            <label>Profile Photo:</label>\n                            <input\n                                type=\"file\"\n                                accept=\"image/*\"\n                                ref={fileInputRef}\n                                onChange={(e) =>\n                                    setNewEmployee((prev) => ({\n                                        ...prev,\n                                        photoFile: e.target.files[0]\n                                    }))\n                                }\n                            />\n\n\n                            {editEmployee?.photoFile && (\n                                <img\n                                    src={URL.createObjectURL(editEmployee.photoFile)}\n                                    alt=\"Preview\"\n                                    style={{\n                                        width: '100px',\n                                        height: '100px',\n                                        objectFit: 'cover',\n                                        borderRadius: '8px',\n                                        margin: '10px 0'\n                                    }}\n                                />\n                            )}\n\n                            {!editEmployee?.photoFile && editEmployee?.photoData && (\n                                <img\n                                    src={editEmployee.photoData}\n                                    alt=\"Current\"\n                                    style={{\n                                        width: '100px',\n                                        height: '100px',\n                                        objectFit: 'cover',\n                                        borderRadius: '8px',\n                                        margin: '10px 0'\n                                    }}\n                                />\n                            )}\n\n                            <button type=\"submit\">Save Changes</button>\n                            <button\n                                type=\"button\"\n                                onClick={() => setIsEditModalOpen(false)}\n                                className=\"cancel-button\"\n                            >\n                                Cancel\n                            </button>\n                        </form>\n                    </Modal>\n\n                </div>\n                <ToastContainer />\n            </div>\n        </BackgroundWrapper >\n\n    );\n}\n\nexport default EmployeesScreen;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}