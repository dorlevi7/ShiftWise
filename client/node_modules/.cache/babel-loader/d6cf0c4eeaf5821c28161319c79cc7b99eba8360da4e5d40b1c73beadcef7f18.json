{"ast":null,"code":"var _jsxFileName = \"/Users/dorlevi/IdeaProjects/newShiftWise/client/src/components/AvailabilityScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Navbar from './Navbar';\nimport '../styles/AvailabilityScreen.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AvailabilityScreen = () => {\n  _s();\n  const [availability, setAvailability] = useState({});\n  const navigate = useNavigate();\n  useEffect(() => {\n    // שליפת פרטי המשתמש והזמינות הקיימת מ-localStorage או API\n    const loggedUser = JSON.parse(localStorage.getItem('user'));\n    if (!loggedUser) {\n      navigate('/'); // החזרה למסך ההתחברות אם המשתמש לא מחובר\n    }\n  }, [navigate]);\n  const handleAvailabilityChange = (day, shift, isAvailable) => {\n    setAvailability(prev => ({\n      ...prev,\n      [day]: {\n        ...prev[day],\n        [shift]: isAvailable\n      }\n    }));\n  };\n  const handleSave = () => {\n    // שמירת זמינות ב-localStorage או שליחה לשרת\n    console.log('Saved Availability:', availability);\n    alert('Availability saved successfully!');\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"availability-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Set Your Availability\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"availability-table\",\n        children: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'].map(day => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"day-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: day\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 29\n          }, this), ['Morning', 'Noon', 'Evening', 'Night'].map(shift => {\n            var _availability$day;\n            return /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"shift-option\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: ((_availability$day = availability[day]) === null || _availability$day === void 0 ? void 0 : _availability$day[shift]) || false,\n                onChange: e => handleAvailabilityChange(day, shift, e.target.checked)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 37\n              }, this), shift]\n            }, shift, true, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 33\n            }, this);\n          })]\n        }, day, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSave,\n        className: \"save-button\",\n        children: \"Save Availability\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(AvailabilityScreen, \"YscME/FgxIbv+HA52zecG0XAXFw=\", false, function () {\n  return [useNavigate];\n});\n_c = AvailabilityScreen;\nexport default AvailabilityScreen;\nvar _c;\n$RefreshReg$(_c, \"AvailabilityScreen\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","Navbar","jsxDEV","_jsxDEV","Fragment","_Fragment","AvailabilityScreen","_s","availability","setAvailability","navigate","loggedUser","JSON","parse","localStorage","getItem","handleAvailabilityChange","day","shift","isAvailable","prev","handleSave","console","log","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","_availability$day","type","checked","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Users/dorlevi/IdeaProjects/newShiftWise/client/src/components/AvailabilityScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Navbar from './Navbar';\nimport '../styles/AvailabilityScreen.css';\n\nconst AvailabilityScreen = () => {\n    const [availability, setAvailability] = useState({});\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        // שליפת פרטי המשתמש והזמינות הקיימת מ-localStorage או API\n        const loggedUser = JSON.parse(localStorage.getItem('user'));\n        if (!loggedUser) {\n            navigate('/'); // החזרה למסך ההתחברות אם המשתמש לא מחובר\n        }\n    }, [navigate]);\n\n    const handleAvailabilityChange = (day, shift, isAvailable) => {\n        setAvailability((prev) => ({\n            ...prev,\n            [day]: {\n                ...prev[day],\n                [shift]: isAvailable,\n            },\n        }));\n    };\n\n    const handleSave = () => {\n        // שמירת זמינות ב-localStorage או שליחה לשרת\n        console.log('Saved Availability:', availability);\n        alert('Availability saved successfully!');\n    };\n\n    return (\n        <>\n            <Navbar />\n            <div className=\"availability-container\">\n                <h2>Set Your Availability</h2>\n                <div className=\"availability-table\">\n                    {['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'].map((day) => (\n                        <div key={day} className=\"day-row\">\n                            <h3>{day}</h3>\n                            {['Morning', 'Noon', 'Evening', 'Night'].map((shift) => (\n                                <label key={shift} className=\"shift-option\">\n                                    <input\n                                        type=\"checkbox\"\n                                        checked={availability[day]?.[shift] || false}\n                                        onChange={(e) =>\n                                            handleAvailabilityChange(day, shift, e.target.checked)\n                                        }\n                                    />\n                                    {shift}\n                                </label>\n                            ))}\n                        </div>\n                    ))}\n                </div>\n                <button onClick={handleSave} className=\"save-button\">Save Availability</button>\n            </div>\n        </>\n    );\n};\n\nexport default AvailabilityScreen;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}