{"ast":null,"code":"var _jsxFileName = \"/Users/dorlevi/IdeaProjects/newShiftWise/client/src/components/ChatScreen.js\",\n  _s = $RefreshSig$();\n// React functions\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\n// Third-party libraries\nimport { toast, ToastContainer } from 'react-toastify';\n\n// Styles\nimport 'react-toastify/dist/ReactToastify.css';\nimport '../styles/ChatScreen.css';\nimport '../styles/Navbar.css';\n\n// Services\nimport { getGroupMessages, sendGroupMessage } from '../services/chatService';\nimport { fetchEmployees } from '../utils/employeeHandlers';\n\n// Internal components\nimport Navbar from './Navbar';\nimport Loader from './Loader';\nimport BackgroundWrapper from './BackgroundWrapper';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ChatScreen = () => {\n  _s();\n  const navigate = useNavigate();\n  const [userData, setUserData] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(true);\n  const messagesEndRef = useRef(null);\n  const [companyUsers, setCompanyUsers] = useState([]);\n  useEffect(() => {\n    const loggedUser = JSON.parse(localStorage.getItem('user'));\n    if (!loggedUser) {\n      navigate('/');\n    } else {\n      setUserData(loggedUser);\n    }\n  }, [navigate]);\n  useEffect(() => {\n    var _userData$company;\n    if (userData !== null && userData !== void 0 && (_userData$company = userData.company) !== null && _userData$company !== void 0 && _userData$company.id) {\n      fetchMessages();\n      fetchCompanyUsers(); // ⬅️ חדש\n    }\n  }, [userData]);\n  const fetchCompanyUsers = async () => {\n    try {\n      var _userData$company2;\n      const companyId = userData === null || userData === void 0 ? void 0 : (_userData$company2 = userData.company) === null || _userData$company2 === void 0 ? void 0 : _userData$company2.id;\n      if (companyId) {\n        const users = await fetchEmployees(companyId); // ⬅️ מחזיר מערך\n        const others = users.filter(user => user.id !== userData.user.id);\n        setCompanyUsers(others);\n      }\n    } catch (error) {\n      console.error('Error fetching users:', error);\n    }\n  };\n  const fetchMessages = async () => {\n    try {\n      const data = await getGroupMessages(userData.company.id);\n      const messagesArray = data ? Object.values(data).sort((a, b) => a.timestamp - b.timestamp) : [];\n      setMessages(messagesArray);\n    } catch (error) {\n      console.error('Error fetching group messages:', error);\n      toast.error('Failed to load messages.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleSendMessage = async () => {\n    if (!newMessage.trim()) return;\n    const messageData = {\n      senderId: userData.user.id,\n      senderName: userData.user.name || 'Unknown',\n      // ✅ שימוש עקבי בשם המלא\n      content: newMessage.trim(),\n      timestamp: Date.now()\n    };\n    try {\n      await sendGroupMessage(userData.company.id, messageData);\n      setMessages(prev => [...prev, messageData]);\n      setNewMessage('');\n      scrollToBottom();\n    } catch (error) {\n      toast.error('Failed to send message.');\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter') {\n      handleSendMessage();\n    }\n  };\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  useEffect(scrollToBottom, [messages]);\n  if (!userData) {\n    return /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 16\n    }, this);\n  }\n  const isSameDate = (timestamp1, timestamp2) => {\n    const date1 = new Date(timestamp1);\n    const date2 = new Date(timestamp2);\n    return date1.getFullYear() === date2.getFullYear() && date1.getMonth() === date2.getMonth() && date1.getDate() === date2.getDate();\n  };\n  return /*#__PURE__*/_jsxDEV(BackgroundWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navbar-placeholder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Group Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this), isLoading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"private-chat-select\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"private-chat-dropdown\",\n            children: \"\\uD83D\\uDCAC \\u05E9\\u05D9\\u05D7\\u05D4 \\u05E4\\u05E8\\u05D8\\u05D9\\u05EA \\u05E2\\u05DD:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"private-chat-dropdown\",\n            onChange: e => {\n              const selectedId = e.target.value;\n              if (selectedId) {\n                navigate(`/private-chat/${selectedId}`);\n              }\n            },\n            defaultValue: \"\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              disabled: true,\n              children: \"\\u05D1\\u05D7\\u05E8 \\u05DE\\u05E9\\u05EA\\u05DE\\u05E9\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 33\n            }, this), companyUsers.map(user => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: user.id,\n              children: user.name\n            }, user.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 37\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-messages\",\n          children: [messages.map((msg, index) => {\n            const currentDate = new Date(msg.timestamp);\n            const prevDate = index > 0 ? new Date(messages[index - 1].timestamp) : null;\n            const showDate = index === 0 || !isSameDate(currentDate, prevDate);\n            return /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: [showDate && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"date-header-wrapper\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"date-header\",\n                  children: currentDate.toLocaleDateString('he-IL', {\n                    weekday: 'short',\n                    day: '2-digit',\n                    month: '2-digit',\n                    year: 'numeric'\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `chat-message-wrapper ${msg.senderId === userData.user.id ? 'align-right' : 'align-left'}`,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `chat-message ${msg.senderId === userData.user.id ? 'my-message' : 'other-message'}`,\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"chat-sender\",\n                    children: msg.senderName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 185,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"chat-content\",\n                    children: msg.content\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 186,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"chat-time\",\n                    children: new Date(msg.timestamp).toLocaleTimeString('he-IL', {\n                      hour: '2-digit',\n                      minute: '2-digit'\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 187,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 184,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 41\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 37\n            }, this);\n          }), /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: messagesEndRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-input\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Type a message...\",\n            value: newMessage,\n            onChange: e => setNewMessage(e.target.value),\n            onKeyDown: handleKeyPress\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSendMessage,\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 9\n  }, this);\n};\n_s(ChatScreen, \"d2/JNSPc63HJMb1QkcmCgCG/rHU=\", false, function () {\n  return [useNavigate];\n});\n_c = ChatScreen;\nexport default ChatScreen;\nvar _c;\n$RefreshReg$(_c, \"ChatScreen\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useNavigate","toast","ToastContainer","getGroupMessages","sendGroupMessage","fetchEmployees","Navbar","Loader","BackgroundWrapper","jsxDEV","_jsxDEV","Fragment","_Fragment","ChatScreen","_s","navigate","userData","setUserData","messages","setMessages","newMessage","setNewMessage","isLoading","setIsLoading","messagesEndRef","companyUsers","setCompanyUsers","loggedUser","JSON","parse","localStorage","getItem","_userData$company","company","id","fetchMessages","fetchCompanyUsers","_userData$company2","companyId","users","others","filter","user","error","console","data","messagesArray","Object","values","sort","a","b","timestamp","handleSendMessage","trim","messageData","senderId","senderName","name","content","Date","now","prev","scrollToBottom","handleKeyPress","e","key","_messagesEndRef$curre","current","scrollIntoView","behavior","fileName","_jsxFileName","lineNumber","columnNumber","isSameDate","timestamp1","timestamp2","date1","date2","getFullYear","getMonth","getDate","children","className","htmlFor","onChange","selectedId","target","value","defaultValue","disabled","map","msg","index","currentDate","prevDate","showDate","toLocaleDateString","weekday","day","month","year","toLocaleTimeString","hour","minute","ref","type","placeholder","onKeyDown","onClick","_c","$RefreshReg$"],"sources":["/Users/dorlevi/IdeaProjects/newShiftWise/client/src/components/ChatScreen.js"],"sourcesContent":["// React functions\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\n// Third-party libraries\nimport { toast, ToastContainer } from 'react-toastify';\n\n// Styles\nimport 'react-toastify/dist/ReactToastify.css';\nimport '../styles/ChatScreen.css';\nimport '../styles/Navbar.css';\n\n// Services\nimport { getGroupMessages, sendGroupMessage } from '../services/chatService';\nimport { fetchEmployees } from '../utils/employeeHandlers';\n\n// Internal components\nimport Navbar from './Navbar';\nimport Loader from './Loader';\nimport BackgroundWrapper from './BackgroundWrapper';\n\nconst ChatScreen = () => {\n    const navigate = useNavigate();\n\n    const [userData, setUserData] = useState(null);\n    const [messages, setMessages] = useState([]);\n    const [newMessage, setNewMessage] = useState('');\n    const [isLoading, setIsLoading] = useState(true);\n\n    const messagesEndRef = useRef(null);\n    const [companyUsers, setCompanyUsers] = useState([]);\n\n    useEffect(() => {\n        const loggedUser = JSON.parse(localStorage.getItem('user'));\n        if (!loggedUser) {\n            navigate('/');\n        } else {\n            setUserData(loggedUser);\n        }\n    }, [navigate]);\n\n    useEffect(() => {\n        if (userData?.company?.id) {\n            fetchMessages();\n            fetchCompanyUsers(); // ⬅️ חדש\n        }\n    }, [userData]);\n\n    const fetchCompanyUsers = async () => {\n        try {\n            const companyId = userData?.company?.id;\n            if (companyId) {\n                const users = await fetchEmployees(companyId); // ⬅️ מחזיר מערך\n                const others = users.filter(user => user.id !== userData.user.id);\n                setCompanyUsers(others);\n            }\n        } catch (error) {\n            console.error('Error fetching users:', error);\n        }\n    };\n\n\n    const fetchMessages = async () => {\n        try {\n            const data = await getGroupMessages(userData.company.id);\n            const messagesArray = data ? Object.values(data).sort((a, b) => a.timestamp - b.timestamp) : [];\n            setMessages(messagesArray);\n        } catch (error) {\n            console.error('Error fetching group messages:', error);\n            toast.error('Failed to load messages.');\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    const handleSendMessage = async () => {\n        if (!newMessage.trim()) return;\n\n        const messageData = {\n            senderId: userData.user.id,\n            senderName: userData.user.name || 'Unknown', // ✅ שימוש עקבי בשם המלא\n            content: newMessage.trim(),\n            timestamp: Date.now(),\n        };\n\n        try {\n            await sendGroupMessage(userData.company.id, messageData);\n            setMessages((prev) => [...prev, messageData]);\n            setNewMessage('');\n            scrollToBottom();\n        } catch (error) {\n            toast.error('Failed to send message.');\n        }\n    };\n\n    const handleKeyPress = (e) => {\n        if (e.key === 'Enter') {\n            handleSendMessage();\n        }\n    };\n\n    const scrollToBottom = () => {\n        messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n    };\n\n    useEffect(scrollToBottom, [messages]);\n\n    if (!userData) {\n        return <Loader />;\n    }\n\n    const isSameDate = (timestamp1, timestamp2) => {\n        const date1 = new Date(timestamp1);\n        const date2 = new Date(timestamp2);\n        return (\n            date1.getFullYear() === date2.getFullYear() &&\n            date1.getMonth() === date2.getMonth() &&\n            date1.getDate() === date2.getDate()\n        );\n    };\n\n    return (\n        <BackgroundWrapper>\n            <Navbar />\n            <div className=\"navbar-placeholder\"></div>\n\n            <div className=\"chat-container\">\n                <h1>Group Chat</h1>\n\n                {isLoading ? (\n                    <Loader />\n                ) : (\n                    <>\n                        <div className=\"private-chat-select\">\n                            <label htmlFor=\"private-chat-dropdown\">💬 שיחה פרטית עם:</label>\n                            <select\n                                id=\"private-chat-dropdown\"\n                                onChange={(e) => {\n                                    const selectedId = e.target.value;\n                                    if (selectedId) {\n                                        navigate(`/private-chat/${selectedId}`);\n                                    }\n                                }}\n                                defaultValue=\"\"\n                            >\n                                <option value=\"\" disabled>\n                                    בחר משתמש\n                                </option>\n                                {companyUsers.map((user) => (\n                                    <option key={user.id} value={user.id}>\n                                        {user.name}\n                                    </option>\n                                ))}\n                            </select>\n                        </div>\n\n                        <div className=\"chat-messages\">\n\n                            {messages.map((msg, index) => {\n                                const currentDate = new Date(msg.timestamp);\n                                const prevDate = index > 0 ? new Date(messages[index - 1].timestamp) : null;\n\n                                const showDate =\n                                    index === 0 || !isSameDate(currentDate, prevDate);\n\n                                return (\n                                    <React.Fragment key={index}>\n                                        {showDate && (\n                                            <div className=\"date-header-wrapper\">\n                                                <div className=\"date-header\">\n                                                    {currentDate.toLocaleDateString('he-IL', {\n                                                        weekday: 'short',\n                                                        day: '2-digit',\n                                                        month: '2-digit',\n                                                        year: 'numeric',\n                                                    })}\n                                                </div>\n                                            </div>\n                                        )}\n\n                                        <div\n                                            className={`chat-message-wrapper ${msg.senderId === userData.user.id ? 'align-right' : 'align-left'}`}\n                                        >\n                                            <div className={`chat-message ${msg.senderId === userData.user.id ? 'my-message' : 'other-message'}`}>\n                                                <div className=\"chat-sender\">{msg.senderName}</div>\n                                                <div className=\"chat-content\">{msg.content}</div>\n                                                <div className=\"chat-time\">\n                                                    {new Date(msg.timestamp).toLocaleTimeString('he-IL', {\n                                                        hour: '2-digit',\n                                                        minute: '2-digit',\n                                                    })}\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </React.Fragment>\n                                );\n                            })}\n\n                            <div ref={messagesEndRef} />\n                        </div>\n\n                        <div className=\"chat-input\">\n                            <input\n                                type=\"text\"\n                                placeholder=\"Type a message...\"\n                                value={newMessage}\n                                onChange={(e) => setNewMessage(e.target.value)}\n                                onKeyDown={handleKeyPress}\n                            />\n                            <button onClick={handleSendMessage}>Send</button>\n                        </div>\n                    </>\n\n                )}\n\n                <ToastContainer />\n            </div>\n        </BackgroundWrapper>\n    );\n};\n\nexport default ChatScreen;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}