{"ast":null,"code":"var _jsxFileName = \"/Users/dorlevi/IdeaProjects/newShiftWise/client/src/components/HomeScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useMemo } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Navbar from './Navbar';\nimport BackgroundWrapper from './BackgroundWrapper';\nimport Loader from './Loader';\nimport { getAvailability } from '../services/availabilityService';\nimport { calculateWeekKey } from '../utils/utils';\nimport { getAdminMessage, saveAdminMessage } from '../services/homeService';\nimport { SHIFTS, SHIFT_TIMES, DAYS_OF_WEEK } from '../utils/constants';\nimport '../styles/HomeScreen.css';\nimport '../styles/Navbar.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction HomeScreen() {\n  _s();\n  var _userData$company;\n  const [userData, setUserData] = useState(null);\n  const navigate = useNavigate();\n  const [scheduleByDate, setScheduleByDate] = useState({\n    current: [],\n    next: []\n  });\n  const [weeklyStats, setWeeklyStats] = useState({\n    totalShifts: 0,\n    nextShift: null\n  });\n  const [adminMessage, setAdminMessage] = useState('');\n  const [isSaving, setIsSaving] = useState(false);\n  useEffect(() => {\n    const fetchAdminMessage = async () => {\n      if (userData) {\n        try {\n          const messageData = await getAdminMessage(userData.company.id);\n          setAdminMessage(messageData.message || '');\n        } catch (error) {\n          console.error('Failed to load admin message:', error);\n        }\n      }\n    };\n    fetchAdminMessage();\n  }, [userData]);\n  const handleSaveAdminMessage = async () => {\n    try {\n      setIsSaving(true);\n      await saveAdminMessage(userData.company.id, adminMessage);\n      toast.success('Message saved!');\n    } catch (error) {\n      toast.error('Failed to save message');\n    } finally {\n      setIsSaving(false);\n    }\n  };\n  useEffect(() => {\n    const loggedUser = JSON.parse(localStorage.getItem('user'));\n    if (!loggedUser) {\n      navigate('/');\n    } else {\n      setUserData(loggedUser);\n    }\n  }, [navigate]);\n  const loadUserShifts = async (companyId, userId) => {\n    const weekOffsets = [0, 1];\n    const allWeeks = {};\n    for (let offset of weekOffsets) {\n      const weekKey = calculateWeekKey(offset);\n      const availability = await getAvailability(companyId, weekKey, userId);\n      const startOfWeek = new Date();\n      startOfWeek.setDate(startOfWeek.getDate() + offset * 7 - startOfWeek.getDay());\n      const formatted = [];\n      DAYS_OF_WEEK.forEach((day, i) => {\n        const date = new Date(startOfWeek);\n        date.setDate(startOfWeek.getDate() + i);\n        const dateStr = date.toLocaleDateString('en-GB'); // format: DD/MM/YYYY\n\n        SHIFTS.forEach(shift => {\n          var _availability$shift, _availability$shift$d;\n          const status = availability === null || availability === void 0 ? void 0 : (_availability$shift = availability[shift]) === null || _availability$shift === void 0 ? void 0 : (_availability$shift$d = _availability$shift[day]) === null || _availability$shift$d === void 0 ? void 0 : _availability$shift$d.status;\n          if (status === 'selected') {\n            formatted.push({\n              date: dateStr,\n              day,\n              shift,\n              time: SHIFT_TIMES[shift]\n            });\n          }\n        });\n      });\n      allWeeks[offset === 0 ? 'current' : 'next'] = formatted;\n    }\n\n    // 🔵 סטטיסטיקה שבועית אישית\n    const allShifts = [...(allWeeks.current || []), ...(allWeeks.next || [])];\n    const allShiftsSorted = allShifts.sort((a, b) => {\n      const [dayA, monthA, yearA] = a.date.split('/').map(Number);\n      const [dayB, monthB, yearB] = b.date.split('/').map(Number);\n      const dateA = new Date(yearA, monthA - 1, dayA);\n      const dateB = new Date(yearB, monthB - 1, dayB);\n      return dateA - dateB;\n    });\n    const now = new Date();\n    const nextShift = allShiftsSorted.find(item => {\n      const [day, month, year] = item.date.split('/').map(Number);\n      const [startHour, startMinute] = item.time.split('-')[0].split(':').map(Number);\n      const shiftDateTime = new Date(year, month - 1, day, startHour, startMinute);\n      return shiftDateTime >= now;\n    });\n    setScheduleByDate(allWeeks);\n    setWeeklyStats({\n      totalShifts: allShifts.length,\n      nextShift\n    });\n  };\n  useEffect(() => {\n    if (userData) {\n      loadUserShifts(userData.company.id, userData.user.id);\n    }\n  }, [userData]);\n  const greeting = useMemo(() => {\n    const hour = new Date().getHours();\n    if (hour < 12) return 'Good morning';\n    if (hour < 18) return 'Good afternoon';\n    return 'Good evening';\n  }, []);\n  const todayStr = useMemo(() => {\n    return new Date().toLocaleDateString('en-GB', {\n      weekday: 'long',\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    });\n  }, []);\n  if (!userData) {\n    return /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 16\n    }, this);\n  }\n  const renderShiftList = (title, shifts) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weekly-shift-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }, this), shifts.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: shifts.map((item, index) => {\n          const isNextShift = weeklyStats.nextShift && weeklyStats.nextShift.date === item.date && weeklyStats.nextShift.shift === item.shift && weeklyStats.nextShift.time === item.time;\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: isNextShift ? 'next-shift' : '',\n              children: [isNextShift && /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  marginRight: '6px'\n                },\n                children: \"\\u23ED\\uFE0F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 57\n              }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: item.date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  margin: '0 6px'\n                },\n                children: \"\\u2013\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 41\n              }, this), item.shift, \" \\u2013 \", item.time]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 37\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"No shifts scheduled for \", title.toLowerCase(), \".\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(BackgroundWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navbar-placeholder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"home-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [greeting, \", \", userData.user.name, \"!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"today-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Today is\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"today-date\",\n          children: todayStr\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"company-inline\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"company-label\",\n          children: \"Company: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"company-name\",\n          children: ((_userData$company = userData.company) === null || _userData$company === void 0 ? void 0 : _userData$company.name) || \"N/A\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"admin-message-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\uD83D\\uDCE2 Message from Admin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 21\n        }, this), userData.user.role === 'admin' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"admin-message-textarea\",\n            value: adminMessage,\n            onChange: e => setAdminMessage(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSaveAdminMessage,\n            className: \"action-button\",\n            disabled: isSaving,\n            children: isSaving ? 'Saving...' : 'Save Message'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            whiteSpace: 'pre-wrap'\n          },\n          children: adminMessage || 'No message from admin yet.'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weekly-schedules\",\n        children: [renderShiftList('Shifts for the current week', scheduleByDate.current), renderShiftList('Shifts for next week', scheduleByDate.next)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"home-actions\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"action-button\",\n          onClick: () => navigate('/profile'),\n          children: \"Go to Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 183,\n    columnNumber: 9\n  }, this);\n}\n_s(HomeScreen, \"GSrlV1WgoeA4DIrFEPmN6Aklz34=\", false, function () {\n  return [useNavigate];\n});\n_c = HomeScreen;\nexport default HomeScreen;\nvar _c;\n$RefreshReg$(_c, \"HomeScreen\");","map":{"version":3,"names":["React","useEffect","useState","useMemo","useNavigate","toast","ToastContainer","Navbar","BackgroundWrapper","Loader","getAvailability","calculateWeekKey","getAdminMessage","saveAdminMessage","SHIFTS","SHIFT_TIMES","DAYS_OF_WEEK","jsxDEV","_jsxDEV","Fragment","_Fragment","HomeScreen","_s","_userData$company","userData","setUserData","navigate","scheduleByDate","setScheduleByDate","current","next","weeklyStats","setWeeklyStats","totalShifts","nextShift","adminMessage","setAdminMessage","isSaving","setIsSaving","fetchAdminMessage","messageData","company","id","message","error","console","handleSaveAdminMessage","success","loggedUser","JSON","parse","localStorage","getItem","loadUserShifts","companyId","userId","weekOffsets","allWeeks","offset","weekKey","availability","startOfWeek","Date","setDate","getDate","getDay","formatted","forEach","day","i","date","dateStr","toLocaleDateString","shift","_availability$shift","_availability$shift$d","status","push","time","allShifts","allShiftsSorted","sort","a","b","dayA","monthA","yearA","split","map","Number","dayB","monthB","yearB","dateA","dateB","now","find","item","month","year","startHour","startMinute","shiftDateTime","length","user","greeting","hour","getHours","todayStr","weekday","fileName","_jsxFileName","lineNumber","columnNumber","renderShiftList","title","shifts","className","children","index","isNextShift","style","marginRight","margin","toLowerCase","name","role","value","onChange","e","target","onClick","disabled","whiteSpace","_c","$RefreshReg$"],"sources":["/Users/dorlevi/IdeaProjects/newShiftWise/client/src/components/HomeScreen.js"],"sourcesContent":["import React, { useEffect, useState, useMemo } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport Navbar from './Navbar';\nimport BackgroundWrapper from './BackgroundWrapper';\nimport Loader from './Loader';\n\nimport { getAvailability } from '../services/availabilityService';\nimport { calculateWeekKey } from '../utils/utils';\nimport { getAdminMessage, saveAdminMessage } from '../services/homeService';\nimport { SHIFTS, SHIFT_TIMES, DAYS_OF_WEEK } from '../utils/constants';\n\nimport '../styles/HomeScreen.css';\nimport '../styles/Navbar.css';\n\nfunction HomeScreen() {\n    const [userData, setUserData] = useState(null);\n    const navigate = useNavigate();\n    const [scheduleByDate, setScheduleByDate] = useState({ current: [], next: [] });\n\n    const [weeklyStats, setWeeklyStats] = useState({ totalShifts: 0, nextShift: null });\n    const [adminMessage, setAdminMessage] = useState('');\n    const [isSaving, setIsSaving] = useState(false);\n\n    useEffect(() => {\n        const fetchAdminMessage = async () => {\n            if (userData) {\n                try {\n                    const messageData = await getAdminMessage(userData.company.id);\n                    setAdminMessage(messageData.message || '');\n                } catch (error) {\n                    console.error('Failed to load admin message:', error);\n                }\n            }\n        };\n\n        fetchAdminMessage();\n    }, [userData]);\n\n    const handleSaveAdminMessage = async () => {\n        try {\n            setIsSaving(true);\n            await saveAdminMessage(userData.company.id, adminMessage);\n            toast.success('Message saved!');\n        } catch (error) {\n            toast.error('Failed to save message');\n        } finally {\n            setIsSaving(false);\n        }\n    };\n\n    useEffect(() => {\n        const loggedUser = JSON.parse(localStorage.getItem('user'));\n        if (!loggedUser) {\n            navigate('/');\n        } else {\n            setUserData(loggedUser);\n        }\n    }, [navigate]);\n\n    const loadUserShifts = async (companyId, userId) => {\n\n        const weekOffsets = [0, 1];\n        const allWeeks = {};\n\n        for (let offset of weekOffsets) {\n            const weekKey = calculateWeekKey(offset);\n            const availability = await getAvailability(companyId, weekKey, userId);\n\n            const startOfWeek = new Date();\n            startOfWeek.setDate(startOfWeek.getDate() + offset * 7 - startOfWeek.getDay());\n\n            const formatted = [];\n\n            DAYS_OF_WEEK.forEach((day, i) => {\n                const date = new Date(startOfWeek);\n                date.setDate(startOfWeek.getDate() + i);\n                const dateStr = date.toLocaleDateString('en-GB'); // format: DD/MM/YYYY\n\n                SHIFTS.forEach((shift) => {\n                    const status = availability?.[shift]?.[day]?.status;\n                    if (status === 'selected') {\n                        formatted.push({\n                            date: dateStr,\n                            day,\n                            shift,\n                            time: SHIFT_TIMES[shift],\n                        });\n                    }\n                });\n            });\n\n            allWeeks[offset === 0 ? 'current' : 'next'] = formatted;\n        }\n\n        // 🔵 סטטיסטיקה שבועית אישית\n        const allShifts = [...(allWeeks.current || []), ...(allWeeks.next || [])];\n\n        const allShiftsSorted = allShifts.sort((a, b) => {\n            const [dayA, monthA, yearA] = a.date.split('/').map(Number);\n            const [dayB, monthB, yearB] = b.date.split('/').map(Number);\n            const dateA = new Date(yearA, monthA - 1, dayA);\n            const dateB = new Date(yearB, monthB - 1, dayB);\n            return dateA - dateB;\n        });\n\n        const now = new Date();\n        const nextShift = allShiftsSorted.find((item) => {\n            const [day, month, year] = item.date.split('/').map(Number);\n            const [startHour, startMinute] = item.time.split('-')[0].split(':').map(Number);\n            const shiftDateTime = new Date(year, month - 1, day, startHour, startMinute);\n            return shiftDateTime >= now;\n        });\n\n        setScheduleByDate(allWeeks);\n        setWeeklyStats({\n            totalShifts: allShifts.length,\n            nextShift\n        });\n    };\n\n    useEffect(() => {\n        if (userData) {\n        loadUserShifts(userData.company.id, userData.user.id);\n        }\n    }, [userData]);\n\n    const greeting = useMemo(() => {\n        const hour = new Date().getHours();\n        if (hour < 12) return 'Good morning';\n        if (hour < 18) return 'Good afternoon';\n        return 'Good evening';\n    }, []);\n\n    const todayStr = useMemo(() => {\n        return new Date().toLocaleDateString('en-GB', {\n            weekday: 'long',\n            year: 'numeric',\n            month: 'long',\n            day: 'numeric'\n        });\n    }, []);\n\n    if (!userData) {\n        return <Loader />;\n    }\n\n    const renderShiftList = (title, shifts) => {\n        return (\n            <div className=\"weekly-shift-section\">\n                <h3>{title}</h3>\n                {shifts.length > 0 ? (\n                    <ul>\n                        {shifts.map((item, index) => {\n                            const isNextShift =\n                                weeklyStats.nextShift &&\n                                weeklyStats.nextShift.date === item.date &&\n                                weeklyStats.nextShift.shift === item.shift &&\n                                weeklyStats.nextShift.time === item.time;\n\n                            return (\n                                <li key={index}>\n                                    <div className={isNextShift ? 'next-shift' : ''}>\n                                        {isNextShift && <span style={{ marginRight: '6px' }}>⏭️</span>}\n                                        <strong>{item.date}</strong>\n                                        <span style={{ margin: '0 6px' }}>–</span>\n                                        {item.shift} – {item.time}\n                                    </div>\n                                </li>\n                            );\n                        })}\n                    </ul>\n                ) : (\n                    <p>No shifts scheduled for {title.toLowerCase()}.</p>\n                )}\n            </div>\n        );\n    };\n\n    return (\n        <BackgroundWrapper>\n            <ToastContainer />\n            <Navbar />\n            <div className=\"navbar-placeholder\"></div>\n\n            <div className=\"home-container\">\n                <h1>{greeting}, {userData.user.name}!</h1>\n                <div className=\"today-container\">\n                    <span>Today is</span>\n                    <span className=\"today-date\">{todayStr}</span>\n                </div>\n\n                <div className=\"company-inline\">\n                    <span className=\"company-label\">Company: </span>\n                    <span className=\"company-name\">{userData.company?.name || \"N/A\"}</span>\n                </div>\n\n                <div className=\"admin-message-box\">\n                    <h3>📢 Message from Admin</h3>\n                    {userData.user.role === 'admin' ? (\n                        <>\n                            <textarea\n                                className=\"admin-message-textarea\"\n                                value={adminMessage}\n                                onChange={(e) => setAdminMessage(e.target.value)}\n                            />\n                            <button\n                                onClick={handleSaveAdminMessage}\n                                className=\"action-button\"\n                                disabled={isSaving}\n                            >\n                                {isSaving ? 'Saving...' : 'Save Message'}\n                            </button>\n\n                        </>\n                    ) : (\n                        <p style={{ whiteSpace: 'pre-wrap' }}>{adminMessage || 'No message from admin yet.'}</p>\n                    )}\n                </div>\n\n                <div className=\"weekly-schedules\">\n                    {renderShiftList('Shifts for the current week', scheduleByDate.current)}\n                    {renderShiftList('Shifts for next week', scheduleByDate.next)}\n                </div>\n\n                <div className=\"home-actions\">\n                    <button className=\"action-button\" onClick={() => navigate('/profile')}>\n                        Go to Profile\n                    </button>\n                </div>\n            </div>\n        </BackgroundWrapper>\n    );\n}\n\nexport default HomeScreen;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}