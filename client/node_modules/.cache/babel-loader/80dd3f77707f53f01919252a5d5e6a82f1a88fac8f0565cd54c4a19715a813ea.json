{"ast":null,"code":"var _jsxFileName = \"/Users/dorlevi/IdeaProjects/newShiftWise/client/src/components/ChatScreen.js\",\n  _s = $RefreshSig$();\n// React functions\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\n// Third-party libraries\nimport { toast, ToastContainer } from 'react-toastify';\n\n// Styles\nimport 'react-toastify/dist/ReactToastify.css';\nimport '../styles/ChatScreen.css';\nimport '../styles/Navbar.css';\n\n// Services\nimport { getGroupMessages, sendGroupMessage } from '../services/chatService';\n\n// Internal components\nimport Navbar from './Navbar';\nimport Loader from './Loader';\nimport BackgroundWrapper from './BackgroundWrapper';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ChatScreen = () => {\n  _s();\n  const navigate = useNavigate();\n  const [userData, setUserData] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(true);\n  const messagesEndRef = useRef(null);\n  useEffect(() => {\n    const loggedUser = JSON.parse(localStorage.getItem('user'));\n    if (!loggedUser) {\n      navigate('/');\n    } else {\n      setUserData(loggedUser);\n    }\n  }, [navigate]);\n  useEffect(() => {\n    var _userData$company;\n    if (userData !== null && userData !== void 0 && (_userData$company = userData.company) !== null && _userData$company !== void 0 && _userData$company.id) {\n      fetchMessages();\n    }\n  }, [userData]);\n  const fetchMessages = async () => {\n    try {\n      const data = await getGroupMessages(userData.company.id);\n      const messagesArray = data ? Object.values(data).sort((a, b) => a.timestamp - b.timestamp) : [];\n      setMessages(messagesArray);\n    } catch (error) {\n      console.error('Error fetching group messages:', error);\n      toast.error('Failed to load messages.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleSendMessage = async () => {\n    if (!newMessage.trim()) return;\n    const messageData = {\n      senderId: userData.user.id,\n      senderName: userData.user.name || 'Unknown',\n      // ✅ שימוש עקבי בשם המלא\n      content: newMessage.trim(),\n      timestamp: Date.now()\n    };\n    try {\n      await sendGroupMessage(userData.company.id, messageData);\n      setMessages(prev => [...prev, messageData]);\n      setNewMessage('');\n      scrollToBottom();\n    } catch (error) {\n      toast.error('Failed to send message.');\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter') {\n      handleSendMessage();\n    }\n  };\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  useEffect(scrollToBottom, [messages]);\n  if (!userData) {\n    return /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(BackgroundWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navbar-placeholder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Group Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), isLoading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-messages\",\n          children: [messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `chat-message ${msg.senderId === userData.user.id ? 'my-message' : 'other-message'}`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chat-sender\",\n              children: msg.senderName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chat-content\",\n              children: msg.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 37\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 33\n          }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: messagesEndRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-input\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Type a message...\",\n            value: newMessage,\n            onChange: e => setNewMessage(e.target.value),\n            onKeyDown: handleKeyPress\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSendMessage,\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 9\n  }, this);\n};\n_s(ChatScreen, \"B3wiN6ou+s8+KSWpotAeBkDbQFc=\", false, function () {\n  return [useNavigate];\n});\n_c = ChatScreen;\nexport default ChatScreen;\nvar _c;\n$RefreshReg$(_c, \"ChatScreen\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useNavigate","toast","ToastContainer","getGroupMessages","sendGroupMessage","Navbar","Loader","BackgroundWrapper","jsxDEV","_jsxDEV","Fragment","_Fragment","ChatScreen","_s","navigate","userData","setUserData","messages","setMessages","newMessage","setNewMessage","isLoading","setIsLoading","messagesEndRef","loggedUser","JSON","parse","localStorage","getItem","_userData$company","company","id","fetchMessages","data","messagesArray","Object","values","sort","a","b","timestamp","error","console","handleSendMessage","trim","messageData","senderId","user","senderName","name","content","Date","now","prev","scrollToBottom","handleKeyPress","e","key","_messagesEndRef$curre","current","scrollIntoView","behavior","fileName","_jsxFileName","lineNumber","columnNumber","children","className","map","msg","index","ref","type","placeholder","value","onChange","target","onKeyDown","onClick","_c","$RefreshReg$"],"sources":["/Users/dorlevi/IdeaProjects/newShiftWise/client/src/components/ChatScreen.js"],"sourcesContent":["// React functions\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\n// Third-party libraries\nimport { toast, ToastContainer } from 'react-toastify';\n\n// Styles\nimport 'react-toastify/dist/ReactToastify.css';\nimport '../styles/ChatScreen.css';\nimport '../styles/Navbar.css';\n\n// Services\nimport { getGroupMessages, sendGroupMessage } from '../services/chatService';\n\n// Internal components\nimport Navbar from './Navbar';\nimport Loader from './Loader';\nimport BackgroundWrapper from './BackgroundWrapper';\n\nconst ChatScreen = () => {\n    const navigate = useNavigate();\n\n    const [userData, setUserData] = useState(null);\n    const [messages, setMessages] = useState([]);\n    const [newMessage, setNewMessage] = useState('');\n    const [isLoading, setIsLoading] = useState(true);\n\n    const messagesEndRef = useRef(null);\n\n    useEffect(() => {\n        const loggedUser = JSON.parse(localStorage.getItem('user'));\n        if (!loggedUser) {\n            navigate('/');\n        } else {\n            setUserData(loggedUser);\n        }\n    }, [navigate]);\n\n    useEffect(() => {\n        if (userData?.company?.id) {\n            fetchMessages();\n        }\n    }, [userData]);\n\n    const fetchMessages = async () => {\n        try {\n            const data = await getGroupMessages(userData.company.id);\n            const messagesArray = data ? Object.values(data).sort((a, b) => a.timestamp - b.timestamp) : [];\n            setMessages(messagesArray);\n        } catch (error) {\n            console.error('Error fetching group messages:', error);\n            toast.error('Failed to load messages.');\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    const handleSendMessage = async () => {\n        if (!newMessage.trim()) return;\n\n        const messageData = {\n            senderId: userData.user.id,\n            senderName: userData.user.name || 'Unknown', // ✅ שימוש עקבי בשם המלא\n            content: newMessage.trim(),\n            timestamp: Date.now(),\n        };\n\n        try {\n            await sendGroupMessage(userData.company.id, messageData);\n            setMessages((prev) => [...prev, messageData]);\n            setNewMessage('');\n            scrollToBottom();\n        } catch (error) {\n            toast.error('Failed to send message.');\n        }\n    };\n\n\n    const handleKeyPress = (e) => {\n        if (e.key === 'Enter') {\n            handleSendMessage();\n        }\n    };\n\n    const scrollToBottom = () => {\n        messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n    };\n\n    useEffect(scrollToBottom, [messages]);\n\n    if (!userData) {\n        return <Loader />;\n    }\n\n    return (\n        <BackgroundWrapper>\n            <Navbar />\n            <div className=\"navbar-placeholder\"></div>\n\n            <div className=\"chat-container\">\n                <h1>Group Chat</h1>\n\n                {isLoading ? (\n                    <Loader />\n                ) : (\n                    <>\n                        <div className=\"chat-messages\">\n                            {messages.map((msg, index) => (\n                                <div\n                                    key={index}\n                                    className={`chat-message ${msg.senderId === userData.user.id ? 'my-message' : 'other-message'}`}\n                                >\n                                    <div className=\"chat-sender\">{msg.senderName}</div>\n                                    <div className=\"chat-content\">{msg.content}</div>\n                                </div>\n                            ))}\n                            <div ref={messagesEndRef}></div>\n                        </div>\n\n                        <div className=\"chat-input\">\n                            <input\n                                type=\"text\"\n                                placeholder=\"Type a message...\"\n                                value={newMessage}\n                                onChange={(e) => setNewMessage(e.target.value)}\n                                onKeyDown={handleKeyPress}\n                            />\n                            <button onClick={handleSendMessage}>Send</button>\n                        </div>\n                    </>\n                )}\n\n                <ToastContainer />\n            </div>\n        </BackgroundWrapper>\n    );\n};\n\nexport default ChatScreen;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}