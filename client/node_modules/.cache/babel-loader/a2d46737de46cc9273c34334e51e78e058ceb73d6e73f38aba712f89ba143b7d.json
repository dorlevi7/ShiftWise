{"ast":null,"code":"var _jsxFileName = \"/Users/dorlevi/IdeaProjects/newShiftWise/client/src/components/AvailabilityScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Navbar from './Navbar';\nimport { saveAvailability } from '../services/availabilityService';\nimport '../styles/AvailabilityScreen.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AvailabilityScreen = () => {\n  _s();\n  const daysOfWeek = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n  const shifts = ['Morning', 'Noon', 'Evening', 'Night'];\n  const [availability, setAvailability] = useState(shifts.reduce((acc, shift) => {\n    acc[shift] = daysOfWeek.reduce((dayAcc, day) => {\n      dayAcc[day] = false;\n      return dayAcc;\n    }, {});\n    return acc;\n  }, {}));\n  const [currentWeek, setCurrentWeek] = useState(1); // מתחילים מהשבוע הבא\n  const [userData, setUserData] = useState(null); // פרטי המשתמש והחברה\n  const navigate = useNavigate();\n  useEffect(() => {\n    // שליפת פרטי המשתמש והחברה מ-localStorage\n    const loggedUser = JSON.parse(localStorage.getItem('user'));\n    if (!loggedUser) {\n      navigate('/'); // אם המשתמש לא מחובר, נוודא שהוא חוזר למסך ההתחברות\n    } else {\n      setUserData(loggedUser); // שומר את פרטי המשתמש והחברה ב-state\n    }\n  }, [navigate]);\n  if (!userData) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 16\n    }, this); // תצוגת טעינה עד שהנתונים נטענים\n  }\n  const calculateWeekKey = weekOffset => {\n    const today = new Date();\n    const firstDayOfWeek = new Date(today.setDate(today.getDate() - today.getDay() + weekOffset * 7));\n    const formatDate = date => `${date.getFullYear()}_${String(date.getMonth() + 1).padStart(2, '0')}_${String(date.getDate()).padStart(2, '0')}`;\n    return `week_${formatDate(firstDayOfWeek)}`;\n  };\n  const handleAvailabilityChange = (shift, day) => {\n    setAvailability(prev => ({\n      ...prev,\n      [shift]: {\n        ...prev[shift],\n        [day]: !prev[shift][day]\n      }\n    }));\n  };\n  const handleWeekChange = direction => {\n    setCurrentWeek(prevWeek => prevWeek + direction);\n  };\n  const handleSubmit = async () => {\n    const companyId = userData.company.id; // מזהה החברה מתוך userData\n    const userId = userData.user.id; // מזהה המשתמש מתוך userData\n    const weekKey = calculateWeekKey(currentWeek);\n    try {\n      await saveAvailability(companyId, weekKey, userId, availability);\n      alert('Availability saved successfully!');\n    } catch (error) {\n      console.error('Error saving availability:', error);\n      alert('Failed to save availability. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"availability-container\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Weekly Availability\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"week-navigation\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleWeekChange(-1),\n        children: \"Previous Week\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Week: \", calculateWeekKey(currentWeek)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleWeekChange(1),\n        children: \"Next Week\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"availability-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Shift\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this), daysOfWeek.map(day => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: day\n          }, day, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: shifts.map(shift => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: shift\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 29\n          }, this), daysOfWeek.map(day => /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: availability[shift][day],\n              onChange: () => handleAvailabilityChange(shift, day)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 37\n            }, this)\n          }, day, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 33\n          }, this))]\n        }, shift, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"submit-button\",\n      onClick: handleSubmit,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n};\n_s(AvailabilityScreen, \"9AfLddIBoRQSG6dmNxIONtnaOUA=\", false, function () {\n  return [useNavigate];\n});\n_c = AvailabilityScreen;\nexport default AvailabilityScreen;\nvar _c;\n$RefreshReg$(_c, \"AvailabilityScreen\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","Navbar","saveAvailability","jsxDEV","_jsxDEV","AvailabilityScreen","_s","daysOfWeek","shifts","availability","setAvailability","reduce","acc","shift","dayAcc","day","currentWeek","setCurrentWeek","userData","setUserData","navigate","loggedUser","JSON","parse","localStorage","getItem","children","fileName","_jsxFileName","lineNumber","columnNumber","calculateWeekKey","weekOffset","today","Date","firstDayOfWeek","setDate","getDate","getDay","formatDate","date","getFullYear","String","getMonth","padStart","handleAvailabilityChange","prev","handleWeekChange","direction","prevWeek","handleSubmit","companyId","company","id","userId","user","weekKey","alert","error","console","className","onClick","map","type","checked","onChange","_c","$RefreshReg$"],"sources":["/Users/dorlevi/IdeaProjects/newShiftWise/client/src/components/AvailabilityScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Navbar from './Navbar';\nimport { saveAvailability } from '../services/availabilityService';\nimport '../styles/AvailabilityScreen.css';\n\nconst AvailabilityScreen = () => {\n    const daysOfWeek = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n    const shifts = ['Morning', 'Noon', 'Evening', 'Night'];\n\n    const [availability, setAvailability] = useState(\n        shifts.reduce((acc, shift) => {\n            acc[shift] = daysOfWeek.reduce((dayAcc, day) => {\n                dayAcc[day] = false;\n                return dayAcc;\n            }, {});\n            return acc;\n        }, {})\n    );\n\n    const [currentWeek, setCurrentWeek] = useState(1); // מתחילים מהשבוע הבא\n    const [userData, setUserData] = useState(null); // פרטי המשתמש והחברה\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        // שליפת פרטי המשתמש והחברה מ-localStorage\n        const loggedUser = JSON.parse(localStorage.getItem('user'));\n        if (!loggedUser) {\n            navigate('/'); // אם המשתמש לא מחובר, נוודא שהוא חוזר למסך ההתחברות\n        } else {\n            setUserData(loggedUser); // שומר את פרטי המשתמש והחברה ב-state\n        }\n    }, [navigate]);\n\n    if (!userData) {\n        return <p>Loading...</p>; // תצוגת טעינה עד שהנתונים נטענים\n    }\n\n    const calculateWeekKey = (weekOffset) => {\n        const today = new Date();\n        const firstDayOfWeek = new Date(today.setDate(today.getDate() - today.getDay() + weekOffset * 7));\n        const formatDate = (date) => `${date.getFullYear()}_${String(date.getMonth() + 1).padStart(2, '0')}_${String(date.getDate()).padStart(2, '0')}`;\n        return `week_${formatDate(firstDayOfWeek)}`;\n    };\n\n    const handleAvailabilityChange = (shift, day) => {\n        setAvailability((prev) => ({\n            ...prev,\n            [shift]: {\n                ...prev[shift],\n                [day]: !prev[shift][day],\n            },\n        }));\n    };\n\n    const handleWeekChange = (direction) => {\n        setCurrentWeek((prevWeek) => prevWeek + direction);\n    };\n\n    const handleSubmit = async () => {\n        const companyId = userData.company.id; // מזהה החברה מתוך userData\n        const userId = userData.user.id; // מזהה המשתמש מתוך userData\n        const weekKey = calculateWeekKey(currentWeek);\n\n        try {\n            await saveAvailability(companyId, weekKey, userId, availability);\n            alert('Availability saved successfully!');\n        } catch (error) {\n            console.error('Error saving availability:', error);\n            alert('Failed to save availability. Please try again.');\n        }\n    };\n\n    return (\n        <div className=\"availability-container\">\n            <Navbar />\n            <h1>Weekly Availability</h1>\n            <div className=\"week-navigation\">\n                <button onClick={() => handleWeekChange(-1)}>Previous Week</button>\n                <h2>Week: {calculateWeekKey(currentWeek)}</h2>\n                <button onClick={() => handleWeekChange(1)}>Next Week</button>\n            </div>\n            <table className=\"availability-table\">\n                <thead>\n                    <tr>\n                        <th>Shift</th>\n                        {daysOfWeek.map((day) => (\n                            <th key={day}>{day}</th>\n                        ))}\n                    </tr>\n                </thead>\n                <tbody>\n                    {shifts.map((shift) => (\n                        <tr key={shift}>\n                            <td>{shift}</td>\n                            {daysOfWeek.map((day) => (\n                                <td key={day}>\n                                    <input\n                                        type=\"checkbox\"\n                                        checked={availability[shift][day]}\n                                        onChange={() => handleAvailabilityChange(shift, day)}\n                                    />\n                                </td>\n                            ))}\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n            <button className=\"submit-button\" onClick={handleSubmit}>\n                Submit\n            </button>\n        </div>\n    );\n};\n\nexport default AvailabilityScreen;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}