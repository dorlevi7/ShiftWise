{"ast":null,"code":"var _jsxFileName = \"/Users/dorlevi/IdeaProjects/newShiftWise/client/src/components/PrivateChatScreen.js\",\n  _s = $RefreshSig$();\n// React functions\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\n\n// Third-party libraries\nimport { toast } from 'react-toastify';\n\n// Styles\nimport '../styles/ChatScreen.css';\nimport '../styles/Navbar.css';\n\n// Services\nimport { getPrivateMessages, sendPrivateMessage } from '../services/chatService';\nimport { getUsers } from '../services/userService';\n\n// Internal components\nimport Navbar from './Navbar';\nimport Loader from './Loader';\nimport BackgroundWrapper from './BackgroundWrapper';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PrivateChatScreen = () => {\n  _s();\n  const {\n    recipientId\n  } = useParams();\n  const navigate = useNavigate();\n  const [userData, setUserData] = useState(null);\n  const [recipient, setRecipient] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(true);\n  const messagesEndRef = useRef(null);\n  useEffect(() => {\n    const loggedUser = JSON.parse(localStorage.getItem('user'));\n    if (!loggedUser) {\n      navigate('/');\n    } else {\n      setUserData(loggedUser);\n    }\n  }, [navigate]);\n  useEffect(() => {\n    var _userData$company;\n    if (userData !== null && userData !== void 0 && (_userData$company = userData.company) !== null && _userData$company !== void 0 && _userData$company.id && recipientId) {\n      fetchRecipient();\n      fetchMessages();\n    }\n  }, [userData, recipientId]);\n  const fetchRecipient = async () => {\n    try {\n      const allUsers = await getUsers();\n      const found = allUsers[recipientId];\n      if (found) setRecipient({\n        id: recipientId,\n        ...found\n      });\n    } catch (error) {\n      console.error('Error fetching recipient:', error);\n    }\n  };\n  const fetchMessages = async () => {\n    try {\n      const companyId = userData.company.id;\n      const user1Id = userData.user.id;\n      const user2Id = recipientId;\n      const data = await getPrivateMessages(companyId, user1Id, user2Id);\n      const messagesArray = data ? Object.values(data).sort((a, b) => a.timestamp - b.timestamp) : [];\n      setMessages(messagesArray);\n    } catch (error) {\n      console.error('Error fetching private messages:', error);\n      toast.error('Failed to load messages.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleSendMessage = async () => {\n    if (!newMessage.trim()) return;\n    const messageData = {\n      senderId: userData.user.id,\n      senderName: userData.user.name || 'Unknown',\n      content: newMessage.trim(),\n      timestamp: Date.now()\n    };\n    try {\n      await sendPrivateMessage(userData.company.id, userData.user.id, recipientId, messageData);\n      setMessages(prev => [...prev, messageData]);\n      setNewMessage('');\n      scrollToBottom();\n    } catch (error) {\n      toast.error('Failed to send message.');\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter') {\n      handleSendMessage();\n    }\n  };\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  useEffect(scrollToBottom, [messages]);\n  if (!userData || !recipient) return /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 41\n  }, this);\n  const isSameDate = (timestamp1, timestamp2) => {\n    const d1 = new Date(timestamp1);\n    const d2 = new Date(timestamp2);\n    return d1.getFullYear() === d2.getFullYear() && d1.getMonth() === d2.getMonth() && d1.getDate() === d2.getDate();\n  };\n  return /*#__PURE__*/_jsxDEV(BackgroundWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navbar-placeholder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-layout\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-sidebar\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\uD83D\\uDCAC \\u05E9\\u05D9\\u05D7\\u05D5\\u05EA\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"chat-link\",\n            onClick: () => navigate('/chat'),\n            children: \"\\uD83D\\uDFE2 \\u05E6'\\u05D0\\u05D8 \\u05E7\\u05D1\\u05D5\\u05E6\\u05EA\\u05D9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-main\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"\\u05E6'\\u05D0\\u05D8 \\u05E2\\u05DD \", recipient.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }, this), isLoading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-messages\",\n            children: [messages.map((msg, index) => {\n              const currentDate = new Date(msg.timestamp);\n              const prevDate = index > 0 ? new Date(messages[index - 1].timestamp) : null;\n              const showDate = index === 0 || !isSameDate(currentDate, prevDate);\n              return /*#__PURE__*/_jsxDEV(React.Fragment, {\n                children: [showDate && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"date-header-wrapper\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"date-header\",\n                    children: currentDate.toLocaleDateString('he-IL', {\n                      weekday: 'short',\n                      day: '2-digit',\n                      month: '2-digit',\n                      year: 'numeric'\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 154,\n                    columnNumber: 53\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 153,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `chat-message-wrapper ${msg.senderId === userData.user.id ? 'align-right' : 'align-left'}`,\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: `chat-message ${msg.senderId === userData.user.id ? 'my-message' : 'other-message'}`,\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"chat-sender\",\n                      children: msg.senderName\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 166,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"chat-content\",\n                      children: msg.content\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 167,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"chat-time\",\n                      children: new Date(msg.timestamp).toLocaleTimeString('he-IL', {\n                        hour: '2-digit',\n                        minute: '2-digit'\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 168,\n                      columnNumber: 53\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 165,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 164,\n                  columnNumber: 45\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 41\n              }, this);\n            }), /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: messagesEndRef\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-input\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Type a message...\",\n              value: newMessage,\n              onChange: e => setNewMessage(e.target.value),\n              onKeyDown: handleKeyPress\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleSendMessage,\n              children: \"Send\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 9\n  }, this);\n};\n_s(PrivateChatScreen, \"PNMh3Z/iKFOiOTXn5M4khgyEdxI=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = PrivateChatScreen;\nexport default PrivateChatScreen;\nvar _c;\n$RefreshReg$(_c, \"PrivateChatScreen\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useParams","useNavigate","toast","getPrivateMessages","sendPrivateMessage","getUsers","Navbar","Loader","BackgroundWrapper","jsxDEV","_jsxDEV","Fragment","_Fragment","PrivateChatScreen","_s","recipientId","navigate","userData","setUserData","recipient","setRecipient","messages","setMessages","newMessage","setNewMessage","isLoading","setIsLoading","messagesEndRef","loggedUser","JSON","parse","localStorage","getItem","_userData$company","company","id","fetchRecipient","fetchMessages","allUsers","found","error","console","companyId","user1Id","user","user2Id","data","messagesArray","Object","values","sort","a","b","timestamp","handleSendMessage","trim","messageData","senderId","senderName","name","content","Date","now","prev","scrollToBottom","handleKeyPress","e","key","_messagesEndRef$curre","current","scrollIntoView","behavior","fileName","_jsxFileName","lineNumber","columnNumber","isSameDate","timestamp1","timestamp2","d1","d2","getFullYear","getMonth","getDate","children","className","onClick","map","msg","index","currentDate","prevDate","showDate","toLocaleDateString","weekday","day","month","year","toLocaleTimeString","hour","minute","ref","type","placeholder","value","onChange","target","onKeyDown","_c","$RefreshReg$"],"sources":["/Users/dorlevi/IdeaProjects/newShiftWise/client/src/components/PrivateChatScreen.js"],"sourcesContent":["// React functions\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\n\n// Third-party libraries\nimport { toast } from 'react-toastify';\n\n// Styles\nimport '../styles/ChatScreen.css';\nimport '../styles/Navbar.css';\n\n// Services\nimport { getPrivateMessages, sendPrivateMessage } from '../services/chatService';\nimport { getUsers } from '../services/userService';\n\n// Internal components\nimport Navbar from './Navbar';\nimport Loader from './Loader';\nimport BackgroundWrapper from './BackgroundWrapper';\n\nconst PrivateChatScreen = () => {\n    const { recipientId } = useParams();\n    const navigate = useNavigate();\n\n    const [userData, setUserData] = useState(null);\n    const [recipient, setRecipient] = useState(null);\n    const [messages, setMessages] = useState([]);\n    const [newMessage, setNewMessage] = useState('');\n    const [isLoading, setIsLoading] = useState(true);\n\n    const messagesEndRef = useRef(null);\n\n    useEffect(() => {\n        const loggedUser = JSON.parse(localStorage.getItem('user'));\n        if (!loggedUser) {\n            navigate('/');\n        } else {\n            setUserData(loggedUser);\n        }\n    }, [navigate]);\n\n    useEffect(() => {\n        if (userData?.company?.id && recipientId) {\n            fetchRecipient();\n            fetchMessages();\n        }\n    }, [userData, recipientId]);\n\n    const fetchRecipient = async () => {\n        try {\n            const allUsers = await getUsers();\n            const found = allUsers[recipientId];\n            if (found) setRecipient({ id: recipientId, ...found });\n        } catch (error) {\n            console.error('Error fetching recipient:', error);\n        }\n    };\n\n    const fetchMessages = async () => {\n        try {\n            const companyId = userData.company.id;\n            const user1Id = userData.user.id;\n            const user2Id = recipientId;\n\n            const data = await getPrivateMessages(companyId, user1Id, user2Id);\n            const messagesArray = data ? Object.values(data).sort((a, b) => a.timestamp - b.timestamp) : [];\n            setMessages(messagesArray);\n        } catch (error) {\n            console.error('Error fetching private messages:', error);\n            toast.error('Failed to load messages.');\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    const handleSendMessage = async () => {\n        if (!newMessage.trim()) return;\n\n        const messageData = {\n            senderId: userData.user.id,\n            senderName: userData.user.name || 'Unknown',\n            content: newMessage.trim(),\n            timestamp: Date.now(),\n        };\n\n        try {\n            await sendPrivateMessage(userData.company.id, userData.user.id, recipientId, messageData);\n            setMessages((prev) => [...prev, messageData]);\n            setNewMessage('');\n            scrollToBottom();\n        } catch (error) {\n            toast.error('Failed to send message.');\n        }\n    };\n\n    const handleKeyPress = (e) => {\n        if (e.key === 'Enter') {\n            handleSendMessage();\n        }\n    };\n\n    const scrollToBottom = () => {\n        messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n    };\n\n    useEffect(scrollToBottom, [messages]);\n\n    if (!userData || !recipient) return <Loader />;\n\n    const isSameDate = (timestamp1, timestamp2) => {\n        const d1 = new Date(timestamp1);\n        const d2 = new Date(timestamp2);\n        return (\n            d1.getFullYear() === d2.getFullYear() &&\n            d1.getMonth() === d2.getMonth() &&\n            d1.getDate() === d2.getDate()\n        );\n    };\n\n    return (\n        <BackgroundWrapper>\n            <Navbar />\n            <div className=\"navbar-placeholder\"></div>\n\n            <div className=\"chat-layout\">\n                {/* Sidebar */}\n                <div className=\"chat-sidebar\">\n                    <h3>💬 שיחות</h3>\n                    <ul>\n                        <li className=\"chat-link\" onClick={() => navigate('/chat')}>\n                            🟢 צ'אט קבוצתי\n                        </li>\n                    </ul>\n                </div>\n\n                {/* Chat area */}\n                <div className=\"chat-main\">\n                    <h1>צ'אט עם {recipient.name}</h1>\n\n                    {isLoading ? (\n                        <Loader />\n                    ) : (\n                        <>\n                            <div className=\"chat-messages\">\n                                {messages.map((msg, index) => {\n                                    const currentDate = new Date(msg.timestamp);\n                                    const prevDate = index > 0 ? new Date(messages[index - 1].timestamp) : null;\n                                    const showDate = index === 0 || !isSameDate(currentDate, prevDate);\n\n                                    return (\n                                        <React.Fragment key={index}>\n                                            {showDate && (\n                                                <div className=\"date-header-wrapper\">\n                                                    <div className=\"date-header\">\n                                                        {currentDate.toLocaleDateString('he-IL', {\n                                                            weekday: 'short',\n                                                            day: '2-digit',\n                                                            month: '2-digit',\n                                                            year: 'numeric',\n                                                        })}\n                                                    </div>\n                                                </div>\n                                            )}\n                                            <div className={`chat-message-wrapper ${msg.senderId === userData.user.id ? 'align-right' : 'align-left'}`}>\n                                                <div className={`chat-message ${msg.senderId === userData.user.id ? 'my-message' : 'other-message'}`}>\n                                                    <div className=\"chat-sender\">{msg.senderName}</div>\n                                                    <div className=\"chat-content\">{msg.content}</div>\n                                                    <div className=\"chat-time\">\n                                                        {new Date(msg.timestamp).toLocaleTimeString('he-IL', {\n                                                            hour: '2-digit',\n                                                            minute: '2-digit',\n                                                        })}\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </React.Fragment>\n                                    );\n                                })}\n                                <div ref={messagesEndRef} />\n                            </div>\n\n                            <div className=\"chat-input\">\n                                <input\n                                    type=\"text\"\n                                    placeholder=\"Type a message...\"\n                                    value={newMessage}\n                                    onChange={(e) => setNewMessage(e.target.value)}\n                                    onKeyDown={handleKeyPress}\n                                />\n                                <button onClick={handleSendMessage}>Send</button>\n                            </div>\n                        </>\n                    )}\n                </div>\n            </div>\n        </BackgroundWrapper>\n    );\n};\n\nexport default PrivateChatScreen;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}