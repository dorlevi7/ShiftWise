{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:5000/api/stats';\n\n// Save weekly stats for a user\nexport const saveWeeklyStats = async (companyId, year, month, weekKey, userId, statsData) => {\n  try {\n    const response = await axios.post(`${API_URL}/${companyId}/${year}/${month}/${weekKey}/${userId}`, statsData);\n    return response.data;\n  } catch (error) {\n    console.error('Error saving weekly stats:', error.message);\n    throw error;\n  }\n};\n\n// Get weekly stats for a user\nexport const getWeeklyStats = async (companyId, year, month, weekKey, userId) => {\n  try {\n    const response = await axios.get(`${API_URL}/${companyId}/${year}/${month}/${weekKey}/${userId}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching weekly stats:', error.message);\n    throw error;\n  }\n};\n\n// Update weekly stats for a user\nexport const updateWeeklyStats = async (companyId, year, month, weekKey, userId, updatedStats) => {\n  try {\n    const response = await axios.put(`${API_URL}/${companyId}/${year}/${month}/${weekKey}/${userId}`, updatedStats);\n    return response.data;\n  } catch (error) {\n    console.error('Error updating weekly stats:', error.message);\n    throw error;\n  }\n};\n\n// Delete weekly stats for a user\nexport const deleteWeeklyStats = async (companyId, year, month, weekKey, userId) => {\n  try {\n    const response = await axios.delete(`${API_URL}/${companyId}/${year}/${month}/${weekKey}/${userId}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error deleting weekly stats:', error.message);\n    throw error;\n  }\n};\n\n// Get all weekly stats for a user in a given month\nexport const getMonthlyStats = async (companyId, year, month, userId) => {\n  try {\n    const response = await axios.get(`${API_URL}/${companyId}/${year}/${month}/${userId}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching monthly stats:', error.message);\n    throw error;\n  }\n};\nexport const getYearlyStats = async (companyId, year, userId) => {\n  try {\n    const response = await axios.get(`${API_URL}/${companyId}/${year}/${userId}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching yearly stats:', error.message);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","API_URL","saveWeeklyStats","companyId","year","month","weekKey","userId","statsData","response","post","data","error","console","message","getWeeklyStats","get","updateWeeklyStats","updatedStats","put","deleteWeeklyStats","delete","getMonthlyStats","getYearlyStats"],"sources":["/Users/dorlevi/IdeaProjects/newShiftWise/client/src/services/statsService.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = 'http://localhost:5000/api/stats';\n\n// Save weekly stats for a user\nexport const saveWeeklyStats = async (companyId, year, month, weekKey, userId, statsData) => {\n    try {\n        const response = await axios.post(`${API_URL}/${companyId}/${year}/${month}/${weekKey}/${userId}`, statsData);\n        return response.data;\n    } catch (error) {\n        console.error('Error saving weekly stats:', error.message);\n        throw error;\n    }\n};\n\n// Get weekly stats for a user\nexport const getWeeklyStats = async (companyId, year, month, weekKey, userId) => {\n    try {\n        const response = await axios.get(`${API_URL}/${companyId}/${year}/${month}/${weekKey}/${userId}`);\n        return response.data;\n    } catch (error) {\n        console.error('Error fetching weekly stats:', error.message);\n        throw error;\n    }\n};\n\n// Update weekly stats for a user\nexport const updateWeeklyStats = async (companyId, year, month, weekKey, userId, updatedStats) => {\n    try {\n        const response = await axios.put(`${API_URL}/${companyId}/${year}/${month}/${weekKey}/${userId}`, updatedStats);\n        return response.data;\n    } catch (error) {\n        console.error('Error updating weekly stats:', error.message);\n        throw error;\n    }\n};\n\n// Delete weekly stats for a user\nexport const deleteWeeklyStats = async (companyId, year, month, weekKey, userId) => {\n    try {\n        const response = await axios.delete(`${API_URL}/${companyId}/${year}/${month}/${weekKey}/${userId}`);\n        return response.data;\n    } catch (error) {\n        console.error('Error deleting weekly stats:', error.message);\n        throw error;\n    }\n};\n\n// Get all weekly stats for a user in a given month\nexport const getMonthlyStats = async (companyId, year, month, userId) => {\n    try {\n        const response = await axios.get(`${API_URL}/${companyId}/${year}/${month}/${userId}`);\n        return response.data;\n    } catch (error) {\n        console.error('Error fetching monthly stats:', error.message);\n        throw error;\n    }\n};\n\nexport const getYearlyStats = async (companyId, year, userId) => {\n    try {\n        const response = await axios.get(`${API_URL}/${companyId}/${year}/${userId}`);\n        return response.data;\n    } catch (error) {\n        console.error('Error fetching yearly stats:', error.message);\n        throw error;\n    }\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}