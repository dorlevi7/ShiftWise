{"ast":null,"code":"var _jsxFileName = \"/Users/dorlevi/IdeaProjects/newShiftWise/client/src/components/EmployeesScreen.js\",\n  _s = $RefreshSig$();\n// React & state\nimport React, { useState, useEffect } from 'react';\n\n// UI Components & Libraries\nimport Modal from 'react-modal';\nimport { toast, ToastContainer } from 'react-toastify';\nimport { ThreeDots } from 'react-loader-spinner';\nimport Navbar from '../components/Navbar';\nimport Loader from './Loader';\nimport BackgroundWrapper from './BackgroundWrapper';\n\n// Styles\nimport 'react-toastify/dist/ReactToastify.css';\nimport '../styles/EmployeesScreen.css';\nimport '../styles/Navbar.css';\n\n// Data\nimport employeesData from '../data/emps.json'; // יש לוודא שהקובץ נמצא בתיקייה data\n\n// Services\nimport { getUsers, removeCompanyFromUser, addUser, updateUserCompanies, updateUser } from '../services/userService';\nimport { removeUserFromCompany, addEmployeeToCompany } from '../services/companyService';\nimport { sendNotification } from '../services/notificationService';\nimport { fileToBase64 } from '../utils/fileUtils';\nimport EditProfileModal from '../components/EditProfileModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nModal.setAppElement('#root');\nfunction EmployeesScreen() {\n  _s();\n  // Employees data\n  const [employees, setEmployees] = useState([]);\n\n  // Form data\n  const [newEmployee, setNewEmployee] = useState({\n    name: '',\n    email: '',\n    phone: '',\n    role: 'employee',\n    password: '',\n    photoFile: null\n  });\n\n  // App state\n  const [isLoading, setIsLoading] = useState(true);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [error, setError] = useState('');\n  const [loggedUser, setLoggedUser] = useState(null);\n\n  // Modals\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [isEditModalOpen, setIsEditModalOpen] = useState(false);\n  const [isConfirmDeleteModalOpen, setIsConfirmDeleteModalOpen] = useState(false);\n\n  // Edit/delete handlers\n  const [editEmployee, setEditEmployee] = useState(null);\n  const [employeeToDelete, setEmployeeToDelete] = useState(null);\n\n  // UI helpers\n  const [openCards, setOpenCards] = useState({});\n  const [searchQuery, setSearchQuery] = useState('');\n  const [filterRole, setFilterRole] = useState('all');\n  const [isNotificationModalOpen, setIsNotificationModalOpen] = useState(false);\n  const [selectedNotificationRecipients, setSelectedNotificationRecipients] = useState([]);\n  const [notificationMessage, setNotificationMessage] = useState('');\n  useEffect(() => {\n    const loggedUser = JSON.parse(localStorage.getItem('user'));\n    console.log(\"🔐 Logged user from localStorage:\", loggedUser);\n    setLoggedUser(loggedUser);\n  }, []);\n\n  // On component mount, fetch the list of employees associated with the logged-in user's company:\n  // - Retrieve the logged-in user from localStorage.\n  // - Extract the company ID and validate it.\n  // - Fetch all users from the database.\n  // - Filter users to include only those who belong to the current company.\n  // - Update the local employee list state.\n  // - Handle loading and error states appropriately.\n  useEffect(() => {\n    const fetchEmployees = async () => {\n      try {\n        var _loggedUser$company;\n        const loggedUser = JSON.parse(localStorage.getItem('user'));\n        setLoggedUser(loggedUser);\n        const companyId = loggedUser === null || loggedUser === void 0 ? void 0 : (_loggedUser$company = loggedUser.company) === null || _loggedUser$company === void 0 ? void 0 : _loggedUser$company.id;\n        if (!companyId) {\n          setError('No company information found.');\n          return;\n        }\n        const data = await getUsers();\n        const usersWithIds = data ? Object.entries(data).map(([id, user]) => ({\n          id,\n          ...user\n        })) : [];\n        const filteredEmployees = usersWithIds.filter(user => {\n          var _user$companyIds;\n          return (_user$companyIds = user.companyIds) === null || _user$companyIds === void 0 ? void 0 : _user$companyIds.some(company => company.companyId === companyId);\n        });\n        setEmployees(filteredEmployees);\n      } catch (err) {\n        setError('Failed to fetch employees.');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchEmployees();\n  }, []);\n\n  // Open the confirmation modal for deleting an employee.\n  // Stores the selected employee in state for later use.\n  const openConfirmDeleteModal = employee => {\n    setEmployeeToDelete(employee);\n    setIsConfirmDeleteModalOpen(true);\n  };\n\n  // Close the confirmation modal and clear the selected employee.\n  const closeConfirmDeleteModal = () => {\n    setIsConfirmDeleteModalOpen(false);\n    setEmployeeToDelete(null);\n  };\n\n  // Handle confirmed deletion of an employee:\n  // - Validate company information.\n  // - Remove the employee from the user and company records.\n  // - Update the UI to reflect the deletion.\n  // - Display success or error notifications.\n  const handleDeleteConfirmed = async () => {\n    if (!employeeToDelete) return;\n    try {\n      var _loggedUser$company2;\n      const companyId = loggedUser === null || loggedUser === void 0 ? void 0 : (_loggedUser$company2 = loggedUser.company) === null || _loggedUser$company2 === void 0 ? void 0 : _loggedUser$company2.id;\n      if (!companyId) {\n        toast.error('No company information found. Please try again.');\n        return;\n      }\n      await removeCompanyFromUser(employeeToDelete.id, companyId);\n      await removeUserFromCompany(companyId, employeeToDelete.id);\n      setEmployees(employees.filter(employee => employee.id !== employeeToDelete.id));\n      toast.success('Employee deleted successfully!');\n    } catch (err) {\n      toast.error('Failed to delete employee.');\n      console.error(err);\n    } finally {\n      closeConfirmDeleteModal();\n    }\n  };\n\n  // Handle input changes in the \"Add New Employee\" form.\n  // Updates the corresponding field in the newEmployee state.\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewEmployee(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  // Handle submission of the \"Add New Employee\" form:\n  // - Prevent default form submission.\n  // - Check for valid company information.\n  // - Check if a user with the given email already exists:\n  //     - If yes, associate them with the current company.\n  //     - If not, create a new user and associate them with the company.\n  // - Update the employees list in the UI accordingly.\n  // - Show success or error toasts.\n  // - Reset the form and close the modal after successful addition.\n  const handleAddEmployee = async e => {\n    e.preventDefault();\n    try {\n      const company = loggedUser === null || loggedUser === void 0 ? void 0 : loggedUser.company;\n      if (!company) {\n        toast.error('No company information found. Please try again.');\n        return;\n      }\n\n      // 1. המרת קובץ תמונה ל־Base64 (data URL)\n      let photoDataUrl = '';\n      if (newEmployee.photoFile) {\n        photoDataUrl = await fileToBase64(newEmployee.photoFile);\n      }\n      const allUsers = await getUsers();\n      const existingUser = Object.values(allUsers).find(user => user.email === newEmployee.email);\n      if (existingUser) {\n        await updateUserCompanies(existingUser, company);\n        await addEmployeeToCompany(company.id, existingUser.id);\n        const isUserInUI = employees.some(employee => employee.id === existingUser.id);\n        if (!isUserInUI) {\n          setEmployees(prev => [...prev, existingUser]);\n        }\n        toast.info('User already exists, added to the company successfully.');\n      } else {\n        // 2. הוספת משתמש כולל תמונה\n        const addedEmployee = await addUser({\n          ...newEmployee,\n          photoData: photoDataUrl // ⬅️ התמונה בבסיס הנתונים\n        });\n        await updateUserCompanies(addedEmployee, company);\n        await addEmployeeToCompany(company.id, addedEmployee.id);\n        setEmployees(prev => [...prev, {\n          id: addedEmployee.id,\n          ...addedEmployee\n        }]);\n        toast.success('New user added successfully!');\n      }\n\n      // 3. איפוס הטופס\n      setNewEmployee({\n        name: '',\n        email: '',\n        phone: '',\n        role: 'employee',\n        password: '',\n        photoFile: null\n      });\n      setIsModalOpen(false);\n    } catch (err) {\n      toast.error('Failed to add employee.');\n      console.error(err);\n    }\n  };\n\n  // Toggle the expanded/collapsed state of an employee card by its ID.\n  // If the card is currently open, it will be closed, and vice versa.\n  const toggleCard = id => {\n    setOpenCards(prev => ({\n      ...prev,\n      [id]: !prev[id]\n    }));\n  };\n  const handleEditClick = employee => {\n    setEditEmployee(employee); // הגדרת העובד הנבחר לעריכה\n    setIsEditModalOpen(true); // פתיחת המודל\n  };\n  const handleLoadEmployeesFromJSON = async () => {\n    try {\n      if (!loggedUser || !loggedUser.company) {\n        toast.error('No company information found. Please try again.');\n        return;\n      }\n      setIsProcessing(true); // הפעלת ה-Loader\n\n      const companyId = loggedUser.company.id;\n      const allUsers = await getUsers();\n      const newEmployees = employeesData.filter(employee => {\n        var _existingUser$company;\n        const existingUser = Object.values(allUsers).find(user => user.email === employee.email);\n        if (!existingUser) {\n          return true; // משתמש לא קיים כלל - נוסיף אותו\n        }\n        const isInCompany = (_existingUser$company = existingUser.companyIds) === null || _existingUser$company === void 0 ? void 0 : _existingUser$company.some(company => company.companyId === companyId);\n        return !isInCompany; // אם הוא לא משויך לחברה, נוסיף אותו שוב\n      });\n      for (const employee of newEmployees) {\n        const existingUser = Object.values(allUsers).find(user => user.email === employee.email);\n        if (existingUser) {\n          await updateUserCompanies(existingUser, loggedUser.company);\n          await addEmployeeToCompany(companyId, existingUser.id);\n        } else {\n          const addedEmployee = await addUser(employee);\n          await updateUserCompanies(addedEmployee, loggedUser.company);\n          await addEmployeeToCompany(companyId, addedEmployee.id);\n        }\n      }\n      const updatedUsers = await getUsers();\n      const usersWithIds = Object.entries(updatedUsers).map(([id, user]) => ({\n        id,\n        ...user\n      }));\n      const filteredEmployees = usersWithIds.filter(user => {\n        var _user$companyIds2;\n        return (_user$companyIds2 = user.companyIds) === null || _user$companyIds2 === void 0 ? void 0 : _user$companyIds2.some(company => company.companyId === companyId);\n      });\n      setEmployees(filteredEmployees);\n      toast.success(`${newEmployees.length} employees added successfully!`);\n    } catch (error) {\n      toast.error('Failed to load employees from JSON.');\n      console.error(error);\n    } finally {\n      setIsProcessing(false); // כיבוי ה-Loader\n    }\n  };\n\n  // Delete all non-admin employees from the current company:\n  // - Validate that the logged-in user and company info exist.\n  // - Show a loader while processing.\n  // - Filter out all employees who are not admins.\n  // - For each employee, remove their association with the company both in user and company records.\n  // - Update the UI to show only admins.\n  // - Display appropriate success or error messages.\n  const handleDeleteAllEmployees = async () => {\n    try {\n      if (!loggedUser || !loggedUser.company) {\n        toast.error('No company information found. Please try again.');\n        return;\n      }\n      setIsProcessing(true); // הפעלת ה-Loader\n\n      const companyId = loggedUser.company.id;\n      const employeesToDelete = employees.filter(employee => employee.role !== 'admin');\n      if (employeesToDelete.length === 0) {\n        toast.info('No employees to delete.');\n        return;\n      }\n      for (const employee of employeesToDelete) {\n        await removeCompanyFromUser(employee.id, companyId);\n        await removeUserFromCompany(companyId, employee.id);\n      }\n      setEmployees(employees.filter(employee => employee.role === 'admin'));\n      toast.success(`${employeesToDelete.length} employees deleted successfully!`);\n    } catch (err) {\n      toast.error('Failed to delete employees.');\n      console.error(err);\n    } finally {\n      setIsProcessing(false); // כיבוי ה-Loader\n    }\n  };\n  const filteredEmployees = employees.filter(employee => {\n    return (employee.name.toLowerCase().startsWith(searchQuery.toLowerCase()) || employee.email.toLowerCase().startsWith(searchQuery.toLowerCase())) && (filterRole === 'all' || employee.role === filterRole);\n  });\n\n  // Render the EmployeesScreen UI:\n  // - Navbar at the top with a placeholder to maintain layout spacing.\n  // - A search bar and role filter for filtering employees by name/email and role.\n  // - Conditional rendering based on loading/error state:\n  //     - If loading: show loading message.\n  //     - If error: show error message.\n  //     - Else: display a grid of employee cards, each toggleable to show details (email, phone, role),\n  //       with Edit/Delete options depending on role.\n  // - Action buttons below the list for:\n  //     - Adding a new employee via form modal.\n  //     - Loading multiple employees from a JSON file.\n  //     - Deleting all non-admin employees.\n  // - Modals for:\n  //     - Confirming deletion of a single employee.\n  //     - Adding a new employee (form).\n  //     - Editing an existing employee (form).\n  // - Toast notifications container at the bottom for success/error messages.\n  return /*#__PURE__*/_jsxDEV(BackgroundWrapper, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navbar-placeholder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"employees-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Employees\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Search by name or email...\",\n            value: searchQuery,\n            onChange: e => setSearchQuery(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: filterRole,\n            onChange: e => setFilterRole(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"all\",\n              children: \"All Roles\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"employee\",\n              children: \"Employee\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 368,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"admin\",\n              children: \"Admin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 369,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 21\n        }, this), isLoading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 25\n        }, this) : error ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"employees-cards\",\n          children: filteredEmployees.map(employee => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `employee-card ${openCards[employee.id] ? 'open' : 'closed'}`,\n            onClick: () => toggleCard(employee.id),\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: employee.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 386,\n              columnNumber: 37\n            }, this), openCards[employee.id] && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"employee-details-horizontal\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: employee.photoData || '/images/Profile.jpeg',\n                alt: `${employee.name}'s profile`,\n                className: \"employee-photo-horizontal\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 389,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"employee-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Email: \", employee.email]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 396,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Phone: \", employee.phone]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 397,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Role: \", employee.role]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 398,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"employee-actions\",\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"action-button edit\",\n                    onClick: e => {\n                      e.stopPropagation();\n                      handleEditClick(employee);\n                    },\n                    children: \"Edit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 400,\n                    columnNumber: 53\n                  }, this), employee.role !== 'admin' && /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"action-button delete\",\n                    onClick: e => {\n                      e.stopPropagation();\n                      openConfirmDeleteModal(employee);\n                    },\n                    children: \"Delete\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 410,\n                    columnNumber: 57\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 399,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 395,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 388,\n              columnNumber: 41\n            }, this)]\n          }, employee.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 25\n        }, this), isProcessing && /*#__PURE__*/_jsxDEV(ThreeDots, {\n          height: \"50\",\n          width: \"50\",\n          radius: \"9\",\n          color: \"#3498db\",\n          ariaLabel: \"processing\",\n          wrapperStyle: {\n            display: 'flex',\n            justifyContent: 'center',\n            marginTop: '20px'\n          },\n          visible: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"toggle-form-button\",\n          onClick: () => setIsModalOpen(true),\n          children: \"Add New Employee\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"toggle-form-button\",\n          onClick: () => setIsNotificationModalOpen(true),\n          children: \"Send Notification\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"toggle-form-button\",\n          onClick: handleLoadEmployeesFromJSON,\n          children: \"Add Employees from JSON\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 458,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"toggle-form-button delete-all\",\n          onClick: handleDeleteAllEmployees,\n          children: \"Delete All Non-Admin Employees\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 461,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal, {\n          isOpen: isNotificationModalOpen,\n          onRequestClose: () => setIsNotificationModalOpen(false),\n          className: \"modal\",\n          overlayClassName: \"modal-overlay\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Send Notification to Employees\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 473,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"addOrEdit-employee-form notification-form\",\n            onSubmit: async e => {\n              e.preventDefault();\n              try {\n                var _loggedUser$company3;\n                const companyId = loggedUser === null || loggedUser === void 0 ? void 0 : (_loggedUser$company3 = loggedUser.company) === null || _loggedUser$company3 === void 0 ? void 0 : _loggedUser$company3.id;\n                const link = '/schedule';\n                for (const userId of selectedNotificationRecipients) {\n                  await sendNotification(companyId, userId, notificationMessage.trim(), link);\n                }\n                toast.success('Notifications sent!');\n                setIsNotificationModalOpen(false);\n                setSelectedNotificationRecipients([]);\n                setNotificationMessage('');\n              } catch (error) {\n                toast.error('Failed to send notifications.');\n                console.error(error);\n              }\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Select Recipients:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 497,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"select-all-checkbox\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: employees.filter(emp => emp.role !== 'admin').every(emp => selectedNotificationRecipients.includes(emp.id)),\n                onChange: e => {\n                  const isChecked = e.target.checked;\n                  const nonAdminIds = employees.filter(emp => emp.role !== 'admin').map(emp => emp.id);\n                  setSelectedNotificationRecipients(isChecked ? nonAdminIds : []);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 500,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Select All Employees\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 513,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 499,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"employee-checkboxes\",\n              children: employees.filter(emp => emp.role !== 'admin').map(emp => /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  checked: selectedNotificationRecipients.includes(emp.id),\n                  onChange: e => {\n                    if (e.target.checked) {\n                      setSelectedNotificationRecipients(prev => [...prev, emp.id]);\n                    } else {\n                      setSelectedNotificationRecipients(prev => prev.filter(id => id !== emp.id));\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 521,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    marginLeft: '6px'\n                  },\n                  children: emp.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 534,\n                  columnNumber: 45\n                }, this)]\n              }, emp.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 520,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 516,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Message:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 539,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              value: notificationMessage,\n              onChange: e => setNotificationMessage(e.target.value),\n              placeholder: \"Enter your message...\",\n              rows: 4\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 540,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"modal-buttons\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"confirm-button\",\n                disabled: selectedNotificationRecipients.length === 0 || !notificationMessage.trim(),\n                children: \"Send\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 548,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"cancel-button\",\n                onClick: () => setIsNotificationModalOpen(false),\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 555,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 547,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 475,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 467,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal, {\n          isOpen: isConfirmDeleteModalOpen,\n          onRequestClose: closeConfirmDeleteModal,\n          className: \"confirm-delete-modal\",\n          overlayClassName: \"modal-overlay\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Confirm Employee Deletion\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 574,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Are you sure you want to remove \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: employeeToDelete === null || employeeToDelete === void 0 ? void 0 : employeeToDelete.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 576,\n              columnNumber: 61\n            }, this), \" from the company?\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 575,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"confirm-button\",\n              onClick: handleDeleteConfirmed,\n              children: \"Confirm\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 579,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"cancel-button\",\n              onClick: closeConfirmDeleteModal,\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 582,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 578,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 568,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal, {\n          isOpen: isModalOpen,\n          onRequestClose: () => setIsModalOpen(false),\n          className: \"modal\",\n          overlayClassName: \"modal-overlay\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Add New Employee\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 595,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"addOrEdit-employee-form\",\n            onSubmit: handleAddEmployee,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 597,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"name\",\n              value: newEmployee.name,\n              onChange: handleChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 598,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Email:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 605,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              name: \"email\",\n              value: newEmployee.email,\n              onChange: handleChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 606,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Phone:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 613,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"phone\",\n              value: newEmployee.phone,\n              onChange: handleChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 614,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Password:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 621,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              name: \"password\",\n              value: newEmployee.password,\n              onChange: handleChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 622,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Role:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 629,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              name: \"role\",\n              value: newEmployee.role,\n              onChange: handleChange,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"employee\",\n                children: \"Employee\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 631,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"admin\",\n                children: \"Admin\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 632,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 630,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Profile Photo:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 634,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              accept: \"image/*\",\n              onChange: e => setNewEmployee(prev => ({\n                ...prev,\n                photoFile: e.target.files[0]\n              }))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 635,\n              columnNumber: 29\n            }, this), newEmployee.photoFile && /*#__PURE__*/_jsxDEV(\"img\", {\n              src: URL.createObjectURL(newEmployee.photoFile),\n              alt: \"Preview\",\n              style: {\n                width: '100px',\n                height: '100px',\n                objectFit: 'cover',\n                borderRadius: '8px',\n                margin: '10px 0'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 647,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"Add Employee\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 661,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => setIsModalOpen(false),\n              className: \"cancel-button\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 662,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 596,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 589,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal, {\n          isOpen: isEditModalOpen,\n          onRequestClose: () => setIsEditModalOpen(false),\n          className: \"modal\",\n          overlayClassName: \"modal-overlay\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Edit Employee\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 677,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"addOrEdit-employee-form\",\n            onSubmit: async e => {\n              e.preventDefault();\n              try {\n                if (editEmployee && editEmployee.id) {\n                  // המרת תמונה חדשה ל־Base64, אם קיימת\n                  let updatedPhotoData = editEmployee.photoData || '';\n                  if (editEmployee.photoFile) {\n                    updatedPhotoData = await fileToBase64(editEmployee.photoFile);\n                  }\n\n                  // קריאה ל-updateUser עם הפרטים המעודכנים כולל תמונה\n                  const updatedEmployee = await updateUser(editEmployee.id, {\n                    name: editEmployee.name,\n                    email: editEmployee.email,\n                    phone: editEmployee.phone,\n                    role: editEmployee.role,\n                    photoData: updatedPhotoData\n                  });\n\n                  // עדכון רשימת העובדים ב-UI\n                  setEmployees(prevEmployees => prevEmployees.map(employee => employee.id === updatedEmployee.id ? updatedEmployee : employee));\n                  toast.success('Employee updated successfully!');\n                }\n                setIsEditModalOpen(false); // סגירת המודל\n              } catch (err) {\n                toast.error('Failed to update employee. Please try again.');\n                console.error(err);\n              }\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 718,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"name\",\n              value: (editEmployee === null || editEmployee === void 0 ? void 0 : editEmployee.name) || '',\n              onChange: e => setEditEmployee(prev => ({\n                ...prev,\n                name: e.target.value\n              })),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 719,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Email:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 728,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              name: \"email\",\n              value: (editEmployee === null || editEmployee === void 0 ? void 0 : editEmployee.email) || '',\n              onChange: e => setEditEmployee(prev => ({\n                ...prev,\n                email: e.target.value\n              })),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 729,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Phone:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 738,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"phone\",\n              value: (editEmployee === null || editEmployee === void 0 ? void 0 : editEmployee.phone) || '',\n              onChange: e => setEditEmployee(prev => ({\n                ...prev,\n                phone: e.target.value\n              })),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 739,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Role:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 748,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              name: \"role\",\n              value: (editEmployee === null || editEmployee === void 0 ? void 0 : editEmployee.role) || '',\n              onChange: e => setEditEmployee(prev => ({\n                ...prev,\n                role: e.target.value\n              })),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"employee\",\n                children: \"Employee\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 756,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"admin\",\n                children: \"Admin\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 757,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 749,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Profile Photo:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 759,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              accept: \"image/*\",\n              onChange: e => setEditEmployee(prev => ({\n                ...prev,\n                photoFile: e.target.files[0]\n              }))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 760,\n              columnNumber: 29\n            }, this), (editEmployee === null || editEmployee === void 0 ? void 0 : editEmployee.photoFile) && /*#__PURE__*/_jsxDEV(\"img\", {\n              src: URL.createObjectURL(editEmployee.photoFile),\n              alt: \"Preview\",\n              style: {\n                width: '100px',\n                height: '100px',\n                objectFit: 'cover',\n                borderRadius: '8px',\n                margin: '10px 0'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 772,\n              columnNumber: 33\n            }, this), !(editEmployee !== null && editEmployee !== void 0 && editEmployee.photoFile) && (editEmployee === null || editEmployee === void 0 ? void 0 : editEmployee.photoData) && /*#__PURE__*/_jsxDEV(\"img\", {\n              src: editEmployee.photoData,\n              alt: \"Current\",\n              style: {\n                width: '100px',\n                height: '100px',\n                objectFit: 'cover',\n                borderRadius: '8px',\n                margin: '10px 0'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 786,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"Save Changes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 799,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => setIsEditModalOpen(false),\n              className: \"cancel-button\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 800,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 678,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 671,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 811,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 351,\n    columnNumber: 9\n  }, this);\n}\n_s(EmployeesScreen, \"8WEL6glD8EGCEI9jK6unqFsPKnM=\");\n_c = EmployeesScreen;\nexport default EmployeesScreen;\nvar _c;\n$RefreshReg$(_c, \"EmployeesScreen\");","map":{"version":3,"names":["React","useState","useEffect","Modal","toast","ToastContainer","ThreeDots","Navbar","Loader","BackgroundWrapper","employeesData","getUsers","removeCompanyFromUser","addUser","updateUserCompanies","updateUser","removeUserFromCompany","addEmployeeToCompany","sendNotification","fileToBase64","EditProfileModal","jsxDEV","_jsxDEV","setAppElement","EmployeesScreen","_s","employees","setEmployees","newEmployee","setNewEmployee","name","email","phone","role","password","photoFile","isLoading","setIsLoading","isProcessing","setIsProcessing","error","setError","loggedUser","setLoggedUser","isModalOpen","setIsModalOpen","isEditModalOpen","setIsEditModalOpen","isConfirmDeleteModalOpen","setIsConfirmDeleteModalOpen","editEmployee","setEditEmployee","employeeToDelete","setEmployeeToDelete","openCards","setOpenCards","searchQuery","setSearchQuery","filterRole","setFilterRole","isNotificationModalOpen","setIsNotificationModalOpen","selectedNotificationRecipients","setSelectedNotificationRecipients","notificationMessage","setNotificationMessage","JSON","parse","localStorage","getItem","console","log","fetchEmployees","_loggedUser$company","companyId","company","id","data","usersWithIds","Object","entries","map","user","filteredEmployees","filter","_user$companyIds","companyIds","some","err","openConfirmDeleteModal","employee","closeConfirmDeleteModal","handleDeleteConfirmed","_loggedUser$company2","success","handleChange","e","value","target","prev","handleAddEmployee","preventDefault","photoDataUrl","allUsers","existingUser","values","find","isUserInUI","info","addedEmployee","photoData","toggleCard","handleEditClick","handleLoadEmployeesFromJSON","newEmployees","_existingUser$company","isInCompany","updatedUsers","_user$companyIds2","length","handleDeleteAllEmployees","employeesToDelete","toLowerCase","startsWith","children","fileName","_jsxFileName","lineNumber","columnNumber","className","type","placeholder","onChange","onClick","src","alt","stopPropagation","height","width","radius","color","ariaLabel","wrapperStyle","display","justifyContent","marginTop","visible","isOpen","onRequestClose","overlayClassName","onSubmit","_loggedUser$company3","link","userId","trim","checked","emp","every","includes","isChecked","nonAdminIds","style","marginLeft","rows","disabled","required","accept","files","URL","createObjectURL","objectFit","borderRadius","margin","updatedPhotoData","updatedEmployee","prevEmployees","_c","$RefreshReg$"],"sources":["/Users/dorlevi/IdeaProjects/newShiftWise/client/src/components/EmployeesScreen.js"],"sourcesContent":["// React & state\nimport React, { useState, useEffect } from 'react';\n\n// UI Components & Libraries\nimport Modal from 'react-modal';\nimport { toast, ToastContainer } from 'react-toastify';\nimport { ThreeDots } from 'react-loader-spinner';\nimport Navbar from '../components/Navbar';\nimport Loader from './Loader';\nimport BackgroundWrapper from './BackgroundWrapper';\n\n\n// Styles\nimport 'react-toastify/dist/ReactToastify.css';\nimport '../styles/EmployeesScreen.css';\nimport '../styles/Navbar.css';\n\n// Data\nimport employeesData from '../data/emps.json'; // יש לוודא שהקובץ נמצא בתיקייה data\n\n// Services\nimport { getUsers, removeCompanyFromUser, addUser, updateUserCompanies, updateUser } from '../services/userService';\nimport { removeUserFromCompany, addEmployeeToCompany } from '../services/companyService';\n\nimport { sendNotification } from '../services/notificationService';\nimport { fileToBase64 } from '../utils/fileUtils';\nimport EditProfileModal from '../components/EditProfileModal';\n\nModal.setAppElement('#root');\n\nfunction EmployeesScreen() {\n\n    // Employees data\n    const [employees, setEmployees] = useState([]);\n\n    // Form data\n    const [newEmployee, setNewEmployee] = useState({\n        name: '', email: '', phone: '', role: 'employee', password: '', photoFile: null\n    });\n\n    // App state\n    const [isLoading, setIsLoading] = useState(true);\n    const [isProcessing, setIsProcessing] = useState(false);\n    const [error, setError] = useState('');\n    const [loggedUser, setLoggedUser] = useState(null);\n\n    // Modals\n    const [isModalOpen, setIsModalOpen] = useState(false);\n    const [isEditModalOpen, setIsEditModalOpen] = useState(false);\n    const [isConfirmDeleteModalOpen, setIsConfirmDeleteModalOpen] = useState(false);\n\n    // Edit/delete handlers\n    const [editEmployee, setEditEmployee] = useState(null);\n    const [employeeToDelete, setEmployeeToDelete] = useState(null);\n\n    // UI helpers\n    const [openCards, setOpenCards] = useState({});\n    const [searchQuery, setSearchQuery] = useState('');\n    const [filterRole, setFilterRole] = useState('all');\n\n    const [isNotificationModalOpen, setIsNotificationModalOpen] = useState(false);\n    const [selectedNotificationRecipients, setSelectedNotificationRecipients] = useState([]);\n    const [notificationMessage, setNotificationMessage] = useState('');\n\n    useEffect(() => {\n        const loggedUser = JSON.parse(localStorage.getItem('user'));\n        console.log(\"🔐 Logged user from localStorage:\", loggedUser);\n        setLoggedUser(loggedUser);\n    }, []);\n\n\n    // On component mount, fetch the list of employees associated with the logged-in user's company:\n    // - Retrieve the logged-in user from localStorage.\n    // - Extract the company ID and validate it.\n    // - Fetch all users from the database.\n    // - Filter users to include only those who belong to the current company.\n    // - Update the local employee list state.\n    // - Handle loading and error states appropriately.\n    useEffect(() => {\n        const fetchEmployees = async () => {\n            try {\n                const loggedUser = JSON.parse(localStorage.getItem('user'));\n                setLoggedUser(loggedUser);\n                const companyId = loggedUser?.company?.id;\n\n                if (!companyId) {\n                    setError('No company information found.');\n                    return;\n                }\n\n                const data = await getUsers();\n                const usersWithIds = data ? Object.entries(data).map(([id, user]) => ({ id, ...user })) : [];\n                const filteredEmployees = usersWithIds.filter((user) =>\n                    user.companyIds?.some((company) => company.companyId === companyId)\n                );\n\n                setEmployees(filteredEmployees);\n            } catch (err) {\n                setError('Failed to fetch employees.');\n            } finally {\n                setIsLoading(false);\n            }\n        };\n\n        fetchEmployees();\n    }, []);\n\n    // Open the confirmation modal for deleting an employee.\n    // Stores the selected employee in state for later use.\n    const openConfirmDeleteModal = (employee) => {\n        setEmployeeToDelete(employee);\n        setIsConfirmDeleteModalOpen(true);\n    };\n\n    // Close the confirmation modal and clear the selected employee.\n    const closeConfirmDeleteModal = () => {\n        setIsConfirmDeleteModalOpen(false);\n        setEmployeeToDelete(null);\n    };\n\n    // Handle confirmed deletion of an employee:\n    // - Validate company information.\n    // - Remove the employee from the user and company records.\n    // - Update the UI to reflect the deletion.\n    // - Display success or error notifications.\n    const handleDeleteConfirmed = async () => {\n        if (!employeeToDelete) return;\n        try {\n            const companyId = loggedUser?.company?.id;\n\n            if (!companyId) {\n                toast.error('No company information found. Please try again.');\n                return;\n            }\n\n            await removeCompanyFromUser(employeeToDelete.id, companyId);\n            await removeUserFromCompany(companyId, employeeToDelete.id);\n\n            setEmployees(employees.filter((employee) => employee.id !== employeeToDelete.id));\n            toast.success('Employee deleted successfully!');\n        } catch (err) {\n            toast.error('Failed to delete employee.');\n            console.error(err);\n        } finally {\n            closeConfirmDeleteModal();\n        }\n    };\n\n    // Handle input changes in the \"Add New Employee\" form.\n    // Updates the corresponding field in the newEmployee state.\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        setNewEmployee((prev) => ({ ...prev, [name]: value }));\n    };\n\n    // Handle submission of the \"Add New Employee\" form:\n    // - Prevent default form submission.\n    // - Check for valid company information.\n    // - Check if a user with the given email already exists:\n    //     - If yes, associate them with the current company.\n    //     - If not, create a new user and associate them with the company.\n    // - Update the employees list in the UI accordingly.\n    // - Show success or error toasts.\n    // - Reset the form and close the modal after successful addition.\n    const handleAddEmployee = async (e) => {\n        e.preventDefault();\n        try {\n            const company = loggedUser?.company;\n\n            if (!company) {\n                toast.error('No company information found. Please try again.');\n                return;\n            }\n\n            // 1. המרת קובץ תמונה ל־Base64 (data URL)\n            let photoDataUrl = '';\n            if (newEmployee.photoFile) {\n                photoDataUrl = await fileToBase64(newEmployee.photoFile);\n            }\n\n\n            const allUsers = await getUsers();\n            const existingUser = Object.values(allUsers).find((user) => user.email === newEmployee.email);\n\n            if (existingUser) {\n                await updateUserCompanies(existingUser, company);\n                await addEmployeeToCompany(company.id, existingUser.id);\n\n                const isUserInUI = employees.some((employee) => employee.id === existingUser.id);\n                if (!isUserInUI) {\n                    setEmployees((prev) => [...prev, existingUser]);\n                }\n\n                toast.info('User already exists, added to the company successfully.');\n            } else {\n                // 2. הוספת משתמש כולל תמונה\n                const addedEmployee = await addUser({\n                    ...newEmployee,\n                    photoData: photoDataUrl // ⬅️ התמונה בבסיס הנתונים\n                });\n\n                await updateUserCompanies(addedEmployee, company);\n                await addEmployeeToCompany(company.id, addedEmployee.id);\n\n                setEmployees((prev) => [...prev, { id: addedEmployee.id, ...addedEmployee }]);\n                toast.success('New user added successfully!');\n            }\n\n            // 3. איפוס הטופס\n            setNewEmployee({ name: '', email: '', phone: '', role: 'employee', password: '', photoFile: null });\n            setIsModalOpen(false);\n        } catch (err) {\n            toast.error('Failed to add employee.');\n            console.error(err);\n        }\n    };\n\n\n    // Toggle the expanded/collapsed state of an employee card by its ID.\n    // If the card is currently open, it will be closed, and vice versa.\n    const toggleCard = (id) => {\n        setOpenCards((prev) => ({\n            ...prev,\n            [id]: !prev[id],\n        }));\n    };\n\n    const handleEditClick = (employee) => {\n        setEditEmployee(employee); // הגדרת העובד הנבחר לעריכה\n        setIsEditModalOpen(true); // פתיחת המודל\n    };\n\n\n    const handleLoadEmployeesFromJSON = async () => {\n        try {\n            if (!loggedUser || !loggedUser.company) {\n                toast.error('No company information found. Please try again.');\n                return;\n            }\n\n            setIsProcessing(true); // הפעלת ה-Loader\n\n            const companyId = loggedUser.company.id;\n            const allUsers = await getUsers();\n\n            const newEmployees = employeesData.filter((employee) => {\n                const existingUser = Object.values(allUsers).find((user) => user.email === employee.email);\n\n                if (!existingUser) {\n                    return true; // משתמש לא קיים כלל - נוסיף אותו\n                }\n\n                const isInCompany = existingUser.companyIds?.some((company) => company.companyId === companyId);\n                return !isInCompany; // אם הוא לא משויך לחברה, נוסיף אותו שוב\n            });\n\n            for (const employee of newEmployees) {\n                const existingUser = Object.values(allUsers).find((user) => user.email === employee.email);\n\n                if (existingUser) {\n                    await updateUserCompanies(existingUser, loggedUser.company);\n                    await addEmployeeToCompany(companyId, existingUser.id);\n                } else {\n                    const addedEmployee = await addUser(employee);\n                    await updateUserCompanies(addedEmployee, loggedUser.company);\n                    await addEmployeeToCompany(companyId, addedEmployee.id);\n                }\n            }\n\n            const updatedUsers = await getUsers();\n            const usersWithIds = Object.entries(updatedUsers).map(([id, user]) => ({ id, ...user }));\n            const filteredEmployees = usersWithIds.filter((user) =>\n                user.companyIds?.some((company) => company.companyId === companyId)\n            );\n\n            setEmployees(filteredEmployees);\n            toast.success(`${newEmployees.length} employees added successfully!`);\n        } catch (error) {\n            toast.error('Failed to load employees from JSON.');\n            console.error(error);\n        } finally {\n            setIsProcessing(false); // כיבוי ה-Loader\n        }\n    };\n\n    // Delete all non-admin employees from the current company:\n    // - Validate that the logged-in user and company info exist.\n    // - Show a loader while processing.\n    // - Filter out all employees who are not admins.\n    // - For each employee, remove their association with the company both in user and company records.\n    // - Update the UI to show only admins.\n    // - Display appropriate success or error messages.\n    const handleDeleteAllEmployees = async () => {\n        try {\n            if (!loggedUser || !loggedUser.company) {\n                toast.error('No company information found. Please try again.');\n                return;\n            }\n\n            setIsProcessing(true); // הפעלת ה-Loader\n\n            const companyId = loggedUser.company.id;\n            const employeesToDelete = employees.filter(employee => employee.role !== 'admin');\n\n            if (employeesToDelete.length === 0) {\n                toast.info('No employees to delete.');\n                return;\n            }\n\n            for (const employee of employeesToDelete) {\n                await removeCompanyFromUser(employee.id, companyId);\n                await removeUserFromCompany(companyId, employee.id);\n            }\n\n            setEmployees(employees.filter(employee => employee.role === 'admin'));\n            toast.success(`${employeesToDelete.length} employees deleted successfully!`);\n        } catch (err) {\n            toast.error('Failed to delete employees.');\n            console.error(err);\n        } finally {\n            setIsProcessing(false); // כיבוי ה-Loader\n        }\n    };\n\n    const filteredEmployees = employees.filter((employee) => {\n        return (\n            (employee.name.toLowerCase().startsWith(searchQuery.toLowerCase()) ||\n                employee.email.toLowerCase().startsWith(searchQuery.toLowerCase())) &&\n            (filterRole === 'all' || employee.role === filterRole)\n        );\n    });\n\n    // Render the EmployeesScreen UI:\n    // - Navbar at the top with a placeholder to maintain layout spacing.\n    // - A search bar and role filter for filtering employees by name/email and role.\n    // - Conditional rendering based on loading/error state:\n    //     - If loading: show loading message.\n    //     - If error: show error message.\n    //     - Else: display a grid of employee cards, each toggleable to show details (email, phone, role),\n    //       with Edit/Delete options depending on role.\n    // - Action buttons below the list for:\n    //     - Adding a new employee via form modal.\n    //     - Loading multiple employees from a JSON file.\n    //     - Deleting all non-admin employees.\n    // - Modals for:\n    //     - Confirming deletion of a single employee.\n    //     - Adding a new employee (form).\n    //     - Editing an existing employee (form).\n    // - Toast notifications container at the bottom for success/error messages.\n    return (\n        <BackgroundWrapper >\n\n            <div>\n                <Navbar />\n                <div className=\"navbar-placeholder\"></div>\n                <div className=\"employees-container\">\n                    <h1>Employees</h1>\n\n                    <div className=\"search-container\">\n                        <input\n                            type=\"text\"\n                            placeholder=\"Search by name or email...\"\n                            value={searchQuery}\n                            onChange={(e) => setSearchQuery(e.target.value)}\n                        />\n                        <select value={filterRole} onChange={(e) => setFilterRole(e.target.value)}>\n                            <option value=\"all\">All Roles</option>\n                            <option value=\"employee\">Employee</option>\n                            <option value=\"admin\">Admin</option>\n                        </select>\n                    </div>\n\n                    {isLoading ? (\n                        <Loader />\n                    ) : error ? (\n                        <p className=\"error\">{error}</p>\n                    ) : (\n                        <div className=\"employees-cards\">\n                            {filteredEmployees.map((employee) => (\n\n                                <div\n                                    key={employee.id}\n                                    className={`employee-card ${openCards[employee.id] ? 'open' : 'closed'}`}\n                                    onClick={() => toggleCard(employee.id)}\n                                >\n                                    <h3>{employee.name}</h3>\n                                    {openCards[employee.id] && (\n                                        <div className=\"employee-details-horizontal\">\n                                            <img\n                                                src={employee.photoData || '/images/Profile.jpeg'}\n                                                alt={`${employee.name}'s profile`}\n                                                className=\"employee-photo-horizontal\"\n                                            />\n\n                                            <div className=\"employee-info\">\n                                                <p>Email: {employee.email}</p>\n                                                <p>Phone: {employee.phone}</p>\n                                                <p>Role: {employee.role}</p>\n                                                <div className=\"employee-actions\">\n                                                    <button\n                                                        className=\"action-button edit\"\n                                                        onClick={(e) => {\n                                                            e.stopPropagation();\n                                                            handleEditClick(employee);\n                                                        }}\n                                                    >\n                                                        Edit\n                                                    </button>\n                                                    {employee.role !== 'admin' && (\n                                                        <button\n                                                            className=\"action-button delete\"\n                                                            onClick={(e) => {\n                                                                e.stopPropagation();\n                                                                openConfirmDeleteModal(employee);\n                                                            }}\n                                                        >\n                                                            Delete\n                                                        </button>\n                                                    )}\n                                                </div>\n                                            </div>\n                                        </div>\n\n                                    )}\n\n                                </div>\n                            ))}\n\n                        </div>\n                    )}\n\n                    {isProcessing && (\n                        <ThreeDots\n                            height=\"50\"\n                            width=\"50\"\n                            radius=\"9\"\n                            color=\"#3498db\"\n                            ariaLabel=\"processing\"\n                            wrapperStyle={{ display: 'flex', justifyContent: 'center', marginTop: '20px' }}\n                            visible={true}\n                        />\n                    )}\n\n                    <button\n                        className=\"toggle-form-button\"\n                        onClick={() => setIsModalOpen(true)}\n                    >\n                        Add New Employee\n                    </button>\n                    <button\n                        className=\"toggle-form-button\"\n                        onClick={() => setIsNotificationModalOpen(true)}\n                    >\n                        Send Notification\n                    </button>\n\n                    {/* 🔹 כפתור חדש להוספת עובדים מקובץ JSON */}\n                    <button className=\"toggle-form-button\" onClick={handleLoadEmployeesFromJSON}>\n                        Add Employees from JSON\n                    </button>\n                    <button\n                        className=\"toggle-form-button delete-all\"\n                        onClick={handleDeleteAllEmployees}\n                    >\n                        Delete All Non-Admin Employees\n                    </button>\n                    <Modal\n                        isOpen={isNotificationModalOpen}\n                        onRequestClose={() => setIsNotificationModalOpen(false)}\n                        className=\"modal\"\n                        overlayClassName=\"modal-overlay\"\n                    >\n                        <h3>Send Notification to Employees</h3>\n\n                        <form\n                            className=\"addOrEdit-employee-form notification-form\"\n                            onSubmit={async (e) => {\n                                e.preventDefault();\n                                try {\n                                    const companyId = loggedUser?.company?.id;\n                                    const link = '/schedule';\n\n                                    for (const userId of selectedNotificationRecipients) {\n                                        await sendNotification(companyId, userId, notificationMessage.trim(), link);\n                                    }\n\n                                    toast.success('Notifications sent!');\n                                    setIsNotificationModalOpen(false);\n                                    setSelectedNotificationRecipients([]);\n                                    setNotificationMessage('');\n                                } catch (error) {\n                                    toast.error('Failed to send notifications.');\n                                    console.error(error);\n                                }\n                            }}\n                        >\n                            <label>Select Recipients:</label>\n\n                            <div className=\"select-all-checkbox\">\n                                <input\n                                    type=\"checkbox\"\n                                    checked={employees\n                                        .filter(emp => emp.role !== 'admin')\n                                        .every(emp => selectedNotificationRecipients.includes(emp.id))}\n                                    onChange={(e) => {\n                                        const isChecked = e.target.checked;\n                                        const nonAdminIds = employees\n                                            .filter(emp => emp.role !== 'admin')\n                                            .map(emp => emp.id);\n                                        setSelectedNotificationRecipients(isChecked ? nonAdminIds : []);\n                                    }}\n                                />\n                                <span>Select All Employees</span>\n                            </div>\n\n                            <div className=\"employee-checkboxes\">\n                                {employees\n                                    .filter(emp => emp.role !== 'admin')\n                                    .map(emp => (\n                                        <div key={emp.id}>\n                                            <input\n                                                type=\"checkbox\"\n                                                checked={selectedNotificationRecipients.includes(emp.id)}\n                                                onChange={(e) => {\n                                                    if (e.target.checked) {\n                                                        setSelectedNotificationRecipients(prev => [...prev, emp.id]);\n                                                    } else {\n                                                        setSelectedNotificationRecipients(prev =>\n                                                            prev.filter(id => id !== emp.id)\n                                                        );\n                                                    }\n                                                }}\n                                            />\n                                            <span style={{ marginLeft: '6px' }}>{emp.name}</span>\n                                        </div>\n                                    ))}\n                            </div>\n\n                            <label>Message:</label>\n                            <textarea\n                                value={notificationMessage}\n                                onChange={(e) => setNotificationMessage(e.target.value)}\n                                placeholder=\"Enter your message...\"\n                                rows={4}\n                            />\n\n                            <div className=\"modal-buttons\">\n                                <button\n                                    type=\"submit\"\n                                    className=\"confirm-button\"\n                                    disabled={selectedNotificationRecipients.length === 0 || !notificationMessage.trim()}\n                                >\n                                    Send\n                                </button>\n                                <button\n                                    type=\"button\"\n                                    className=\"cancel-button\"\n                                    onClick={() => setIsNotificationModalOpen(false)}\n                                >\n                                    Cancel\n                                </button>\n                            </div>\n                        </form>\n                    </Modal>\n\n\n\n                    <Modal\n                        isOpen={isConfirmDeleteModalOpen}\n                        onRequestClose={closeConfirmDeleteModal}\n                        className=\"confirm-delete-modal\"\n                        overlayClassName=\"modal-overlay\"\n                    >\n                        <h2>Confirm Employee Deletion</h2>\n                        <p>\n                            Are you sure you want to remove <strong>{employeeToDelete?.name}</strong> from the company?\n                        </p>\n                        <div className=\"modal-buttons\">\n                            <button className=\"confirm-button\" onClick={handleDeleteConfirmed}>\n                                Confirm\n                            </button>\n                            <button className=\"cancel-button\" onClick={closeConfirmDeleteModal}>\n                                Cancel\n                            </button>\n                        </div>\n                    </Modal>\n\n\n                    <Modal\n                        isOpen={isModalOpen}\n                        onRequestClose={() => setIsModalOpen(false)}\n                        className=\"modal\"\n                        overlayClassName=\"modal-overlay\"\n                    >\n                        <h3>Add New Employee</h3>\n                        <form className=\"addOrEdit-employee-form\" onSubmit={handleAddEmployee}>\n                            <label>Name:</label>\n                            <input\n                                type=\"text\"\n                                name=\"name\"\n                                value={newEmployee.name}\n                                onChange={handleChange}\n                                required\n                            />\n                            <label>Email:</label>\n                            <input\n                                type=\"email\"\n                                name=\"email\"\n                                value={newEmployee.email}\n                                onChange={handleChange}\n                                required\n                            />\n                            <label>Phone:</label>\n                            <input\n                                type=\"text\"\n                                name=\"phone\"\n                                value={newEmployee.phone}\n                                onChange={handleChange}\n                                required\n                            />\n                            <label>Password:</label>\n                            <input\n                                type=\"password\"\n                                name=\"password\"\n                                value={newEmployee.password}\n                                onChange={handleChange}\n                                required\n                            />\n                            <label>Role:</label>\n                            <select name=\"role\" value={newEmployee.role} onChange={handleChange}>\n                                <option value=\"employee\">Employee</option>\n                                <option value=\"admin\">Admin</option>\n                            </select>\n                            <label>Profile Photo:</label>\n                            <input\n                                type=\"file\"\n                                accept=\"image/*\"\n                                onChange={(e) =>\n                                    setNewEmployee((prev) => ({\n                                        ...prev,\n                                        photoFile: e.target.files[0]\n                                    }))\n                                }\n                            />\n\n                            {newEmployee.photoFile && (\n                                <img\n                                    src={URL.createObjectURL(newEmployee.photoFile)}\n                                    alt=\"Preview\"\n                                    style={{\n                                        width: '100px',\n                                        height: '100px',\n                                        objectFit: 'cover',\n                                        borderRadius: '8px',\n                                        margin: '10px 0'\n                                    }}\n                                />\n                            )}\n\n\n                            <button type=\"submit\">Add Employee</button>\n                            <button\n                                type=\"button\"\n                                onClick={() => setIsModalOpen(false)}\n                                className=\"cancel-button\"\n                            >\n                                Cancel\n                            </button>\n                        </form>\n                    </Modal>\n                    <Modal\n                        isOpen={isEditModalOpen}\n                        onRequestClose={() => setIsEditModalOpen(false)}\n                        className=\"modal\"\n                        overlayClassName=\"modal-overlay\"\n                    >\n                        <h3>Edit Employee</h3>\n                        <form\n                            className=\"addOrEdit-employee-form\"\n                            onSubmit={async (e) => {\n                                e.preventDefault();\n                                try {\n                                    if (editEmployee && editEmployee.id) {\n                                        // המרת תמונה חדשה ל־Base64, אם קיימת\n                                        let updatedPhotoData = editEmployee.photoData || '';\n                                        if (editEmployee.photoFile) {\n                                            updatedPhotoData = await fileToBase64(editEmployee.photoFile);\n                                        }\n\n                                        // קריאה ל-updateUser עם הפרטים המעודכנים כולל תמונה\n                                        const updatedEmployee = await updateUser(editEmployee.id, {\n                                            name: editEmployee.name,\n                                            email: editEmployee.email,\n                                            phone: editEmployee.phone,\n                                            role: editEmployee.role,\n                                            photoData: updatedPhotoData,\n                                        });\n\n                                        // עדכון רשימת העובדים ב-UI\n                                        setEmployees((prevEmployees) =>\n                                            prevEmployees.map((employee) =>\n                                                employee.id === updatedEmployee.id ? updatedEmployee : employee\n                                            )\n                                        );\n\n                                        toast.success('Employee updated successfully!');\n                                    }\n\n                                    setIsEditModalOpen(false); // סגירת המודל\n                                } catch (err) {\n                                    toast.error('Failed to update employee. Please try again.');\n                                    console.error(err);\n                                }\n                            }}\n\n                        >\n\n                            <label>Name:</label>\n                            <input\n                                type=\"text\"\n                                name=\"name\"\n                                value={editEmployee?.name || ''}\n                                onChange={(e) =>\n                                    setEditEmployee((prev) => ({ ...prev, name: e.target.value }))\n                                }\n                                required\n                            />\n                            <label>Email:</label>\n                            <input\n                                type=\"email\"\n                                name=\"email\"\n                                value={editEmployee?.email || ''}\n                                onChange={(e) =>\n                                    setEditEmployee((prev) => ({ ...prev, email: e.target.value }))\n                                }\n                                required\n                            />\n                            <label>Phone:</label>\n                            <input\n                                type=\"text\"\n                                name=\"phone\"\n                                value={editEmployee?.phone || ''}\n                                onChange={(e) =>\n                                    setEditEmployee((prev) => ({ ...prev, phone: e.target.value }))\n                                }\n                                required\n                            />\n                            <label>Role:</label>\n                            <select\n                                name=\"role\"\n                                value={editEmployee?.role || ''}\n                                onChange={(e) =>\n                                    setEditEmployee((prev) => ({ ...prev, role: e.target.value }))\n                                }\n                            >\n                                <option value=\"employee\">Employee</option>\n                                <option value=\"admin\">Admin</option>\n                            </select>\n                            <label>Profile Photo:</label>\n                            <input\n                                type=\"file\"\n                                accept=\"image/*\"\n                                onChange={(e) =>\n                                    setEditEmployee((prev) => ({\n                                        ...prev,\n                                        photoFile: e.target.files[0]\n                                    }))\n                                }\n                            />\n\n                            {editEmployee?.photoFile && (\n                                <img\n                                    src={URL.createObjectURL(editEmployee.photoFile)}\n                                    alt=\"Preview\"\n                                    style={{\n                                        width: '100px',\n                                        height: '100px',\n                                        objectFit: 'cover',\n                                        borderRadius: '8px',\n                                        margin: '10px 0'\n                                    }}\n                                />\n                            )}\n\n                            {!editEmployee?.photoFile && editEmployee?.photoData && (\n                                <img\n                                    src={editEmployee.photoData}\n                                    alt=\"Current\"\n                                    style={{\n                                        width: '100px',\n                                        height: '100px',\n                                        objectFit: 'cover',\n                                        borderRadius: '8px',\n                                        margin: '10px 0'\n                                    }}\n                                />\n                            )}\n\n                            <button type=\"submit\">Save Changes</button>\n                            <button\n                                type=\"button\"\n                                onClick={() => setIsEditModalOpen(false)}\n                                className=\"cancel-button\"\n                            >\n                                Cancel\n                            </button>\n                        </form>\n                    </Modal>\n\n                </div>\n                <ToastContainer />\n            </div>\n        </BackgroundWrapper >\n\n    );\n}\n\nexport default EmployeesScreen;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}