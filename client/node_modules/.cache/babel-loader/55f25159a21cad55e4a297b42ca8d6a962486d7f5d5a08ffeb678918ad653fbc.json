{"ast":null,"code":"var _jsxFileName = \"/Users/dorlevi/IdeaProjects/newShiftWise/client/src/components/AvailabilityScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Navbar from './Navbar';\nimport '../styles/AvailabilityScreen.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AvailabilityScreen = () => {\n  _s();\n  const daysOfWeek = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n  const shifts = ['Morning', 'Noon', 'Evening', 'Night'];\n  const [availabilityByWeek, setAvailabilityByWeek] = useState({}); // שמירת זמינויות לפי שבוע\n  const [currentWeek, setCurrentWeek] = useState(1); // מתחילים מהשבוע הבא (1)\n\n  const getAvailabilityForWeek = week => {\n    return availabilityByWeek[week] ||\n    // טוענים את המידע אם קיים\n    shifts.reduce((acc, shift) => {\n      acc[shift] = daysOfWeek.reduce((dayAcc, day) => {\n        dayAcc[day] = false;\n        return dayAcc;\n      }, {});\n      return acc;\n    }, {});\n  };\n  const [availability, setAvailability] = useState(getAvailabilityForWeek(currentWeek)); // זמינות עבור השבוע הנוכחי\n\n  const calculateWeekRange = weekOffset => {\n    const today = new Date();\n    const firstDayOfWeek = new Date(today.setDate(today.getDate() - today.getDay() + weekOffset * 7));\n    const lastDayOfWeek = new Date(firstDayOfWeek);\n    lastDayOfWeek.setDate(firstDayOfWeek.getDate() + 6);\n    const formatDate = date => {\n      const day = String(date.getDate()).padStart(2, '0');\n      const month = String(date.getMonth() + 1).padStart(2, '0');\n      const year = date.getFullYear();\n      return `${day}/${month}/${year}`;\n    };\n    return `${formatDate(firstDayOfWeek)} - ${formatDate(lastDayOfWeek)}`;\n  };\n  const handleAvailabilityChange = (shift, day) => {\n    setAvailability(prev => ({\n      ...prev,\n      [shift]: {\n        ...prev[shift],\n        [day]: !prev[shift][day]\n      }\n    }));\n  };\n  const handleWeekChange = direction => {\n    const newWeek = currentWeek + direction;\n\n    // שמירת הזמינות של השבוע הנוכחי\n    setAvailabilityByWeek(prev => ({\n      ...prev,\n      [currentWeek]: availability\n    }));\n\n    // מעבר לשבוע חדש\n    setCurrentWeek(newWeek);\n\n    // טעינת זמינות של השבוע החדש\n    setAvailability(getAvailabilityForWeek(newWeek));\n  };\n  const handleSubmit = () => {\n    console.log(`Submitting availability for week ${currentWeek}:`, availability);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"availability-container\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Weekly Availability\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"week-navigation\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleWeekChange(-1),\n        children: \"Previous Week\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Week: \", calculateWeekRange(currentWeek)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleWeekChange(1),\n        children: \"Next Week\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"availability-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Shift\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this), daysOfWeek.map(day => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: day\n          }, day, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: shifts.map(shift => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: shift\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 29\n          }, this), daysOfWeek.map(day => /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: availability[shift][day],\n              onChange: () => handleAvailabilityChange(shift, day)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 37\n            }, this)\n          }, day, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 33\n          }, this))]\n        }, shift, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"submit-button\",\n      onClick: handleSubmit,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n};\n_s(AvailabilityScreen, \"hzoj9xCSAbDYOY6I5LCmdgy6kH8=\");\n_c = AvailabilityScreen;\nexport default AvailabilityScreen;\nvar _c;\n$RefreshReg$(_c, \"AvailabilityScreen\");","map":{"version":3,"names":["React","useState","Navbar","jsxDEV","_jsxDEV","AvailabilityScreen","_s","daysOfWeek","shifts","availabilityByWeek","setAvailabilityByWeek","currentWeek","setCurrentWeek","getAvailabilityForWeek","week","reduce","acc","shift","dayAcc","day","availability","setAvailability","calculateWeekRange","weekOffset","today","Date","firstDayOfWeek","setDate","getDate","getDay","lastDayOfWeek","formatDate","date","String","padStart","month","getMonth","year","getFullYear","handleAvailabilityChange","prev","handleWeekChange","direction","newWeek","handleSubmit","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","type","checked","onChange","_c","$RefreshReg$"],"sources":["/Users/dorlevi/IdeaProjects/newShiftWise/client/src/components/AvailabilityScreen.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Navbar from './Navbar';\nimport '../styles/AvailabilityScreen.css';\n\nconst AvailabilityScreen = () => {\n    const daysOfWeek = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n    const shifts = ['Morning', 'Noon', 'Evening', 'Night'];\n\n    const [availabilityByWeek, setAvailabilityByWeek] = useState({}); // שמירת זמינויות לפי שבוע\n    const [currentWeek, setCurrentWeek] = useState(1); // מתחילים מהשבוע הבא (1)\n\n    const getAvailabilityForWeek = (week) => {\n        return (\n            availabilityByWeek[week] || // טוענים את המידע אם קיים\n            shifts.reduce((acc, shift) => {\n                acc[shift] = daysOfWeek.reduce((dayAcc, day) => {\n                    dayAcc[day] = false;\n                    return dayAcc;\n                }, {});\n                return acc;\n            }, {})\n        );\n    };\n\n    const [availability, setAvailability] = useState(getAvailabilityForWeek(currentWeek)); // זמינות עבור השבוע הנוכחי\n\n    const calculateWeekRange = (weekOffset) => {\n        const today = new Date();\n        const firstDayOfWeek = new Date(today.setDate(today.getDate() - today.getDay() + weekOffset * 7));\n        const lastDayOfWeek = new Date(firstDayOfWeek);\n        lastDayOfWeek.setDate(firstDayOfWeek.getDate() + 6);\n\n        const formatDate = (date) => {\n            const day = String(date.getDate()).padStart(2, '0');\n            const month = String(date.getMonth() + 1).padStart(2, '0');\n            const year = date.getFullYear();\n            return `${day}/${month}/${year}`;\n        };\n\n        return `${formatDate(firstDayOfWeek)} - ${formatDate(lastDayOfWeek)}`;\n    };\n\n    const handleAvailabilityChange = (shift, day) => {\n        setAvailability((prev) => ({\n            ...prev,\n            [shift]: {\n                ...prev[shift],\n                [day]: !prev[shift][day],\n            },\n        }));\n    };\n\n    const handleWeekChange = (direction) => {\n        const newWeek = currentWeek + direction;\n\n        // שמירת הזמינות של השבוע הנוכחי\n        setAvailabilityByWeek((prev) => ({\n            ...prev,\n            [currentWeek]: availability,\n        }));\n\n        // מעבר לשבוע חדש\n        setCurrentWeek(newWeek);\n\n        // טעינת זמינות של השבוע החדש\n        setAvailability(getAvailabilityForWeek(newWeek));\n    };\n\n    const handleSubmit = () => {\n        console.log(`Submitting availability for week ${currentWeek}:`, availability);\n    };\n\n    return (\n        <div className=\"availability-container\">\n            <Navbar />\n            <h1>Weekly Availability</h1>\n            <div className=\"week-navigation\">\n                <button onClick={() => handleWeekChange(-1)}>Previous Week</button>\n                <h2>Week: {calculateWeekRange(currentWeek)}</h2>\n                <button onClick={() => handleWeekChange(1)}>Next Week</button>\n            </div>\n            <table className=\"availability-table\">\n                <thead>\n                    <tr>\n                        <th>Shift</th>\n                        {daysOfWeek.map((day) => (\n                            <th key={day}>{day}</th>\n                        ))}\n                    </tr>\n                </thead>\n                <tbody>\n                    {shifts.map((shift) => (\n                        <tr key={shift}>\n                            <td>{shift}</td>\n                            {daysOfWeek.map((day) => (\n                                <td key={day}>\n                                    <input\n                                        type=\"checkbox\"\n                                        checked={availability[shift][day]}\n                                        onChange={() => handleAvailabilityChange(shift, day)}\n                                    />\n                                </td>\n                            ))}\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n            <button className=\"submit-button\" onClick={handleSubmit}>\n                Submit\n            </button>\n        </div>\n    );\n};\n\nexport default AvailabilityScreen;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}