{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:5000/api/users';\n\n// Get all users\nexport const getUsers = async () => {\n  try {\n    const response = await axios.get(API_URL);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching users:', error.message);\n    throw error;\n  }\n};\nexport const getCompanies = async () => {\n  const response = await axios.get(API_URL);\n  return response.data;\n};\n\n// Get a user by ID\nexport const getUserById = async id => {\n  try {\n    const response = await axios.get(`${API_URL}/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error(`Error fetching user with ID ${id}:`, error.message);\n    throw error;\n  }\n};\n\n// Add a new user\nexport const addUser = async userData => {\n  try {\n    const response = await axios.post(API_URL, userData);\n    return response.data;\n  } catch (error) {\n    console.error('Error adding user:', error.message);\n    throw error;\n  }\n};\n\n// Update a user by ID\nexport const updateUser = async (id, updatedData) => {\n  try {\n    const response = await axios.put(`${API_URL}/${id}`, updatedData);\n    return response.data;\n  } catch (error) {\n    console.error(`Error updating user with ID ${id}:`, error.message);\n    throw error;\n  }\n};\n\n// Update user companies\nexport const updateUserCompanies = async (userId, company) => {\n  try {\n    // Fetch the current user data\n    const user = await getUserById(userId);\n\n    // Add the new company to the user's list of companies\n    const updatedCompanies = user.companies ? [...user.companies, company.id] : [company.id];\n\n    // Update the user with the new list of companies\n    const updatedData = {\n      ...user,\n      companies: updatedCompanies\n    };\n    const response = await updateUser(userId, updatedData);\n    return response.data;\n  } catch (error) {\n    console.error(`Error updating companies for user with ID ${userId}:`, error.message);\n    throw error;\n  }\n};\n\n// Delete a user by ID\nexport const deleteUser = async id => {\n  try {\n    const response = await axios.delete(`${API_URL}/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error(`Error deleting user with ID ${id}:`, error.message);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","API_URL","getUsers","response","get","data","error","console","message","getCompanies","getUserById","id","addUser","userData","post","updateUser","updatedData","put","updateUserCompanies","userId","company","user","updatedCompanies","companies","deleteUser","delete"],"sources":["/Users/dorlevi/IdeaProjects/newShiftWise/client/src/services/userService.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = 'http://localhost:5000/api/users';\n\n// Get all users\nexport const getUsers = async () => {\n    try {\n        const response = await axios.get(API_URL);\n        return response.data;\n    } catch (error) {\n        console.error('Error fetching users:', error.message);\n        throw error;\n    }\n};\n\nexport const getCompanies = async () => {\n    const response = await axios.get(API_URL);\n    return response.data;\n};\n\n// Get a user by ID\nexport const getUserById = async (id) => {\n    try {\n        const response = await axios.get(`${API_URL}/${id}`);\n        return response.data;\n    } catch (error) {\n        console.error(`Error fetching user with ID ${id}:`, error.message);\n        throw error;\n    }\n};\n\n// Add a new user\nexport const addUser = async (userData) => {\n    try {\n        const response = await axios.post(API_URL, userData);\n        return response.data;\n    } catch (error) {\n        console.error('Error adding user:', error.message);\n        throw error;\n    }\n};\n\n// Update a user by ID\nexport const updateUser = async (id, updatedData) => {\n    try {\n        const response = await axios.put(`${API_URL}/${id}`, updatedData);\n        return response.data;\n    } catch (error) {\n        console.error(`Error updating user with ID ${id}:`, error.message);\n        throw error;\n    }\n};\n\n// Update user companies\nexport const updateUserCompanies = async (userId, company) => {\n    try {\n        // Fetch the current user data\n        const user = await getUserById(userId);\n\n        // Add the new company to the user's list of companies\n        const updatedCompanies = user.companies ? [...user.companies, company.id] : [company.id];\n\n        // Update the user with the new list of companies\n        const updatedData = { ...user, companies: updatedCompanies };\n        const response = await updateUser(userId, updatedData);\n\n        return response.data;\n    } catch (error) {\n        console.error(`Error updating companies for user with ID ${userId}:`, error.message);\n        throw error;\n    }\n};\n\n// Delete a user by ID\nexport const deleteUser = async (id) => {\n    try {\n        const response = await axios.delete(`${API_URL}/${id}`);\n        return response.data;\n    } catch (error) {\n        console.error(`Error deleting user with ID ${id}:`, error.message);\n        throw error;\n    }\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}