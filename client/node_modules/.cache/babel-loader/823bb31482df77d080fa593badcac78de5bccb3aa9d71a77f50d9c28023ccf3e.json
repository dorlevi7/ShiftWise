{"ast":null,"code":"import axios from 'axios';\n\n// Base URL for company-related API requests\nconst API_URL = 'http://localhost:5000/api/companies';\n\n// Fetch all companies from the server\nexport const getCompanies = async () => {\n  const response = await axios.get(API_URL);\n  return response.data;\n};\n\n// Fetch a specific company by ID\nexport const getCompanyById = async id => {\n  const response = await axios.get(`${API_URL}/${id}`);\n  return response.data;\n};\n\n// Add a new company to the database\nexport const addCompany = async companyData => {\n  const response = await axios.post(API_URL, companyData);\n  return response.data;\n};\nexport const updateCompany = async (id, updatedData) => {\n  const response = await axios.put(`${API_URL}/${id}`, updatedData);\n  return response.data;\n};\nexport const deleteCompany = async id => {\n  const response = await axios.delete(`${API_URL}/${id}`);\n  return response.data;\n};\nexport const addEmployeeToCompany = async (companyId, userId) => {\n  const response = await axios.post(`${API_URL}/add-employee`, {\n    companyId,\n    userId\n  });\n  return response.data;\n};\nexport const addAdminToCompany = async (companyId, adminId) => {\n  const response = await axios.post(`${API_URL}/add-admin`, {\n    companyId,\n    adminId\n  });\n  return response.data;\n};\nexport const removeUserFromCompany = async (companyId, userId) => {\n  try {\n    const response = await axios.post(`${API_URL}/remove-user`, {\n      companyId,\n      userId\n    });\n    return response.data;\n  } catch (error) {\n    console.error(`Error removing user with ID ${userId} from company with ID ${companyId}:`, error.message);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","API_URL","getCompanies","response","get","data","getCompanyById","id","addCompany","companyData","post","updateCompany","updatedData","put","deleteCompany","delete","addEmployeeToCompany","companyId","userId","addAdminToCompany","adminId","removeUserFromCompany","error","console","message"],"sources":["/Users/dorlevi/IdeaProjects/newShiftWise/client/src/services/companyService.js"],"sourcesContent":["import axios from 'axios';\n\n// Base URL for company-related API requests\nconst API_URL = 'http://localhost:5000/api/companies';\n\n// Fetch all companies from the server\nexport const getCompanies = async () => {\n    const response = await axios.get(API_URL);\n    return response.data;\n};\n\n// Fetch a specific company by ID\nexport const getCompanyById = async (id) => {\n    const response = await axios.get(`${API_URL}/${id}`);\n    return response.data;\n};\n\n// Add a new company to the database\nexport const addCompany = async (companyData) => {\n    const response = await axios.post(API_URL, companyData);\n    return response.data;\n};\n\nexport const updateCompany = async (id, updatedData) => {\n    const response = await axios.put(`${API_URL}/${id}`, updatedData);\n    return response.data;\n};\n\nexport const deleteCompany = async (id) => {\n    const response = await axios.delete(`${API_URL}/${id}`);\n    return response.data;\n};\n\nexport const addEmployeeToCompany = async (companyId, userId) => {\n    const response = await axios.post(`${API_URL}/add-employee`, { companyId, userId });\n    return response.data;\n};\n\nexport const addAdminToCompany = async (companyId, adminId) => {\n    const response = await axios.post(`${API_URL}/add-admin`, { companyId, adminId });\n    return response.data;\n};\n\nexport const removeUserFromCompany = async (companyId, userId) => {\n    try {\n        const response = await axios.post(`${API_URL}/remove-user`, { companyId, userId });\n        return response.data;\n    } catch (error) {\n        console.error(`Error removing user with ID ${userId} from company with ID ${companyId}:`, error.message);\n        throw error;\n    }\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,OAAO,GAAG,qCAAqC;;AAErD;AACA,OAAO,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;EACpC,MAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAACH,OAAO,CAAC;EACzC,OAAOE,QAAQ,CAACE,IAAI;AACxB,CAAC;;AAED;AACA,OAAO,MAAMC,cAAc,GAAG,MAAOC,EAAE,IAAK;EACxC,MAAMJ,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAC,GAAGH,OAAO,IAAIM,EAAE,EAAE,CAAC;EACpD,OAAOJ,QAAQ,CAACE,IAAI;AACxB,CAAC;;AAED;AACA,OAAO,MAAMG,UAAU,GAAG,MAAOC,WAAW,IAAK;EAC7C,MAAMN,QAAQ,GAAG,MAAMH,KAAK,CAACU,IAAI,CAACT,OAAO,EAAEQ,WAAW,CAAC;EACvD,OAAON,QAAQ,CAACE,IAAI;AACxB,CAAC;AAED,OAAO,MAAMM,aAAa,GAAG,MAAAA,CAAOJ,EAAE,EAAEK,WAAW,KAAK;EACpD,MAAMT,QAAQ,GAAG,MAAMH,KAAK,CAACa,GAAG,CAAC,GAAGZ,OAAO,IAAIM,EAAE,EAAE,EAAEK,WAAW,CAAC;EACjE,OAAOT,QAAQ,CAACE,IAAI;AACxB,CAAC;AAED,OAAO,MAAMS,aAAa,GAAG,MAAOP,EAAE,IAAK;EACvC,MAAMJ,QAAQ,GAAG,MAAMH,KAAK,CAACe,MAAM,CAAC,GAAGd,OAAO,IAAIM,EAAE,EAAE,CAAC;EACvD,OAAOJ,QAAQ,CAACE,IAAI;AACxB,CAAC;AAED,OAAO,MAAMW,oBAAoB,GAAG,MAAAA,CAAOC,SAAS,EAAEC,MAAM,KAAK;EAC7D,MAAMf,QAAQ,GAAG,MAAMH,KAAK,CAACU,IAAI,CAAC,GAAGT,OAAO,eAAe,EAAE;IAAEgB,SAAS;IAAEC;EAAO,CAAC,CAAC;EACnF,OAAOf,QAAQ,CAACE,IAAI;AACxB,CAAC;AAED,OAAO,MAAMc,iBAAiB,GAAG,MAAAA,CAAOF,SAAS,EAAEG,OAAO,KAAK;EAC3D,MAAMjB,QAAQ,GAAG,MAAMH,KAAK,CAACU,IAAI,CAAC,GAAGT,OAAO,YAAY,EAAE;IAAEgB,SAAS;IAAEG;EAAQ,CAAC,CAAC;EACjF,OAAOjB,QAAQ,CAACE,IAAI;AACxB,CAAC;AAED,OAAO,MAAMgB,qBAAqB,GAAG,MAAAA,CAAOJ,SAAS,EAAEC,MAAM,KAAK;EAC9D,IAAI;IACA,MAAMf,QAAQ,GAAG,MAAMH,KAAK,CAACU,IAAI,CAAC,GAAGT,OAAO,cAAc,EAAE;MAAEgB,SAAS;MAAEC;IAAO,CAAC,CAAC;IAClF,OAAOf,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOiB,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,+BAA+BJ,MAAM,yBAAyBD,SAAS,GAAG,EAAEK,KAAK,CAACE,OAAO,CAAC;IACxG,MAAMF,KAAK;EACf;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}