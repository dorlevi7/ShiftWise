{"ast":null,"code":"var _jsxFileName = \"/Users/dorlevi/IdeaProjects/newShiftWise/client/src/components/AvailabilityScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { getUsers } from '../services/userService';\nimport Navbar from './Navbar';\nimport '../styles/AvailabilityScreen.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AvailabilityScreen = () => {\n  _s();\n  const [employees, setEmployees] = useState([]); // רשימת העובדים המקושרים לחברה\n  const [availability, setAvailability] = useState(null); // זמינות עבור השבוע הנוכחי\n  const [notes, setNotes] = useState(''); // הערות שבועיות\n  const [currentWeek, setCurrentWeek] = useState(1); // מתחילים מהשבוע הבא\n  const [userData, setUserData] = useState(null); // פרטי המשתמש\n\n  useEffect(() => {\n    // שליפת המשתמש המחובר\n    const loggedUser = JSON.parse(localStorage.getItem('user'));\n    if (loggedUser) {\n      setUserData(loggedUser);\n\n      // טעינת רשימת העובדים\n      const fetchEmployees = async () => {\n        try {\n          var _loggedUser$company;\n          const usersData = await getUsers();\n          const companyId = loggedUser === null || loggedUser === void 0 ? void 0 : (_loggedUser$company = loggedUser.company) === null || _loggedUser$company === void 0 ? void 0 : _loggedUser$company.id;\n          if (companyId) {\n            const filteredEmployees = Object.entries(usersData).map(([id, user]) => ({\n              id,\n              ...user\n            })).filter(user => {\n              var _user$companyIds;\n              return (_user$companyIds = user.companyIds) === null || _user$companyIds === void 0 ? void 0 : _user$companyIds.some(company => company.companyId === companyId);\n            });\n            setEmployees(filteredEmployees);\n          }\n        } catch (error) {\n          console.error('Error fetching employees:', error);\n        }\n      };\n      fetchEmployees();\n    }\n  }, []);\n  const handleEmployeeChange = e => {\n    const selectedEmployeeId = e.target.value;\n    // לוגיקה לטיפול בזמינות של העובד שנבחר\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"availability-container\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Availability\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"employee-selector\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"employeeDropdown\",\n        children: \"Select Employee:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"employeeDropdown\",\n        onChange: handleEmployeeChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select an employee\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), employees.map(employee => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: employee.id,\n          children: employee.name\n        }, employee.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n_s(AvailabilityScreen, \"3dpEz2WE9sQSM6nFecHkjW9eua0=\");\n_c = AvailabilityScreen;\nexport default AvailabilityScreen;\nvar _c;\n$RefreshReg$(_c, \"AvailabilityScreen\");","map":{"version":3,"names":["React","useState","useEffect","getUsers","Navbar","jsxDEV","_jsxDEV","AvailabilityScreen","_s","employees","setEmployees","availability","setAvailability","notes","setNotes","currentWeek","setCurrentWeek","userData","setUserData","loggedUser","JSON","parse","localStorage","getItem","fetchEmployees","_loggedUser$company","usersData","companyId","company","id","filteredEmployees","Object","entries","map","user","filter","_user$companyIds","companyIds","some","error","console","handleEmployeeChange","e","selectedEmployeeId","target","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","onChange","employee","name","_c","$RefreshReg$"],"sources":["/Users/dorlevi/IdeaProjects/newShiftWise/client/src/components/AvailabilityScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { getUsers } from '../services/userService';\nimport Navbar from './Navbar';\nimport '../styles/AvailabilityScreen.css';\n\nconst AvailabilityScreen = () => {\n    const [employees, setEmployees] = useState([]); // רשימת העובדים המקושרים לחברה\n    const [availability, setAvailability] = useState(null); // זמינות עבור השבוע הנוכחי\n    const [notes, setNotes] = useState(''); // הערות שבועיות\n    const [currentWeek, setCurrentWeek] = useState(1); // מתחילים מהשבוע הבא\n    const [userData, setUserData] = useState(null); // פרטי המשתמש\n\n    useEffect(() => {\n        // שליפת המשתמש המחובר\n        const loggedUser = JSON.parse(localStorage.getItem('user'));\n        if (loggedUser) {\n            setUserData(loggedUser);\n\n            // טעינת רשימת העובדים\n            const fetchEmployees = async () => {\n                try {\n                    const usersData = await getUsers();\n                    const companyId = loggedUser?.company?.id;\n\n                    if (companyId) {\n                        const filteredEmployees = Object.entries(usersData)\n                            .map(([id, user]) => ({ id, ...user }))\n                            .filter((user) =>\n                                user.companyIds?.some((company) => company.companyId === companyId)\n                            );\n\n                        setEmployees(filteredEmployees);\n                    }\n                } catch (error) {\n                    console.error('Error fetching employees:', error);\n                }\n            };\n\n            fetchEmployees();\n        }\n    }, []);\n\n    const handleEmployeeChange = (e) => {\n        const selectedEmployeeId = e.target.value;\n        // לוגיקה לטיפול בזמינות של העובד שנבחר\n    };\n\n    return (\n        <div className=\"availability-container\">\n            <Navbar />\n            <h1>Availability</h1>\n            <div className=\"employee-selector\">\n                <label htmlFor=\"employeeDropdown\">Select Employee:</label>\n                <select id=\"employeeDropdown\" onChange={handleEmployeeChange}>\n                    <option value=\"\">Select an employee</option>\n                    {employees.map((employee) => (\n                        <option key={employee.id} value={employee.id}>\n                            {employee.name}\n                        </option>\n                    ))}\n                </select>\n            </div>\n            {/* שאר הקוד של מסך הזמינות */}\n        </div>\n    );\n};\n\nexport default AvailabilityScreen;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}