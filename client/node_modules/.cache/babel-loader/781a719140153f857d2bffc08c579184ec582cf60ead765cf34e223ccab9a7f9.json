{"ast":null,"code":"var _jsxFileName = \"/Users/dorlevi/IdeaProjects/newShiftWise/client/src/components/EmployeesScreen.js\",\n  _s = $RefreshSig$();\n// React & state\nimport React, { useState, useEffect } from 'react';\n\n// UI Components & Libraries\nimport Modal from 'react-modal';\nimport { toast, ToastContainer } from 'react-toastify';\nimport { ThreeDots } from 'react-loader-spinner';\nimport Navbar from '../components/Navbar';\n\n// Styles\nimport 'react-toastify/dist/ReactToastify.css';\nimport '../styles/EmployeesScreen.css';\nimport '../styles/Navbar.css';\n\n// Data\nimport employeesData from '../data/emps.json'; // יש לוודא שהקובץ נמצא בתיקייה data\n\n// Services\nimport { getUsers, removeCompanyFromUser, addUser, updateUserCompanies, updateUser } from '../services/userService';\nimport { removeUserFromCompany, addEmployeeToCompany } from '../services/companyService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nModal.setAppElement('#root');\nfunction EmployeesScreen() {\n  _s();\n  // Employees data\n  const [employees, setEmployees] = useState([]);\n\n  // Form data\n  const [newEmployee, setNewEmployee] = useState({\n    name: '',\n    email: '',\n    phone: '',\n    role: 'employee',\n    password: '',\n    photoFile: null\n  });\n\n  // App state\n  const [isLoading, setIsLoading] = useState(true);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [error, setError] = useState('');\n  const [loggedUser, setLoggedUser] = useState(null);\n\n  // Modals\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [isEditModalOpen, setIsEditModalOpen] = useState(false);\n  const [isConfirmDeleteModalOpen, setIsConfirmDeleteModalOpen] = useState(false);\n\n  // Edit/delete handlers\n  const [editEmployee, setEditEmployee] = useState(null);\n  const [employeeToDelete, setEmployeeToDelete] = useState(null);\n\n  // UI helpers\n  const [openCards, setOpenCards] = useState({});\n  const [searchQuery, setSearchQuery] = useState('');\n  const [filterRole, setFilterRole] = useState('all');\n\n  // On component mount, fetch the list of employees associated with the logged-in user's company:\n  // - Retrieve the logged-in user from localStorage.\n  // - Extract the company ID and validate it.\n  // - Fetch all users from the database.\n  // - Filter users to include only those who belong to the current company.\n  // - Update the local employee list state.\n  // - Handle loading and error states appropriately.\n  useEffect(() => {\n    const fetchEmployees = async () => {\n      try {\n        var _loggedUser$company;\n        const loggedUser = JSON.parse(localStorage.getItem('user'));\n        setLoggedUser(loggedUser);\n        const companyId = loggedUser === null || loggedUser === void 0 ? void 0 : (_loggedUser$company = loggedUser.company) === null || _loggedUser$company === void 0 ? void 0 : _loggedUser$company.id;\n        if (!companyId) {\n          setError('No company information found.');\n          return;\n        }\n        const data = await getUsers();\n        const usersWithIds = data ? Object.entries(data).map(([id, user]) => ({\n          id,\n          ...user\n        })) : [];\n        const filteredEmployees = usersWithIds.filter(user => {\n          var _user$companyIds;\n          return (_user$companyIds = user.companyIds) === null || _user$companyIds === void 0 ? void 0 : _user$companyIds.some(company => company.companyId === companyId);\n        });\n        setEmployees(filteredEmployees);\n      } catch (err) {\n        setError('Failed to fetch employees.');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchEmployees();\n  }, []);\n\n  // Open the confirmation modal for deleting an employee.\n  // Stores the selected employee in state for later use.\n  const openConfirmDeleteModal = employee => {\n    setEmployeeToDelete(employee);\n    setIsConfirmDeleteModalOpen(true);\n  };\n\n  // Close the confirmation modal and clear the selected employee.\n  const closeConfirmDeleteModal = () => {\n    setIsConfirmDeleteModalOpen(false);\n    setEmployeeToDelete(null);\n  };\n\n  // Handle confirmed deletion of an employee:\n  // - Validate company information.\n  // - Remove the employee from the user and company records.\n  // - Update the UI to reflect the deletion.\n  // - Display success or error notifications.\n  const handleDeleteConfirmed = async () => {\n    if (!employeeToDelete) return;\n    try {\n      var _loggedUser$company2;\n      const companyId = loggedUser === null || loggedUser === void 0 ? void 0 : (_loggedUser$company2 = loggedUser.company) === null || _loggedUser$company2 === void 0 ? void 0 : _loggedUser$company2.id;\n      if (!companyId) {\n        toast.error('No company information found. Please try again.');\n        return;\n      }\n      await removeCompanyFromUser(employeeToDelete.id, companyId);\n      await removeUserFromCompany(companyId, employeeToDelete.id);\n      setEmployees(employees.filter(employee => employee.id !== employeeToDelete.id));\n      toast.success('Employee deleted successfully!');\n    } catch (err) {\n      toast.error('Failed to delete employee.');\n      console.error(err);\n    } finally {\n      closeConfirmDeleteModal();\n    }\n  };\n\n  // Handle input changes in the \"Add New Employee\" form.\n  // Updates the corresponding field in the newEmployee state.\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewEmployee(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  // Handle submission of the \"Add New Employee\" form:\n  // - Prevent default form submission.\n  // - Check for valid company information.\n  // - Check if a user with the given email already exists:\n  //     - If yes, associate them with the current company.\n  //     - If not, create a new user and associate them with the company.\n  // - Update the employees list in the UI accordingly.\n  // - Show success or error toasts.\n  // - Reset the form and close the modal after successful addition.\n  const handleAddEmployee = async e => {\n    e.preventDefault();\n    try {\n      const company = loggedUser === null || loggedUser === void 0 ? void 0 : loggedUser.company;\n      if (!company) {\n        toast.error('No company information found. Please try again.');\n        return;\n      }\n\n      // 1. המרת קובץ תמונה ל־Base64 (data URL)\n      let photoDataUrl = '';\n      if (newEmployee.photoFile) {\n        const reader = new FileReader();\n        const file = newEmployee.photoFile;\n        photoDataUrl = await new Promise((resolve, reject) => {\n          reader.onloadend = () => resolve(reader.result);\n          reader.onerror = reject;\n          reader.readAsDataURL(file);\n        });\n      }\n      const allUsers = await getUsers();\n      const existingUser = Object.values(allUsers).find(user => user.email === newEmployee.email);\n      if (existingUser) {\n        await updateUserCompanies(existingUser, company);\n        await addEmployeeToCompany(company.id, existingUser.id);\n        const isUserInUI = employees.some(employee => employee.id === existingUser.id);\n        if (!isUserInUI) {\n          setEmployees(prev => [...prev, existingUser]);\n        }\n        toast.info('User already exists, added to the company successfully.');\n      } else {\n        // 2. הוספת משתמש כולל תמונה\n        const addedEmployee = await addUser({\n          ...newEmployee,\n          photoData: photoDataUrl // ⬅️ התמונה בבסיס הנתונים\n        });\n        await updateUserCompanies(addedEmployee, company);\n        await addEmployeeToCompany(company.id, addedEmployee.id);\n        setEmployees(prev => [...prev, {\n          id: addedEmployee.id,\n          ...addedEmployee\n        }]);\n        toast.success('New user added successfully!');\n      }\n\n      // 3. איפוס הטופס\n      setNewEmployee({\n        name: '',\n        email: '',\n        phone: '',\n        role: 'employee',\n        password: '',\n        photoFile: null\n      });\n      setIsModalOpen(false);\n    } catch (err) {\n      toast.error('Failed to add employee.');\n      console.error(err);\n    }\n  };\n\n  // Toggle the expanded/collapsed state of an employee card by its ID.\n  // If the card is currently open, it will be closed, and vice versa.\n  const toggleCard = id => {\n    setOpenCards(prev => ({\n      ...prev,\n      [id]: !prev[id]\n    }));\n  };\n  const handleEditClick = employee => {\n    setEditEmployee(employee); // הגדרת העובד הנבחר לעריכה\n    setIsEditModalOpen(true); // פתיחת המודל\n  };\n  const handleLoadEmployeesFromJSON = async () => {\n    try {\n      if (!loggedUser || !loggedUser.company) {\n        toast.error('No company information found. Please try again.');\n        return;\n      }\n      setIsProcessing(true); // הפעלת ה-Loader\n\n      const companyId = loggedUser.company.id;\n      const allUsers = await getUsers();\n      const newEmployees = employeesData.filter(employee => {\n        var _existingUser$company;\n        const existingUser = Object.values(allUsers).find(user => user.email === employee.email);\n        if (!existingUser) {\n          return true; // משתמש לא קיים כלל - נוסיף אותו\n        }\n        const isInCompany = (_existingUser$company = existingUser.companyIds) === null || _existingUser$company === void 0 ? void 0 : _existingUser$company.some(company => company.companyId === companyId);\n        return !isInCompany; // אם הוא לא משויך לחברה, נוסיף אותו שוב\n      });\n      for (const employee of newEmployees) {\n        const existingUser = Object.values(allUsers).find(user => user.email === employee.email);\n        if (existingUser) {\n          await updateUserCompanies(existingUser, loggedUser.company);\n          await addEmployeeToCompany(companyId, existingUser.id);\n        } else {\n          const addedEmployee = await addUser(employee);\n          await updateUserCompanies(addedEmployee, loggedUser.company);\n          await addEmployeeToCompany(companyId, addedEmployee.id);\n        }\n      }\n      const updatedUsers = await getUsers();\n      const usersWithIds = Object.entries(updatedUsers).map(([id, user]) => ({\n        id,\n        ...user\n      }));\n      const filteredEmployees = usersWithIds.filter(user => {\n        var _user$companyIds2;\n        return (_user$companyIds2 = user.companyIds) === null || _user$companyIds2 === void 0 ? void 0 : _user$companyIds2.some(company => company.companyId === companyId);\n      });\n      setEmployees(filteredEmployees);\n      toast.success(`${newEmployees.length} employees added successfully!`);\n    } catch (error) {\n      toast.error('Failed to load employees from JSON.');\n      console.error(error);\n    } finally {\n      setIsProcessing(false); // כיבוי ה-Loader\n    }\n  };\n\n  // Delete all non-admin employees from the current company:\n  // - Validate that the logged-in user and company info exist.\n  // - Show a loader while processing.\n  // - Filter out all employees who are not admins.\n  // - For each employee, remove their association with the company both in user and company records.\n  // - Update the UI to show only admins.\n  // - Display appropriate success or error messages.\n  const handleDeleteAllEmployees = async () => {\n    try {\n      if (!loggedUser || !loggedUser.company) {\n        toast.error('No company information found. Please try again.');\n        return;\n      }\n      setIsProcessing(true); // הפעלת ה-Loader\n\n      const companyId = loggedUser.company.id;\n      const employeesToDelete = employees.filter(employee => employee.role !== 'admin');\n      if (employeesToDelete.length === 0) {\n        toast.info('No employees to delete.');\n        return;\n      }\n      for (const employee of employeesToDelete) {\n        await removeCompanyFromUser(employee.id, companyId);\n        await removeUserFromCompany(companyId, employee.id);\n      }\n      setEmployees(employees.filter(employee => employee.role === 'admin'));\n      toast.success(`${employeesToDelete.length} employees deleted successfully!`);\n    } catch (err) {\n      toast.error('Failed to delete employees.');\n      console.error(err);\n    } finally {\n      setIsProcessing(false); // כיבוי ה-Loader\n    }\n  };\n  const filteredEmployees = employees.filter(employee => {\n    return (employee.name.toLowerCase().startsWith(searchQuery.toLowerCase()) || employee.email.toLowerCase().startsWith(searchQuery.toLowerCase())) && (filterRole === 'all' || employee.role === filterRole);\n  });\n\n  // Render the EmployeesScreen UI:\n  // - Navbar at the top with a placeholder to maintain layout spacing.\n  // - A search bar and role filter for filtering employees by name/email and role.\n  // - Conditional rendering based on loading/error state:\n  //     - If loading: show loading message.\n  //     - If error: show error message.\n  //     - Else: display a grid of employee cards, each toggleable to show details (email, phone, role),\n  //       with Edit/Delete options depending on role.\n  // - Action buttons below the list for:\n  //     - Adding a new employee via form modal.\n  //     - Loading multiple employees from a JSON file.\n  //     - Deleting all non-admin employees.\n  // - Modals for:\n  //     - Confirming deletion of a single employee.\n  //     - Adding a new employee (form).\n  //     - Editing an existing employee (form).\n  // - Toast notifications container at the bottom for success/error messages.\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navbar-placeholder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"employees-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Employees\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search by name or email...\",\n          value: searchQuery,\n          onChange: e => setSearchQuery(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: filterRole,\n          onChange: e => setFilterRole(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"all\",\n            children: \"All Roles\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"employee\",\n            children: \"Employee\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"admin\",\n            children: \"Admin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 17\n      }, this), isLoading ? /*#__PURE__*/_jsxDEV(ThreeDots, {\n        height: \"60\",\n        width: \"60\",\n        radius: \"9\",\n        color: \"#3498db\",\n        ariaLabel: \"loading\",\n        wrapperStyle: {\n          display: 'flex',\n          justifyContent: 'center',\n          marginTop: '30px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 21\n      }, this) : error ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"employees-cards\",\n        children: filteredEmployees.map(employee => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `employee-card ${openCards[employee.id] ? 'open' : 'closed'}`,\n          onClick: () => toggleCard(employee.id),\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: employee.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 33\n          }, this), openCards[employee.id] && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"employee-details-horizontal\",\n            children: [employee.photoData && /*#__PURE__*/_jsxDEV(\"img\", {\n              src: employee.photoData,\n              alt: `${employee.name}'s profile`,\n              className: \"employee-photo-horizontal\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 383,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"employee-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Email: \", employee.email]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 390,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Phone: \", employee.phone]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 391,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Role: \", employee.role]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 392,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"employee-actions\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"action-button edit\",\n                  onClick: e => {\n                    e.stopPropagation();\n                    handleEditClick(employee);\n                  },\n                  children: \"Edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 394,\n                  columnNumber: 49\n                }, this), employee.role !== 'admin' && /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"action-button delete\",\n                  onClick: e => {\n                    e.stopPropagation();\n                    openConfirmDeleteModal(employee);\n                  },\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 404,\n                  columnNumber: 53\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 393,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 389,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 37\n          }, this)]\n        }, employee.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 21\n      }, this), isProcessing && /*#__PURE__*/_jsxDEV(ThreeDots, {\n        height: \"50\",\n        width: \"50\",\n        radius: \"9\",\n        color: \"#3498db\",\n        ariaLabel: \"processing\",\n        wrapperStyle: {\n          display: 'flex',\n          justifyContent: 'center',\n          marginTop: '20px'\n        },\n        visible: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"toggle-form-button\",\n        onClick: () => setIsModalOpen(true),\n        children: \"Add New Employee\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"toggle-form-button\",\n        onClick: handleLoadEmployeesFromJSON,\n        children: \"Add Employees from JSON\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"toggle-form-button delete-all\",\n        onClick: handleDeleteAllEmployees,\n        children: \"Delete All Non-Admin Employees\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        isOpen: isConfirmDeleteModalOpen,\n        onRequestClose: closeConfirmDeleteModal,\n        className: \"confirm-delete-modal\",\n        overlayClassName: \"modal-overlay\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Confirm Employee Deletion\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Are you sure you want to remove \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: employeeToDelete === null || employeeToDelete === void 0 ? void 0 : employeeToDelete.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 461,\n            columnNumber: 57\n          }, this), \" from the company?\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"confirm-button\",\n            onClick: handleDeleteConfirmed,\n            children: \"Confirm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 464,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"cancel-button\",\n            onClick: closeConfirmDeleteModal,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 467,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 453,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        isOpen: isModalOpen,\n        onRequestClose: () => setIsModalOpen(false),\n        className: \"modal\",\n        overlayClassName: \"modal-overlay\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Add New Employee\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"addOrEdit-employee-form\",\n          onSubmit: handleAddEmployee,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 482,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"name\",\n            value: newEmployee.name,\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 483,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Email:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 490,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            name: \"email\",\n            value: newEmployee.email,\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 491,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Phone:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 498,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"phone\",\n            value: newEmployee.phone,\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 499,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 506,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            name: \"password\",\n            value: newEmployee.password,\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 507,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Role:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 514,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"role\",\n            value: newEmployee.role,\n            onChange: handleChange,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"employee\",\n              children: \"Employee\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 516,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"admin\",\n              children: \"Admin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 517,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 515,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Profile Photo:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 519,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \"image/*\",\n            onChange: e => setNewEmployee(prev => ({\n              ...prev,\n              photoFile: e.target.files[0]\n            }))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 520,\n            columnNumber: 25\n          }, this), newEmployee.photoFile && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: URL.createObjectURL(newEmployee.photoFile),\n            alt: \"Preview\",\n            style: {\n              width: '100px',\n              height: '100px',\n              objectFit: 'cover',\n              borderRadius: '8px',\n              margin: '10px 0'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 532,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Add Employee\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 546,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => setIsModalOpen(false),\n            className: \"cancel-button\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 547,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        isOpen: isEditModalOpen,\n        onRequestClose: () => setIsEditModalOpen(false),\n        className: \"modal\",\n        overlayClassName: \"modal-overlay\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Edit Employee\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 562,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"addOrEdit-employee-form\",\n          onSubmit: async e => {\n            e.preventDefault();\n            try {\n              if (editEmployee && editEmployee.id) {\n                // המרת תמונה חדשה ל־Base64, אם קיימת\n                let updatedPhotoData = editEmployee.photoData || '';\n                if (editEmployee.photoFile) {\n                  const reader = new FileReader();\n                  updatedPhotoData = await new Promise((resolve, reject) => {\n                    reader.onloadend = () => resolve(reader.result);\n                    reader.onerror = reject;\n                    reader.readAsDataURL(editEmployee.photoFile);\n                  });\n                }\n\n                // קריאה ל-updateUser עם הפרטים המעודכנים כולל תמונה\n                const updatedEmployee = await updateUser(editEmployee.id, {\n                  name: editEmployee.name,\n                  email: editEmployee.email,\n                  phone: editEmployee.phone,\n                  role: editEmployee.role,\n                  photoData: updatedPhotoData\n                });\n\n                // עדכון רשימת העובדים ב-UI\n                setEmployees(prevEmployees => prevEmployees.map(employee => employee.id === updatedEmployee.id ? updatedEmployee : employee));\n                toast.success('Employee updated successfully!');\n              }\n              setIsEditModalOpen(false); // סגירת המודל\n            } catch (err) {\n              toast.error('Failed to update employee. Please try again.');\n              console.error(err);\n            }\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 608,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"name\",\n            value: (editEmployee === null || editEmployee === void 0 ? void 0 : editEmployee.name) || '',\n            onChange: e => setEditEmployee(prev => ({\n              ...prev,\n              name: e.target.value\n            })),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 609,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Email:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 618,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            name: \"email\",\n            value: (editEmployee === null || editEmployee === void 0 ? void 0 : editEmployee.email) || '',\n            onChange: e => setEditEmployee(prev => ({\n              ...prev,\n              email: e.target.value\n            })),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 619,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Phone:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 628,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"phone\",\n            value: (editEmployee === null || editEmployee === void 0 ? void 0 : editEmployee.phone) || '',\n            onChange: e => setEditEmployee(prev => ({\n              ...prev,\n              phone: e.target.value\n            })),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 629,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Role:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 638,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"role\",\n            value: (editEmployee === null || editEmployee === void 0 ? void 0 : editEmployee.role) || '',\n            onChange: e => setEditEmployee(prev => ({\n              ...prev,\n              role: e.target.value\n            })),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"employee\",\n              children: \"Employee\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 646,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"admin\",\n              children: \"Admin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 647,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 639,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Profile Photo:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 649,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \"image/*\",\n            onChange: e => setEditEmployee(prev => ({\n              ...prev,\n              photoFile: e.target.files[0]\n            }))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 650,\n            columnNumber: 25\n          }, this), (editEmployee === null || editEmployee === void 0 ? void 0 : editEmployee.photoFile) && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: URL.createObjectURL(editEmployee.photoFile),\n            alt: \"Preview\",\n            style: {\n              width: '100px',\n              height: '100px',\n              objectFit: 'cover',\n              borderRadius: '8px',\n              margin: '10px 0'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 662,\n            columnNumber: 29\n          }, this), !(editEmployee !== null && editEmployee !== void 0 && editEmployee.photoFile) && (editEmployee === null || editEmployee === void 0 ? void 0 : editEmployee.photoData) && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: editEmployee.photoData,\n            alt: \"Current\",\n            style: {\n              width: '100px',\n              height: '100px',\n              objectFit: 'cover',\n              borderRadius: '8px',\n              margin: '10px 0'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 676,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Save Changes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 689,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => setIsEditModalOpen(false),\n            className: \"cancel-button\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 690,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 563,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 556,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 701,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 339,\n    columnNumber: 9\n  }, this);\n}\n_s(EmployeesScreen, \"f3XkdZLY4lBUSoSC0o5XtTFk85s=\");\n_c = EmployeesScreen;\nexport default EmployeesScreen;\nvar _c;\n$RefreshReg$(_c, \"EmployeesScreen\");","map":{"version":3,"names":["React","useState","useEffect","Modal","toast","ToastContainer","ThreeDots","Navbar","employeesData","getUsers","removeCompanyFromUser","addUser","updateUserCompanies","updateUser","removeUserFromCompany","addEmployeeToCompany","jsxDEV","_jsxDEV","setAppElement","EmployeesScreen","_s","employees","setEmployees","newEmployee","setNewEmployee","name","email","phone","role","password","photoFile","isLoading","setIsLoading","isProcessing","setIsProcessing","error","setError","loggedUser","setLoggedUser","isModalOpen","setIsModalOpen","isEditModalOpen","setIsEditModalOpen","isConfirmDeleteModalOpen","setIsConfirmDeleteModalOpen","editEmployee","setEditEmployee","employeeToDelete","setEmployeeToDelete","openCards","setOpenCards","searchQuery","setSearchQuery","filterRole","setFilterRole","fetchEmployees","_loggedUser$company","JSON","parse","localStorage","getItem","companyId","company","id","data","usersWithIds","Object","entries","map","user","filteredEmployees","filter","_user$companyIds","companyIds","some","err","openConfirmDeleteModal","employee","closeConfirmDeleteModal","handleDeleteConfirmed","_loggedUser$company2","success","console","handleChange","e","value","target","prev","handleAddEmployee","preventDefault","photoDataUrl","reader","FileReader","file","Promise","resolve","reject","onloadend","result","onerror","readAsDataURL","allUsers","existingUser","values","find","isUserInUI","info","addedEmployee","photoData","toggleCard","handleEditClick","handleLoadEmployeesFromJSON","newEmployees","_existingUser$company","isInCompany","updatedUsers","_user$companyIds2","length","handleDeleteAllEmployees","employeesToDelete","toLowerCase","startsWith","children","fileName","_jsxFileName","lineNumber","columnNumber","className","type","placeholder","onChange","height","width","radius","color","ariaLabel","wrapperStyle","display","justifyContent","marginTop","onClick","src","alt","stopPropagation","visible","isOpen","onRequestClose","overlayClassName","onSubmit","required","accept","files","URL","createObjectURL","style","objectFit","borderRadius","margin","updatedPhotoData","updatedEmployee","prevEmployees","_c","$RefreshReg$"],"sources":["/Users/dorlevi/IdeaProjects/newShiftWise/client/src/components/EmployeesScreen.js"],"sourcesContent":["// React & state\nimport React, { useState, useEffect } from 'react';\n\n// UI Components & Libraries\nimport Modal from 'react-modal';\nimport { toast, ToastContainer } from 'react-toastify';\nimport { ThreeDots } from 'react-loader-spinner';\nimport Navbar from '../components/Navbar';\n\n// Styles\nimport 'react-toastify/dist/ReactToastify.css';\nimport '../styles/EmployeesScreen.css';\nimport '../styles/Navbar.css';\n\n// Data\nimport employeesData from '../data/emps.json'; // יש לוודא שהקובץ נמצא בתיקייה data\n\n// Services\nimport { getUsers, removeCompanyFromUser, addUser, updateUserCompanies, updateUser } from '../services/userService';\nimport { removeUserFromCompany, addEmployeeToCompany } from '../services/companyService';\n\nModal.setAppElement('#root');\n\nfunction EmployeesScreen() {\n\n    // Employees data\n    const [employees, setEmployees] = useState([]);\n\n    // Form data\n    const [newEmployee, setNewEmployee] = useState({\n        name: '', email: '', phone: '', role: 'employee', password: '', photoFile: null\n    });\n\n    // App state\n    const [isLoading, setIsLoading] = useState(true);\n    const [isProcessing, setIsProcessing] = useState(false);\n    const [error, setError] = useState('');\n    const [loggedUser, setLoggedUser] = useState(null);\n\n    // Modals\n    const [isModalOpen, setIsModalOpen] = useState(false);\n    const [isEditModalOpen, setIsEditModalOpen] = useState(false);\n    const [isConfirmDeleteModalOpen, setIsConfirmDeleteModalOpen] = useState(false);\n\n    // Edit/delete handlers\n    const [editEmployee, setEditEmployee] = useState(null);\n    const [employeeToDelete, setEmployeeToDelete] = useState(null);\n\n    // UI helpers\n    const [openCards, setOpenCards] = useState({});\n    const [searchQuery, setSearchQuery] = useState('');\n    const [filterRole, setFilterRole] = useState('all');\n\n    // On component mount, fetch the list of employees associated with the logged-in user's company:\n    // - Retrieve the logged-in user from localStorage.\n    // - Extract the company ID and validate it.\n    // - Fetch all users from the database.\n    // - Filter users to include only those who belong to the current company.\n    // - Update the local employee list state.\n    // - Handle loading and error states appropriately.\n    useEffect(() => {\n        const fetchEmployees = async () => {\n            try {\n                const loggedUser = JSON.parse(localStorage.getItem('user'));\n                setLoggedUser(loggedUser);\n                const companyId = loggedUser?.company?.id;\n\n                if (!companyId) {\n                    setError('No company information found.');\n                    return;\n                }\n\n                const data = await getUsers();\n                const usersWithIds = data ? Object.entries(data).map(([id, user]) => ({ id, ...user })) : [];\n                const filteredEmployees = usersWithIds.filter((user) =>\n                    user.companyIds?.some((company) => company.companyId === companyId)\n                );\n\n                setEmployees(filteredEmployees);\n            } catch (err) {\n                setError('Failed to fetch employees.');\n            } finally {\n                setIsLoading(false);\n            }\n        };\n\n        fetchEmployees();\n    }, []);\n\n    // Open the confirmation modal for deleting an employee.\n    // Stores the selected employee in state for later use.\n    const openConfirmDeleteModal = (employee) => {\n        setEmployeeToDelete(employee);\n        setIsConfirmDeleteModalOpen(true);\n    };\n\n    // Close the confirmation modal and clear the selected employee.\n    const closeConfirmDeleteModal = () => {\n        setIsConfirmDeleteModalOpen(false);\n        setEmployeeToDelete(null);\n    };\n\n    // Handle confirmed deletion of an employee:\n    // - Validate company information.\n    // - Remove the employee from the user and company records.\n    // - Update the UI to reflect the deletion.\n    // - Display success or error notifications.\n    const handleDeleteConfirmed = async () => {\n        if (!employeeToDelete) return;\n        try {\n            const companyId = loggedUser?.company?.id;\n\n            if (!companyId) {\n                toast.error('No company information found. Please try again.');\n                return;\n            }\n\n            await removeCompanyFromUser(employeeToDelete.id, companyId);\n            await removeUserFromCompany(companyId, employeeToDelete.id);\n\n            setEmployees(employees.filter((employee) => employee.id !== employeeToDelete.id));\n            toast.success('Employee deleted successfully!');\n        } catch (err) {\n            toast.error('Failed to delete employee.');\n            console.error(err);\n        } finally {\n            closeConfirmDeleteModal();\n        }\n    };\n\n    // Handle input changes in the \"Add New Employee\" form.\n    // Updates the corresponding field in the newEmployee state.\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        setNewEmployee((prev) => ({ ...prev, [name]: value }));\n    };\n\n    // Handle submission of the \"Add New Employee\" form:\n    // - Prevent default form submission.\n    // - Check for valid company information.\n    // - Check if a user with the given email already exists:\n    //     - If yes, associate them with the current company.\n    //     - If not, create a new user and associate them with the company.\n    // - Update the employees list in the UI accordingly.\n    // - Show success or error toasts.\n    // - Reset the form and close the modal after successful addition.\n    const handleAddEmployee = async (e) => {\n        e.preventDefault();\n        try {\n            const company = loggedUser?.company;\n\n            if (!company) {\n                toast.error('No company information found. Please try again.');\n                return;\n            }\n\n            // 1. המרת קובץ תמונה ל־Base64 (data URL)\n            let photoDataUrl = '';\n            if (newEmployee.photoFile) {\n                const reader = new FileReader();\n                const file = newEmployee.photoFile;\n\n                photoDataUrl = await new Promise((resolve, reject) => {\n                    reader.onloadend = () => resolve(reader.result);\n                    reader.onerror = reject;\n                    reader.readAsDataURL(file);\n                });\n            }\n\n            const allUsers = await getUsers();\n            const existingUser = Object.values(allUsers).find((user) => user.email === newEmployee.email);\n\n            if (existingUser) {\n                await updateUserCompanies(existingUser, company);\n                await addEmployeeToCompany(company.id, existingUser.id);\n\n                const isUserInUI = employees.some((employee) => employee.id === existingUser.id);\n                if (!isUserInUI) {\n                    setEmployees((prev) => [...prev, existingUser]);\n                }\n\n                toast.info('User already exists, added to the company successfully.');\n            } else {\n                // 2. הוספת משתמש כולל תמונה\n                const addedEmployee = await addUser({\n                    ...newEmployee,\n                    photoData: photoDataUrl // ⬅️ התמונה בבסיס הנתונים\n                });\n\n                await updateUserCompanies(addedEmployee, company);\n                await addEmployeeToCompany(company.id, addedEmployee.id);\n\n                setEmployees((prev) => [...prev, { id: addedEmployee.id, ...addedEmployee }]);\n                toast.success('New user added successfully!');\n            }\n\n            // 3. איפוס הטופס\n            setNewEmployee({ name: '', email: '', phone: '', role: 'employee', password: '', photoFile: null });\n            setIsModalOpen(false);\n        } catch (err) {\n            toast.error('Failed to add employee.');\n            console.error(err);\n        }\n    };\n\n\n    // Toggle the expanded/collapsed state of an employee card by its ID.\n    // If the card is currently open, it will be closed, and vice versa.\n    const toggleCard = (id) => {\n        setOpenCards((prev) => ({\n            ...prev,\n            [id]: !prev[id],\n        }));\n    };\n\n    const handleEditClick = (employee) => {\n        setEditEmployee(employee); // הגדרת העובד הנבחר לעריכה\n        setIsEditModalOpen(true); // פתיחת המודל\n    };\n\n\n    const handleLoadEmployeesFromJSON = async () => {\n        try {\n            if (!loggedUser || !loggedUser.company) {\n                toast.error('No company information found. Please try again.');\n                return;\n            }\n\n            setIsProcessing(true); // הפעלת ה-Loader\n\n            const companyId = loggedUser.company.id;\n            const allUsers = await getUsers();\n\n            const newEmployees = employeesData.filter((employee) => {\n                const existingUser = Object.values(allUsers).find((user) => user.email === employee.email);\n\n                if (!existingUser) {\n                    return true; // משתמש לא קיים כלל - נוסיף אותו\n                }\n\n                const isInCompany = existingUser.companyIds?.some((company) => company.companyId === companyId);\n                return !isInCompany; // אם הוא לא משויך לחברה, נוסיף אותו שוב\n            });\n\n            for (const employee of newEmployees) {\n                const existingUser = Object.values(allUsers).find((user) => user.email === employee.email);\n\n                if (existingUser) {\n                    await updateUserCompanies(existingUser, loggedUser.company);\n                    await addEmployeeToCompany(companyId, existingUser.id);\n                } else {\n                    const addedEmployee = await addUser(employee);\n                    await updateUserCompanies(addedEmployee, loggedUser.company);\n                    await addEmployeeToCompany(companyId, addedEmployee.id);\n                }\n            }\n\n            const updatedUsers = await getUsers();\n            const usersWithIds = Object.entries(updatedUsers).map(([id, user]) => ({ id, ...user }));\n            const filteredEmployees = usersWithIds.filter((user) =>\n                user.companyIds?.some((company) => company.companyId === companyId)\n            );\n\n            setEmployees(filteredEmployees);\n            toast.success(`${newEmployees.length} employees added successfully!`);\n        } catch (error) {\n            toast.error('Failed to load employees from JSON.');\n            console.error(error);\n        } finally {\n            setIsProcessing(false); // כיבוי ה-Loader\n        }\n    };\n\n    // Delete all non-admin employees from the current company:\n    // - Validate that the logged-in user and company info exist.\n    // - Show a loader while processing.\n    // - Filter out all employees who are not admins.\n    // - For each employee, remove their association with the company both in user and company records.\n    // - Update the UI to show only admins.\n    // - Display appropriate success or error messages.\n    const handleDeleteAllEmployees = async () => {\n        try {\n            if (!loggedUser || !loggedUser.company) {\n                toast.error('No company information found. Please try again.');\n                return;\n            }\n\n            setIsProcessing(true); // הפעלת ה-Loader\n\n            const companyId = loggedUser.company.id;\n            const employeesToDelete = employees.filter(employee => employee.role !== 'admin');\n\n            if (employeesToDelete.length === 0) {\n                toast.info('No employees to delete.');\n                return;\n            }\n\n            for (const employee of employeesToDelete) {\n                await removeCompanyFromUser(employee.id, companyId);\n                await removeUserFromCompany(companyId, employee.id);\n            }\n\n            setEmployees(employees.filter(employee => employee.role === 'admin'));\n            toast.success(`${employeesToDelete.length} employees deleted successfully!`);\n        } catch (err) {\n            toast.error('Failed to delete employees.');\n            console.error(err);\n        } finally {\n            setIsProcessing(false); // כיבוי ה-Loader\n        }\n    };\n\n    const filteredEmployees = employees.filter((employee) => {\n        return (\n            (employee.name.toLowerCase().startsWith(searchQuery.toLowerCase()) ||\n                employee.email.toLowerCase().startsWith(searchQuery.toLowerCase())) &&\n            (filterRole === 'all' || employee.role === filterRole)\n        );\n    });\n\n    // Render the EmployeesScreen UI:\n    // - Navbar at the top with a placeholder to maintain layout spacing.\n    // - A search bar and role filter for filtering employees by name/email and role.\n    // - Conditional rendering based on loading/error state:\n    //     - If loading: show loading message.\n    //     - If error: show error message.\n    //     - Else: display a grid of employee cards, each toggleable to show details (email, phone, role),\n    //       with Edit/Delete options depending on role.\n    // - Action buttons below the list for:\n    //     - Adding a new employee via form modal.\n    //     - Loading multiple employees from a JSON file.\n    //     - Deleting all non-admin employees.\n    // - Modals for:\n    //     - Confirming deletion of a single employee.\n    //     - Adding a new employee (form).\n    //     - Editing an existing employee (form).\n    // - Toast notifications container at the bottom for success/error messages.\n    return (\n        <div>\n            <Navbar />\n            <div className=\"navbar-placeholder\"></div>\n            <div className=\"employees-container\">\n                <h1>Employees</h1>\n\n                <div className=\"search-container\">\n                    <input\n                        type=\"text\"\n                        placeholder=\"Search by name or email...\"\n                        value={searchQuery}\n                        onChange={(e) => setSearchQuery(e.target.value)}\n                    />\n                    <select value={filterRole} onChange={(e) => setFilterRole(e.target.value)}>\n                        <option value=\"all\">All Roles</option>\n                        <option value=\"employee\">Employee</option>\n                        <option value=\"admin\">Admin</option>\n                    </select>\n                </div>\n\n                {isLoading ? (\n                    <ThreeDots\n                        height=\"60\"\n                        width=\"60\"\n                        radius=\"9\"\n                        color=\"#3498db\"\n                        ariaLabel=\"loading\"\n                        wrapperStyle={{ display: 'flex', justifyContent: 'center', marginTop: '30px' }}\n                    />\n                ) : error ? (\n                    <p className=\"error\">{error}</p>\n                ) : (\n                    <div className=\"employees-cards\">\n                        {filteredEmployees.map((employee) => (\n\n                            <div\n                                key={employee.id}\n                                className={`employee-card ${openCards[employee.id] ? 'open' : 'closed'}`}\n                                onClick={() => toggleCard(employee.id)}\n                            >\n                                <h3>{employee.name}</h3>\n                                {openCards[employee.id] && (\n                                    <div className=\"employee-details-horizontal\">\n                                        {employee.photoData && (\n                                            <img\n                                                src={employee.photoData}\n                                                alt={`${employee.name}'s profile`}\n                                                className=\"employee-photo-horizontal\"\n                                            />\n                                        )}\n                                        <div className=\"employee-info\">\n                                            <p>Email: {employee.email}</p>\n                                            <p>Phone: {employee.phone}</p>\n                                            <p>Role: {employee.role}</p>\n                                            <div className=\"employee-actions\">\n                                                <button\n                                                    className=\"action-button edit\"\n                                                    onClick={(e) => {\n                                                        e.stopPropagation();\n                                                        handleEditClick(employee);\n                                                    }}\n                                                >\n                                                    Edit\n                                                </button>\n                                                {employee.role !== 'admin' && (\n                                                    <button\n                                                        className=\"action-button delete\"\n                                                        onClick={(e) => {\n                                                            e.stopPropagation();\n                                                            openConfirmDeleteModal(employee);\n                                                        }}\n                                                    >\n                                                        Delete\n                                                    </button>\n                                                )}\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                )}\n\n                            </div>\n                        ))}\n\n                    </div>\n                )}\n\n                {isProcessing && (\n                    <ThreeDots\n                        height=\"50\"\n                        width=\"50\"\n                        radius=\"9\"\n                        color=\"#3498db\"\n                        ariaLabel=\"processing\"\n                        wrapperStyle={{ display: 'flex', justifyContent: 'center', marginTop: '20px' }}\n                        visible={true}\n                    />\n                )}\n\n                <button\n                    className=\"toggle-form-button\"\n                    onClick={() => setIsModalOpen(true)}\n                >\n                    Add New Employee\n                </button>\n                <button className=\"toggle-form-button\" onClick={handleLoadEmployeesFromJSON}>\n                    Add Employees from JSON\n                </button>\n                <button\n                    className=\"toggle-form-button delete-all\"\n                    onClick={handleDeleteAllEmployees}\n                >\n                    Delete All Non-Admin Employees\n                </button>\n                <Modal\n                    isOpen={isConfirmDeleteModalOpen}\n                    onRequestClose={closeConfirmDeleteModal}\n                    className=\"confirm-delete-modal\"\n                    overlayClassName=\"modal-overlay\"\n                >\n                    <h2>Confirm Employee Deletion</h2>\n                    <p>\n                        Are you sure you want to remove <strong>{employeeToDelete?.name}</strong> from the company?\n                    </p>\n                    <div className=\"modal-buttons\">\n                        <button className=\"confirm-button\" onClick={handleDeleteConfirmed}>\n                            Confirm\n                        </button>\n                        <button className=\"cancel-button\" onClick={closeConfirmDeleteModal}>\n                            Cancel\n                        </button>\n                    </div>\n                </Modal>\n\n\n                <Modal\n                    isOpen={isModalOpen}\n                    onRequestClose={() => setIsModalOpen(false)}\n                    className=\"modal\"\n                    overlayClassName=\"modal-overlay\"\n                >\n                    <h3>Add New Employee</h3>\n                    <form className=\"addOrEdit-employee-form\" onSubmit={handleAddEmployee}>\n                        <label>Name:</label>\n                        <input\n                            type=\"text\"\n                            name=\"name\"\n                            value={newEmployee.name}\n                            onChange={handleChange}\n                            required\n                        />\n                        <label>Email:</label>\n                        <input\n                            type=\"email\"\n                            name=\"email\"\n                            value={newEmployee.email}\n                            onChange={handleChange}\n                            required\n                        />\n                        <label>Phone:</label>\n                        <input\n                            type=\"text\"\n                            name=\"phone\"\n                            value={newEmployee.phone}\n                            onChange={handleChange}\n                            required\n                        />\n                        <label>Password:</label>\n                        <input\n                            type=\"password\"\n                            name=\"password\"\n                            value={newEmployee.password}\n                            onChange={handleChange}\n                            required\n                        />\n                        <label>Role:</label>\n                        <select name=\"role\" value={newEmployee.role} onChange={handleChange}>\n                            <option value=\"employee\">Employee</option>\n                            <option value=\"admin\">Admin</option>\n                        </select>\n                        <label>Profile Photo:</label>\n                        <input\n                            type=\"file\"\n                            accept=\"image/*\"\n                            onChange={(e) =>\n                                setNewEmployee((prev) => ({\n                                    ...prev,\n                                    photoFile: e.target.files[0]\n                                }))\n                            }\n                        />\n\n                        {newEmployee.photoFile && (\n                            <img\n                                src={URL.createObjectURL(newEmployee.photoFile)}\n                                alt=\"Preview\"\n                                style={{\n                                    width: '100px',\n                                    height: '100px',\n                                    objectFit: 'cover',\n                                    borderRadius: '8px',\n                                    margin: '10px 0'\n                                }}\n                            />\n                        )}\n\n\n                        <button type=\"submit\">Add Employee</button>\n                        <button\n                            type=\"button\"\n                            onClick={() => setIsModalOpen(false)}\n                            className=\"cancel-button\"\n                        >\n                            Cancel\n                        </button>\n                    </form>\n                </Modal>\n                <Modal\n                    isOpen={isEditModalOpen}\n                    onRequestClose={() => setIsEditModalOpen(false)}\n                    className=\"modal\"\n                    overlayClassName=\"modal-overlay\"\n                >\n                    <h3>Edit Employee</h3>\n                    <form\n                        className=\"addOrEdit-employee-form\"\n                        onSubmit={async (e) => {\n                            e.preventDefault();\n                            try {\n                                if (editEmployee && editEmployee.id) {\n                                    // המרת תמונה חדשה ל־Base64, אם קיימת\n                                    let updatedPhotoData = editEmployee.photoData || '';\n                                    if (editEmployee.photoFile) {\n                                        const reader = new FileReader();\n                                        updatedPhotoData = await new Promise((resolve, reject) => {\n                                            reader.onloadend = () => resolve(reader.result);\n                                            reader.onerror = reject;\n                                            reader.readAsDataURL(editEmployee.photoFile);\n                                        });\n                                    }\n\n                                    // קריאה ל-updateUser עם הפרטים המעודכנים כולל תמונה\n                                    const updatedEmployee = await updateUser(editEmployee.id, {\n                                        name: editEmployee.name,\n                                        email: editEmployee.email,\n                                        phone: editEmployee.phone,\n                                        role: editEmployee.role,\n                                        photoData: updatedPhotoData,\n                                    });\n\n                                    // עדכון רשימת העובדים ב-UI\n                                    setEmployees((prevEmployees) =>\n                                        prevEmployees.map((employee) =>\n                                            employee.id === updatedEmployee.id ? updatedEmployee : employee\n                                        )\n                                    );\n\n                                    toast.success('Employee updated successfully!');\n                                }\n\n                                setIsEditModalOpen(false); // סגירת המודל\n                            } catch (err) {\n                                toast.error('Failed to update employee. Please try again.');\n                                console.error(err);\n                            }\n                        }}\n\n                    >\n\n                        <label>Name:</label>\n                        <input\n                            type=\"text\"\n                            name=\"name\"\n                            value={editEmployee?.name || ''}\n                            onChange={(e) =>\n                                setEditEmployee((prev) => ({ ...prev, name: e.target.value }))\n                            }\n                            required\n                        />\n                        <label>Email:</label>\n                        <input\n                            type=\"email\"\n                            name=\"email\"\n                            value={editEmployee?.email || ''}\n                            onChange={(e) =>\n                                setEditEmployee((prev) => ({ ...prev, email: e.target.value }))\n                            }\n                            required\n                        />\n                        <label>Phone:</label>\n                        <input\n                            type=\"text\"\n                            name=\"phone\"\n                            value={editEmployee?.phone || ''}\n                            onChange={(e) =>\n                                setEditEmployee((prev) => ({ ...prev, phone: e.target.value }))\n                            }\n                            required\n                        />\n                        <label>Role:</label>\n                        <select\n                            name=\"role\"\n                            value={editEmployee?.role || ''}\n                            onChange={(e) =>\n                                setEditEmployee((prev) => ({ ...prev, role: e.target.value }))\n                            }\n                        >\n                            <option value=\"employee\">Employee</option>\n                            <option value=\"admin\">Admin</option>\n                        </select>\n                        <label>Profile Photo:</label>\n                        <input\n                            type=\"file\"\n                            accept=\"image/*\"\n                            onChange={(e) =>\n                                setEditEmployee((prev) => ({\n                                    ...prev,\n                                    photoFile: e.target.files[0]\n                                }))\n                            }\n                        />\n\n                        {editEmployee?.photoFile && (\n                            <img\n                                src={URL.createObjectURL(editEmployee.photoFile)}\n                                alt=\"Preview\"\n                                style={{\n                                    width: '100px',\n                                    height: '100px',\n                                    objectFit: 'cover',\n                                    borderRadius: '8px',\n                                    margin: '10px 0'\n                                }}\n                            />\n                        )}\n\n                        {!editEmployee?.photoFile && editEmployee?.photoData && (\n                            <img\n                                src={editEmployee.photoData}\n                                alt=\"Current\"\n                                style={{\n                                    width: '100px',\n                                    height: '100px',\n                                    objectFit: 'cover',\n                                    borderRadius: '8px',\n                                    margin: '10px 0'\n                                }}\n                            />\n                        )}\n\n                        <button type=\"submit\">Save Changes</button>\n                        <button\n                            type=\"button\"\n                            onClick={() => setIsEditModalOpen(false)}\n                            className=\"cancel-button\"\n                        >\n                            Cancel\n                        </button>\n                    </form>\n                </Modal>\n\n            </div>\n            <ToastContainer />\n        </div>\n    );\n}\n\nexport default EmployeesScreen;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}