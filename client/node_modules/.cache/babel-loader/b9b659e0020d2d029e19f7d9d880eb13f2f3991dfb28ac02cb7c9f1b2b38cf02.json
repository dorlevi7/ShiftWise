{"ast":null,"code":"var _jsxFileName = \"/Users/dorlevi/IdeaProjects/newShiftWise/client/src/components/ScheduleScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { getAllAvailabilities } from '../services/availabilityService';\nimport Navbar from '../components/Navbar';\nimport '../styles/ScheduleScreen.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ScheduleScreen() {\n  _s();\n  const [availability, setAvailability] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [weekKey, setWeekKey] = useState('week_2025_01_19'); // Default week key\n  const [currentCompany, setCurrentCompany] = useState(null);\n  useEffect(() => {\n    const fetchAvailability = async () => {\n      try {\n        var _loggedUser$company;\n        const loggedUser = JSON.parse(localStorage.getItem('user'));\n        const companyId = loggedUser === null || loggedUser === void 0 ? void 0 : (_loggedUser$company = loggedUser.company) === null || _loggedUser$company === void 0 ? void 0 : _loggedUser$company.id;\n        if (!companyId) {\n          setError('No company information found.');\n          return;\n        }\n        setCurrentCompany(companyId);\n        const data = await getAllAvailabilities(companyId, weekKey);\n        setAvailability(data);\n      } catch (err) {\n        setError('Failed to fetch availability.');\n        console.error(err);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchAvailability();\n  }, [weekKey]);\n  const handleWeekChange = direction => {\n    // Logic to adjust weekKey based on direction (previous/next)\n    const [prefix, year, month, day] = weekKey.split('_');\n    const date = new Date(`${year}-${month}-${day}`);\n    date.setDate(date.getDate() + (direction === 'next' ? 7 : -7));\n    const newWeekKey = `week_${date.getFullYear()}_${String(date.getMonth() + 1).padStart(2, '0')}_${String(date.getDate()).padStart(2, '0')}`;\n    setWeekKey(newWeekKey);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"schedule-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Weekly Schedule\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"week-navigation\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleWeekChange('prev'),\n          children: \"Previous Week\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: weekKey.replace(/_/g, ' ')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleWeekChange('next'),\n          children: \"Next Week\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading schedule...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this) : error ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"schedule-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Employee\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Sunday\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Monday\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Tuesday\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Wednesday\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Thursday\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Friday\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Saturday\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: Object.entries(availability || {}).map(([userId, userData]) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: userData.name || 'Unknown'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 37\n            }, this), ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'].map(day => /*#__PURE__*/_jsxDEV(\"td\", {\n              children: Object.entries(userData || {}).map(([shift, days]) => days[day] ? /*#__PURE__*/_jsxDEV(\"div\", {\n                children: shift\n              }, shift, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 65\n              }, this) : null)\n            }, day, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 45\n            }, this))]\n          }, userId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n_s(ScheduleScreen, \"ceLEjjf6iSBADX98UrtylMssCYU=\");\n_c = ScheduleScreen;\nexport default ScheduleScreen;\nvar _c;\n$RefreshReg$(_c, \"ScheduleScreen\");","map":{"version":3,"names":["React","useState","useEffect","getAllAvailabilities","Navbar","jsxDEV","_jsxDEV","ScheduleScreen","_s","availability","setAvailability","isLoading","setIsLoading","error","setError","weekKey","setWeekKey","currentCompany","setCurrentCompany","fetchAvailability","_loggedUser$company","loggedUser","JSON","parse","localStorage","getItem","companyId","company","id","data","err","console","handleWeekChange","direction","prefix","year","month","day","split","date","Date","setDate","getDate","newWeekKey","getFullYear","String","getMonth","padStart","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","replace","Object","entries","map","userId","userData","name","shift","days","_c","$RefreshReg$"],"sources":["/Users/dorlevi/IdeaProjects/newShiftWise/client/src/components/ScheduleScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { getAllAvailabilities } from '../services/availabilityService';\nimport Navbar from '../components/Navbar';\nimport '../styles/ScheduleScreen.css';\n\nfunction ScheduleScreen() {\n    const [availability, setAvailability] = useState([]);\n    const [isLoading, setIsLoading] = useState(true);\n    const [error, setError] = useState('');\n    const [weekKey, setWeekKey] = useState('week_2025_01_19'); // Default week key\n    const [currentCompany, setCurrentCompany] = useState(null);\n\n    useEffect(() => {\n        const fetchAvailability = async () => {\n            try {\n                const loggedUser = JSON.parse(localStorage.getItem('user'));\n                const companyId = loggedUser?.company?.id;\n\n                if (!companyId) {\n                    setError('No company information found.');\n                    return;\n                }\n\n                setCurrentCompany(companyId);\n\n                const data = await getAllAvailabilities(companyId, weekKey);\n                setAvailability(data);\n            } catch (err) {\n                setError('Failed to fetch availability.');\n                console.error(err);\n            } finally {\n                setIsLoading(false);\n            }\n        };\n\n        fetchAvailability();\n    }, [weekKey]);\n\n    const handleWeekChange = (direction) => {\n        // Logic to adjust weekKey based on direction (previous/next)\n        const [prefix, year, month, day] = weekKey.split('_');\n        const date = new Date(`${year}-${month}-${day}`);\n        date.setDate(date.getDate() + (direction === 'next' ? 7 : -7));\n\n        const newWeekKey = `week_${date.getFullYear()}_${String(date.getMonth() + 1).padStart(2, '0')}_${String(\n            date.getDate()\n        ).padStart(2, '0')}`;\n        setWeekKey(newWeekKey);\n    };\n\n    return (\n        <div>\n            <Navbar />\n            <div className=\"schedule-container\">\n                <h2>Weekly Schedule</h2>\n                <div className=\"week-navigation\">\n                    <button onClick={() => handleWeekChange('prev')}>Previous Week</button>\n                    <span>{weekKey.replace(/_/g, ' ')}</span>\n                    <button onClick={() => handleWeekChange('next')}>Next Week</button>\n                </div>\n\n                {isLoading ? (\n                    <p>Loading schedule...</p>\n                ) : error ? (\n                    <p className=\"error\">{error}</p>\n                ) : (\n                    <table className=\"schedule-table\">\n                        <thead>\n                            <tr>\n                                <th>Employee</th>\n                                <th>Sunday</th>\n                                <th>Monday</th>\n                                <th>Tuesday</th>\n                                <th>Wednesday</th>\n                                <th>Thursday</th>\n                                <th>Friday</th>\n                                <th>Saturday</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {Object.entries(availability || {}).map(([userId, userData]) => (\n                                <tr key={userId}>\n                                    <td>{userData.name || 'Unknown'}</td>\n                                    {['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'].map(\n                                        (day) => (\n                                            <td key={day}>\n                                                {Object.entries(userData || {}).map(([shift, days]) =>\n                                                    days[day] ? <div key={shift}>{shift}</div> : null\n                                                )}\n                                            </td>\n                                        )\n                                    )}\n                                </tr>\n                            ))}\n                        </tbody>\n                    </table>\n                )}\n            </div>\n        </div>\n    );\n}\n\nexport default ScheduleScreen;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}