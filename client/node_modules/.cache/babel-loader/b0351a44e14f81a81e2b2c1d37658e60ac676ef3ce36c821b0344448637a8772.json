{"ast":null,"code":"var _jsxFileName = \"/Users/dorlevi/IdeaProjects/newShiftWise/client/src/components/NotificationsScreen.js\",\n  _s = $RefreshSig$();\n// src/components/NotificationsScreen.js\nimport React, { useEffect, useState } from 'react';\nimport { getUserNotifications, markAsRead } from '../services/notificationService';\nimport '../styles/NotificationsScreen.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NotificationsScreen() {\n  _s();\n  var _user$company, _user$user;\n  const [notifications, setNotifications] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const user = JSON.parse(localStorage.getItem('user'));\n  const companyId = user === null || user === void 0 ? void 0 : (_user$company = user.company) === null || _user$company === void 0 ? void 0 : _user$company.id;\n  const userId = user === null || user === void 0 ? void 0 : (_user$user = user.user) === null || _user$user === void 0 ? void 0 : _user$user.id;\n  useEffect(() => {\n    const fetchNotifications = async () => {\n      try {\n        const data = await getUserNotifications(companyId, userId);\n        const formatted = Object.entries(data || {}).map(([id, value]) => ({\n          id,\n          ...value\n        }));\n        setNotifications(formatted.sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp)));\n      } catch (err) {\n        setError('Failed to load notifications.');\n        console.error(err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    if (companyId && userId) {\n      fetchNotifications();\n    }\n  }, [companyId, userId]);\n  const handleMarkAsRead = async notificationId => {\n    await markAsRead(companyId, userId, notificationId);\n    setNotifications(prev => prev.map(n => n.id === notificationId ? {\n      ...n,\n      read: true\n    } : n));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"notifications-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Notifications\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }, this) : error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }, this) : notifications.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No notifications.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"notification-list\",\n      children: notifications.map(n => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: `notification-item ${n.read ? 'read' : 'unread'}`,\n        onClick: () => {\n          if (!n.read) handleMarkAsRead(n.id);\n          if (n.linkTo) window.location.href = n.linkTo;\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message\",\n          children: n.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"time\",\n          children: new Date(n.timestamp).toLocaleString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 29\n        }, this)]\n      }, n.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n_s(NotificationsScreen, \"AS6q/RMxLSF4b91ocJSzqFAqRUg=\");\n_c = NotificationsScreen;\nexport default NotificationsScreen;\nvar _c;\n$RefreshReg$(_c, \"NotificationsScreen\");","map":{"version":3,"names":["React","useEffect","useState","getUserNotifications","markAsRead","jsxDEV","_jsxDEV","NotificationsScreen","_s","_user$company","_user$user","notifications","setNotifications","loading","setLoading","error","setError","user","JSON","parse","localStorage","getItem","companyId","company","id","userId","fetchNotifications","data","formatted","Object","entries","map","value","sort","a","b","Date","timestamp","err","console","handleMarkAsRead","notificationId","prev","n","read","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","onClick","linkTo","window","location","href","message","toLocaleString","_c","$RefreshReg$"],"sources":["/Users/dorlevi/IdeaProjects/newShiftWise/client/src/components/NotificationsScreen.js"],"sourcesContent":["// src/components/NotificationsScreen.js\nimport React, { useEffect, useState } from 'react';\nimport { getUserNotifications, markAsRead } from '../services/notificationService';\nimport '../styles/NotificationsScreen.css';\n\nfunction NotificationsScreen() {\n    const [notifications, setNotifications] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState('');\n    const user = JSON.parse(localStorage.getItem('user'));\n    const companyId = user?.company?.id;\n    const userId = user?.user?.id;\n\n    useEffect(() => {\n        const fetchNotifications = async () => {\n            try {\n                const data = await getUserNotifications(companyId, userId);\n                const formatted = Object.entries(data || {}).map(([id, value]) => ({\n                    id,\n                    ...value\n                }));\n                setNotifications(formatted.sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp)));\n            } catch (err) {\n                setError('Failed to load notifications.');\n                console.error(err);\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        if (companyId && userId) {\n            fetchNotifications();\n        }\n    }, [companyId, userId]);\n\n    const handleMarkAsRead = async (notificationId) => {\n        await markAsRead(companyId, userId, notificationId);\n        setNotifications((prev) =>\n            prev.map((n) => (n.id === notificationId ? { ...n, read: true } : n))\n        );\n    };\n\n    return (\n        <div className=\"notifications-screen\">\n            <h1>Notifications</h1>\n            {loading ? (\n                <p>Loading...</p>\n            ) : error ? (\n                <p className=\"error\">{error}</p>\n            ) : notifications.length === 0 ? (\n                <p>No notifications.</p>\n            ) : (\n                <ul className=\"notification-list\">\n                    {notifications.map((n) => (\n                        <li\n                            key={n.id}\n                            className={`notification-item ${n.read ? 'read' : 'unread'}`}\n                            onClick={() => {\n                                if (!n.read) handleMarkAsRead(n.id);\n                                if (n.linkTo) window.location.href = n.linkTo;\n                            }}\n                        >\n                            <div className=\"message\">{n.message}</div>\n                            <div className=\"time\">{new Date(n.timestamp).toLocaleString()}</div>\n                        </li>\n                    ))}\n                </ul>\n            )}\n        </div>\n    );\n}\n\nexport default NotificationsScreen;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}