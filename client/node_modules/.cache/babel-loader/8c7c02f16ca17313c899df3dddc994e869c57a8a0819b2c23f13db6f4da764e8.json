{"ast":null,"code":"var _jsxFileName = \"/Users/dorlevi/IdeaProjects/newShiftWise/client/src/components/ProfileScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Navbar from './Navbar';\nimport Loader from './Loader';\nimport BackgroundWrapper from './BackgroundWrapper';\nimport Modal from 'react-modal';\nimport { toast, ToastContainer } from 'react-toastify';\nimport { getUsers, updateUser } from '../services/userService';\nimport '../styles/ProfileScreen.css';\nimport '../styles/Navbar.css';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { fileToBase64 } from '../utils/fileUtils';\nimport EditProfileModal from '../components/EditProfileModal';\nimport { getLoggedInUser, fetchUserFromDB } from '../utils/userUtils';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nModal.setAppElement('#root');\nconst ProfileScreen = () => {\n  _s();\n  var _userData$company;\n  const [userData, setUserData] = useState(null);\n  const [profileUser, setProfileUser] = useState(null);\n  const [isEditModalOpen, setIsEditModalOpen] = useState(false);\n  const navigate = useNavigate();\n  useEffect(() => {\n    loadUserData();\n  }, [navigate]);\n  const loadUserData = async () => {\n    const loggedUser = getLoggedInUser();\n    if (!loggedUser) return;\n    setUserData(loggedUser);\n    const matchedUser = await fetchUserFromDB(loggedUser.user.id);\n    if (matchedUser) {\n      setProfileUser(matchedUser);\n      console.log(\"✅ Full user from DB:\", matchedUser);\n    }\n  };\n  const getLoggedInUser = () => {\n    const loggedUser = JSON.parse(localStorage.getItem('user'));\n    if (!loggedUser) {\n      navigate('/');\n      return null;\n    }\n    return loggedUser;\n  };\n  const fetchUserFromDB = async userId => {\n    try {\n      const allUsers = await getUsers();\n      const usersWithIds = Object.entries(allUsers).map(([id, user]) => ({\n        id,\n        ...user\n      }));\n      return usersWithIds.find(u => u.id === userId);\n    } catch (error) {\n      console.error(\"❌ Error fetching user from DB:\", error);\n      return null;\n    }\n  };\n  const handleUpdate = async e => {\n    e.preventDefault();\n    try {\n      let updatedPhotoData = profileUser.photoData || '';\n      if (profileUser.photoFile) {\n        updatedPhotoData = await fileToBase64(profileUser.photoFile);\n      }\n      const updated = await updateUser(profileUser.id, {\n        name: profileUser.name,\n        email: profileUser.email,\n        phone: profileUser.phone,\n        role: profileUser.role,\n        photoData: updatedPhotoData\n      });\n      setProfileUser(updated);\n      toast.success('Profile updated!');\n      setIsEditModalOpen(false);\n    } catch (err) {\n      toast.error('Update failed.');\n      console.error(err);\n    }\n  };\n  if (!userData || !profileUser) return /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 43\n  }, this);\n  return /*#__PURE__*/_jsxDEV(BackgroundWrapper, {\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navbar-placeholder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: [\"Welcome, \", profileUser.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Email: \", profileUser.email]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Phone: \", profileUser.phone]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Company: \", ((_userData$company = userData.company) === null || _userData$company === void 0 ? void 0 : _userData$company.name) || 'N/A']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Role: \", profileUser.role]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: profileUser.photoData || '/images/Profile.jpeg',\n            alt: \"Profile\",\n            className: \"employee-photo-horizontal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profile-buttons-vertical\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setIsEditModalOpen(true),\n              children: \"Edit Profile\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => navigate('/home'),\n              children: \"Back to Home\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(EditProfileModal, {\n        isOpen: isEditModalOpen,\n        onClose: () => setIsEditModalOpen(false),\n        profileUser: profileUser,\n        setProfileUser: setProfileUser,\n        onSubmit: handleUpdate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 9\n  }, this);\n};\n_s(ProfileScreen, \"56FGzn/kPOtcOQF4xh107zJwn0I=\", false, function () {\n  return [useNavigate];\n});\n_c = ProfileScreen;\nexport default ProfileScreen;\nvar _c;\n$RefreshReg$(_c, \"ProfileScreen\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","Navbar","Loader","BackgroundWrapper","Modal","toast","ToastContainer","getUsers","updateUser","fileToBase64","EditProfileModal","getLoggedInUser","fetchUserFromDB","jsxDEV","_jsxDEV","Fragment","_Fragment","setAppElement","ProfileScreen","_s","_userData$company","userData","setUserData","profileUser","setProfileUser","isEditModalOpen","setIsEditModalOpen","navigate","loadUserData","loggedUser","matchedUser","user","id","console","log","JSON","parse","localStorage","getItem","userId","allUsers","usersWithIds","Object","entries","map","find","u","error","handleUpdate","e","preventDefault","updatedPhotoData","photoData","photoFile","updated","name","email","phone","role","success","err","fileName","_jsxFileName","lineNumber","columnNumber","children","className","company","src","alt","onClick","isOpen","onClose","onSubmit","_c","$RefreshReg$"],"sources":["/Users/dorlevi/IdeaProjects/newShiftWise/client/src/components/ProfileScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Navbar from './Navbar';\nimport Loader from './Loader';\nimport BackgroundWrapper from './BackgroundWrapper';\n\nimport Modal from 'react-modal';\nimport { toast, ToastContainer } from 'react-toastify';\nimport { getUsers, updateUser } from '../services/userService';\nimport '../styles/ProfileScreen.css';\nimport '../styles/Navbar.css';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { fileToBase64 } from '../utils/fileUtils';\nimport EditProfileModal from '../components/EditProfileModal';\nimport { getLoggedInUser, fetchUserFromDB } from '../utils/userUtils';\n\nModal.setAppElement('#root');\n\nconst ProfileScreen = () => {\n    const [userData, setUserData] = useState(null);\n    const [profileUser, setProfileUser] = useState(null);\n    const [isEditModalOpen, setIsEditModalOpen] = useState(false);\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        loadUserData();\n    }, [navigate]);\n\n    const loadUserData = async () => {\n        const loggedUser = getLoggedInUser();\n        if (!loggedUser) return;\n\n        setUserData(loggedUser);\n\n        const matchedUser = await fetchUserFromDB(loggedUser.user.id);\n        if (matchedUser) {\n            setProfileUser(matchedUser);\n            console.log(\"✅ Full user from DB:\", matchedUser);\n        }\n    };\n\n    const getLoggedInUser = () => {\n        const loggedUser = JSON.parse(localStorage.getItem('user'));\n        if (!loggedUser) {\n            navigate('/');\n            return null;\n        }\n        return loggedUser;\n    };\n\n    const fetchUserFromDB = async (userId) => {\n        try {\n            const allUsers = await getUsers();\n            const usersWithIds = Object.entries(allUsers).map(([id, user]) => ({ id, ...user }));\n            return usersWithIds.find((u) => u.id === userId);\n        } catch (error) {\n            console.error(\"❌ Error fetching user from DB:\", error);\n            return null;\n        }\n    };\n\n    const handleUpdate = async (e) => {\n        e.preventDefault();\n        try {\n            let updatedPhotoData = profileUser.photoData || '';\n            if (profileUser.photoFile) {\n                updatedPhotoData = await fileToBase64(profileUser.photoFile);\n            }\n\n            const updated = await updateUser(profileUser.id, {\n                name: profileUser.name,\n                email: profileUser.email,\n                phone: profileUser.phone,\n                role: profileUser.role,\n                photoData: updatedPhotoData\n            });\n\n            setProfileUser(updated);\n            toast.success('Profile updated!');\n            setIsEditModalOpen(false);\n        } catch (err) {\n            toast.error('Update failed.');\n            console.error(err);\n        }\n    };\n\n    if (!userData || !profileUser) return <Loader />;\n\n\n\n    return (\n        <BackgroundWrapper >\n            <>\n                <Navbar />\n                <div className=\"navbar-placeholder\"></div>\n                <div className=\"profile-container\">\n                    <div className=\"profile-info\">\n                        <h1>Welcome, {profileUser.name}</h1>\n                        <p>Email: {profileUser.email}</p>\n                        <p>Phone: {profileUser.phone}</p>\n                        <p>Company: {userData.company?.name || 'N/A'}</p>\n                        <p>Role: {profileUser.role}</p>\n                        <img\n                            src={profileUser.photoData || '/images/Profile.jpeg'}\n                            alt=\"Profile\"\n                            className=\"employee-photo-horizontal\"\n                        />\n\n                        <div className=\"profile-buttons-vertical\">\n                            <button onClick={() => setIsEditModalOpen(true)}>Edit Profile</button>\n                            <button onClick={() => navigate('/home')}>Back to Home</button>\n                        </div>\n\n                    </div>\n                </div>\n\n                <EditProfileModal\n                    isOpen={isEditModalOpen}\n                    onClose={() => setIsEditModalOpen(false)}\n                    profileUser={profileUser}\n                    setProfileUser={setProfileUser}\n                    onSubmit={handleUpdate}\n                />\n\n                <ToastContainer />\n            </>\n        </BackgroundWrapper >\n\n    );\n};\n\nexport default ProfileScreen;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}