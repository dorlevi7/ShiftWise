{"ast":null,"code":"var _jsxFileName = \"/Users/dorlevi/IdeaProjects/newShiftWise/client/src/components/StatsScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { getMonthlyStats } from '../services/statsService';\nimport '../styles/StatsScreen.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StatsScreen = () => {\n  _s();\n  const {\n    currentUser,\n    currentCompany\n  } = useAuth();\n  const [stats, setStats] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [month, setMonth] = useState(new Date().getMonth() + 1);\n  const [year, setYear] = useState(new Date().getFullYear());\n  useEffect(() => {\n    const fetchStats = async () => {\n      if (!currentUser || !currentCompany) return;\n      setLoading(true);\n      try {\n        const data = await getMonthlyStats(currentCompany, year, month, currentUser.id);\n        setStats(data || []);\n      } catch (error) {\n        console.error('Error fetching stats:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchStats();\n  }, [currentCompany, currentUser, month, year]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"stats-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Monthly Shift Statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stats-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Month:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          min: \"1\",\n          max: \"12\",\n          value: month,\n          onChange: e => setMonth(parseInt(e.target.value))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Year:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          min: \"2020\",\n          max: \"2099\",\n          value: year,\n          onChange: e => setYear(parseInt(e.target.value))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }, this) : stats.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No stats found for this month.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"stats-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Week\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Night Shifts\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Shabbat Shifts\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Regular Shifts\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: stats.map((stat, idx) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: stat.weekKey\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: stat.nightShifts || 0\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: stat.shabbatShifts || 0\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: stat.regularShifts || 0\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 33\n          }, this)]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n_s(StatsScreen, \"33werIqPRuiOepyRF9lkbAjV714=\", true);\n_c = StatsScreen;\nexport default StatsScreen;\nvar _c;\n$RefreshReg$(_c, \"StatsScreen\");","map":{"version":3,"names":["React","useEffect","useState","getMonthlyStats","jsxDEV","_jsxDEV","StatsScreen","_s","currentUser","currentCompany","useAuth","stats","setStats","loading","setLoading","month","setMonth","Date","getMonth","year","setYear","getFullYear","fetchStats","data","id","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","min","max","value","onChange","e","parseInt","target","length","map","stat","idx","weekKey","nightShifts","shabbatShifts","regularShifts","_c","$RefreshReg$"],"sources":["/Users/dorlevi/IdeaProjects/newShiftWise/client/src/components/StatsScreen.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { getMonthlyStats } from '../services/statsService';\nimport '../styles/StatsScreen.css';\n\nconst StatsScreen = () => {\n    const { currentUser, currentCompany } = useAuth();\n    const [stats, setStats] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [month, setMonth] = useState(new Date().getMonth() + 1);\n    const [year, setYear] = useState(new Date().getFullYear());\n\n    useEffect(() => {\n        const fetchStats = async () => {\n            if (!currentUser || !currentCompany) return;\n\n            setLoading(true);\n            try {\n                const data = await getMonthlyStats(currentCompany, year, month, currentUser.id);\n                setStats(data || []);\n            } catch (error) {\n                console.error('Error fetching stats:', error);\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        fetchStats();\n    }, [currentCompany, currentUser, month, year]);\n\n    return (\n        <div className=\"stats-screen\">\n            <h2>Monthly Shift Statistics</h2>\n\n            <div className=\"stats-controls\">\n                <label>\n                    Month:\n                    <input\n                        type=\"number\"\n                        min=\"1\"\n                        max=\"12\"\n                        value={month}\n                        onChange={(e) => setMonth(parseInt(e.target.value))}\n                    />\n                </label>\n                <label>\n                    Year:\n                    <input\n                        type=\"number\"\n                        min=\"2020\"\n                        max=\"2099\"\n                        value={year}\n                        onChange={(e) => setYear(parseInt(e.target.value))}\n                    />\n                </label>\n            </div>\n\n            {loading ? (\n                <p>Loading...</p>\n            ) : stats.length === 0 ? (\n                <p>No stats found for this month.</p>\n            ) : (\n                <table className=\"stats-table\">\n                    <thead>\n                        <tr>\n                            <th>Week</th>\n                            <th>Night Shifts</th>\n                            <th>Shabbat Shifts</th>\n                            <th>Regular Shifts</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {stats.map((stat, idx) => (\n                            <tr key={idx}>\n                                <td>{stat.weekKey}</td>\n                                <td>{stat.nightShifts || 0}</td>\n                                <td>{stat.shabbatShifts || 0}</td>\n                                <td>{stat.regularShifts || 0}</td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </table>\n            )}\n        </div>\n    );\n};\n\nexport default StatsScreen;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}