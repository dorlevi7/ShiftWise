{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:5000/api/availability';\n\n// שמירת זמינות\nexport const saveAvailability = async (companyId, weekKey, userId, availability) => {\n  try {\n    // הוספת סטטוס דיפולטי 'default' אם לא קיים\n    const updatedAvailability = availability.map(item => ({\n      ...item,\n      status: item.status || 'default' // אם לא קיים סטטוס, הוסף 'default'\n    }));\n    const response = await axios.post(`${API_URL}/${companyId}/${weekKey}/${userId}`, updatedAvailability);\n    return response.data; // מחזיר את תשובת השרת\n  } catch (error) {\n    console.error('Error saving availability:', error.message);\n    throw error; // זורק את השגיאה לטיפול נוסף\n  }\n};\n\n// שליפת זמינות\nexport const getAvailability = async (companyId, weekKey, userId) => {\n  try {\n    const response = await axios.get(`${API_URL}/${companyId}/${weekKey}/${userId}`);\n\n    // עדכון סטטוס ל-'default' אם אינו קיים\n    const updatedData = response.data.map(item => ({\n      ...item,\n      status: item.status || 'default'\n    }));\n    return updatedData; // מחזיר את הזמינות המעודכנת\n  } catch (error) {\n    console.error('Error fetching availability:', error.message);\n    throw error; // זורק את השגיאה לטיפול נוסף\n  }\n};\n\n// שמירת הערות שבועיות\nexport const saveWeeklyNotes = async (companyId, weekKey, userId, notes) => {\n  try {\n    const response = await axios.post(`${API_URL}/${companyId}/${weekKey}/${userId}/notes`, {\n      notes\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error saving weekly notes:', error.message);\n    throw error;\n  }\n};\n\n// שליפת כל הזמינויות לשבוע מסוים תחת חברה מסוימת\nexport const getAllAvailabilities = async (companyId, weekKey) => {\n  try {\n    const response = await axios.get(`${API_URL}/${companyId}/${weekKey}`);\n\n    // עדכון סטטוס לכל העובדים אם אינו קיים\n    const updatedData = Object.fromEntries(Object.entries(response.data).map(([userId, userAvailability]) => [userId, userAvailability.map(item => ({\n      ...item,\n      status: item.status || 'default'\n    }))]));\n    return updatedData; // מחזיר את זמינות כל העובדים\n  } catch (error) {\n    console.error('Error fetching all availabilities:', error.message);\n    throw error; // זורק את השגיאה לטיפול נוסף\n  }\n};","map":{"version":3,"names":["axios","API_URL","saveAvailability","companyId","weekKey","userId","availability","updatedAvailability","map","item","status","response","post","data","error","console","message","getAvailability","get","updatedData","saveWeeklyNotes","notes","getAllAvailabilities","Object","fromEntries","entries","userAvailability"],"sources":["/Users/dorlevi/IdeaProjects/newShiftWise/client/src/services/availabilityService.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = 'http://localhost:5000/api/availability';\n\n// שמירת זמינות\nexport const saveAvailability = async (companyId, weekKey, userId, availability) => {\n    try {\n        // הוספת סטטוס דיפולטי 'default' אם לא קיים\n        const updatedAvailability = availability.map((item) => ({\n            ...item,\n            status: item.status || 'default', // אם לא קיים סטטוס, הוסף 'default'\n        }));\n\n        const response = await axios.post(`${API_URL}/${companyId}/${weekKey}/${userId}`, updatedAvailability);\n        return response.data; // מחזיר את תשובת השרת\n    } catch (error) {\n        console.error('Error saving availability:', error.message);\n        throw error; // זורק את השגיאה לטיפול נוסף\n    }\n};\n\n// שליפת זמינות\nexport const getAvailability = async (companyId, weekKey, userId) => {\n    try {\n        const response = await axios.get(`${API_URL}/${companyId}/${weekKey}/${userId}`);\n\n        // עדכון סטטוס ל-'default' אם אינו קיים\n        const updatedData = response.data.map((item) => ({\n            ...item,\n            status: item.status || 'default',\n        }));\n\n        return updatedData; // מחזיר את הזמינות המעודכנת\n    } catch (error) {\n        console.error('Error fetching availability:', error.message);\n        throw error; // זורק את השגיאה לטיפול נוסף\n    }\n};\n\n// שמירת הערות שבועיות\nexport const saveWeeklyNotes = async (companyId, weekKey, userId, notes) => {\n    try {\n        const response = await axios.post(`${API_URL}/${companyId}/${weekKey}/${userId}/notes`, { notes });\n        return response.data;\n    } catch (error) {\n        console.error('Error saving weekly notes:', error.message);\n        throw error;\n    }\n};\n\n// שליפת כל הזמינויות לשבוע מסוים תחת חברה מסוימת\nexport const getAllAvailabilities = async (companyId, weekKey) => {\n    try {\n        const response = await axios.get(`${API_URL}/${companyId}/${weekKey}`);\n\n        // עדכון סטטוס לכל העובדים אם אינו קיים\n        const updatedData = Object.fromEntries(\n            Object.entries(response.data).map(([userId, userAvailability]) => [\n                userId,\n                userAvailability.map((item) => ({\n                    ...item,\n                    status: item.status || 'default',\n                })),\n            ])\n        );\n\n        return updatedData; // מחזיר את זמינות כל העובדים\n    } catch (error) {\n        console.error('Error fetching all availabilities:', error.message);\n        throw error; // זורק את השגיאה לטיפול נוסף\n    }\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}