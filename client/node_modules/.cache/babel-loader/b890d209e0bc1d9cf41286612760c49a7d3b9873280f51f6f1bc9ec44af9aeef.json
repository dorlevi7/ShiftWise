{"ast":null,"code":"var _jsxFileName = \"/Users/dorlevi/IdeaProjects/newShiftWise/client/src/components/NotificationsScreen.js\",\n  _s = $RefreshSig$();\n// React hooks for managing state and lifecycle\nimport React, { useEffect, useState } from 'react';\n\n// Services for handling notifications and vacation requests\nimport { sendNotification, getUserNotifications, markAsRead } from '../services/notificationService';\nimport { getVacationRequest, updateVacationStatus } from '../services/availabilityService';\n\n// Loader component for showing loading spinner\nimport Loader from './Common/Loader';\n// Wrapper component for background image\nimport BackgroundWrapper from './Layouts/BackgroundWrapper';\nimport Navbar from './Navbar';\nimport '../styles/Navbar.css';\nimport '../styles/NotificationsScreen.css';\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction NotificationsScreen() {\n  _s();\n  var _user$company, _user$user;\n  const [notifications, setNotifications] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const user = JSON.parse(localStorage.getItem('user'));\n  const companyId = user === null || user === void 0 ? void 0 : (_user$company = user.company) === null || _user$company === void 0 ? void 0 : _user$company.id;\n  const userId = user === null || user === void 0 ? void 0 : (_user$user = user.user) === null || _user$user === void 0 ? void 0 : _user$user.id;\n  const [rejectionReason, setRejectionReason] = useState('');\n  const [showRejectionInput, setShowRejectionInput] = useState(null);\n  useEffect(() => {\n    window.scrollTo({\n      top: 0\n    });\n  }, []);\n  useEffect(() => {\n    const fetchNotifications = async () => {\n      try {\n        const data = await getUserNotifications(companyId, userId);\n        const formatted = data ? Object.entries(data).map(([id, notif]) => ({\n          id,\n          ...notif\n        })) : [];\n        setNotifications(formatted.reverse());\n      } catch (error) {\n        console.error('Error loading notifications:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    if (companyId && userId) fetchNotifications();\n  }, [companyId, userId]);\n  const handleMarkAsRead = async notifId => {\n    try {\n      await markAsRead(companyId, userId, notifId);\n      setNotifications(prev => prev.map(n => n.id === notifId ? {\n        ...n,\n        read: true\n      } : n));\n    } catch (error) {\n      console.error('Failed to mark as read:', error);\n    }\n  };\n  const handleMarkAllAsRead = async () => {\n    try {\n      const unreadNotifs = notifications.filter(n => !n.read);\n      await Promise.all(unreadNotifs.map(n => markAsRead(companyId, userId, n.id)));\n      setNotifications(prev => prev.map(n => ({\n        ...n,\n        read: true\n      })));\n    } catch (error) {\n      console.error('Failed to mark all as read:', error);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 16\n    }, this);\n  }\n  const handleVacationDecision = async (notif, decision) => {\n    const {\n      vacationUserId,\n      vacationRequestId\n    } = notif.meta || {};\n    if (!vacationUserId || !vacationRequestId) {\n      alert('Missing vacation metadata');\n      return;\n    }\n    try {\n      await updateVacationStatus(companyId, vacationUserId, vacationRequestId, decision);\n      const vacationData = await getVacationRequest(companyId, vacationUserId, vacationRequestId);\n      const {\n        startDate,\n        endDate\n      } = vacationData;\n      const formatDate = dateStr => {\n        const d = new Date(dateStr);\n        return `${d.getDate().toString().padStart(2, '0')}/${(d.getMonth() + 1).toString().padStart(2, '0')}/${d.getFullYear()}`;\n      };\n      const message = `Your vacation request (${formatDate(startDate)} - ${formatDate(endDate)}) was ${decision}.` + (decision === 'rejected' && rejectionReason ? ` \\nReason: ${rejectionReason}` : '');\n      await sendNotification(companyId, vacationUserId, message, '', {\n        requestId: vacationRequestId,\n        decision\n      });\n      toast.success(`Vacation ${decision}`);\n      setNotifications(prev => prev.map(n => n.id === notif.id ? {\n        ...n,\n        meta: {\n          ...n.meta,\n          vacationDecision: decision,\n          reason: rejectionReason || null\n        }\n      } : n));\n      handleMarkAsRead(notif.id);\n      setRejectionReason('');\n      setShowRejectionInput(null);\n    } catch (error) {\n      console.error('Error updating vacation status:', error);\n      toast.error('Failed to update vacation status');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(BackgroundWrapper, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navbar-placeholder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notifications-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"notifications-container\",\n          children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"notifications-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"Notifications\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"/images/ShiftWise_Owl_Notifications.png\",\n              alt: \"Notifications Owl\",\n              className: \"notifications-logo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 25\n          }, this), notifications.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No notifications yet.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"toggle-form-button\",\n              onClick: handleMarkAllAsRead,\n              children: \"Mark All as Read\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: notifications.map(notif => {\n                var _user$user2, _notif$meta, _notif$meta2;\n                return /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: `notification-item ${notif.read ? 'read' : 'unread'}`,\n                  onClick: () => handleMarkAsRead(notif.id),\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    style: {\n                      whiteSpace: 'pre-line'\n                    },\n                    children: notif.message\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 177,\n                    columnNumber: 45\n                  }, this), notif.message.includes('requested vacation') && (user === null || user === void 0 ? void 0 : (_user$user2 = user.user) === null || _user$user2 === void 0 ? void 0 : _user$user2.role) === 'admin' && (notif === null || notif === void 0 ? void 0 : (_notif$meta = notif.meta) === null || _notif$meta === void 0 ? void 0 : _notif$meta.vacationDecision) !== 'approved' && (notif === null || notif === void 0 ? void 0 : (_notif$meta2 = notif.meta) === null || _notif$meta2 === void 0 ? void 0 : _notif$meta2.vacationDecision) !== 'rejected' && /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      marginTop: '10px'\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: e => {\n                        e.stopPropagation();\n                        handleVacationDecision(notif, 'approved');\n                      },\n                      style: {\n                        marginRight: '10px',\n                        padding: '5px 10px',\n                        backgroundColor: '#4CAF50',\n                        color: 'white',\n                        border: 'none',\n                        borderRadius: '5px',\n                        cursor: 'pointer'\n                      },\n                      children: \"Approve\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 184,\n                      columnNumber: 57\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: e => {\n                        e.stopPropagation();\n                        setShowRejectionInput(notif.id);\n                      },\n                      style: {\n                        padding: '5px 10px',\n                        backgroundColor: '#f44336',\n                        color: 'white',\n                        border: 'none',\n                        borderRadius: '5px',\n                        cursor: 'pointer'\n                      },\n                      children: \"Reject\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 202,\n                      columnNumber: 57\n                    }, this), showRejectionInput === notif.id && /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        marginTop: '10px'\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"text\",\n                        placeholder: \"Enter reason for rejection\",\n                        value: rejectionReason,\n                        onChange: e => setRejectionReason(e.target.value),\n                        style: {\n                          width: '100%',\n                          padding: '5px',\n                          marginBottom: '5px'\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 221,\n                        columnNumber: 65\n                      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                        onClick: e => {\n                          e.stopPropagation();\n                          handleVacationDecision(notif, 'rejected');\n                        },\n                        style: {\n                          padding: '5px 10px',\n                          backgroundColor: '#d32f2f',\n                          color: 'white',\n                          border: 'none',\n                          borderRadius: '5px',\n                          cursor: 'pointer'\n                        },\n                        children: \"Confirm Rejection\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 232,\n                        columnNumber: 65\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 220,\n                      columnNumber: 61\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 183,\n                    columnNumber: 53\n                  }, this), notif.linkTo && notif.linkTo.trim() !== '' && (notif.message.includes('Weekly schedule') || notif.message.includes('shift') || notif.message.includes('swap')) && /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: /*#__PURE__*/_jsxDEV(\"a\", {\n                      href: notif.linkTo,\n                      children: \"Go to screen\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 257,\n                      columnNumber: 57\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 256,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      fontSize: '0.8em',\n                      color: '#888'\n                    },\n                    children: [new Date(notif.timestamp).toLocaleDateString('en-GB'), ' ', new Date(notif.timestamp).toLocaleTimeString('en-GB', {\n                      hour: '2-digit',\n                      minute: '2-digit'\n                    })]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 261,\n                    columnNumber: 45\n                  }, this)]\n                }, notif.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 172,\n                  columnNumber: 41\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 9\n  }, this);\n}\n_s(NotificationsScreen, \"mon3RLrHT0Qw25TiklYAizvtwdI=\");\n_c = NotificationsScreen;\nexport default NotificationsScreen;\nvar _c;\n$RefreshReg$(_c, \"NotificationsScreen\");","map":{"version":3,"names":["React","useEffect","useState","sendNotification","getUserNotifications","markAsRead","getVacationRequest","updateVacationStatus","Loader","BackgroundWrapper","Navbar","toast","ToastContainer","jsxDEV","_jsxDEV","Fragment","_Fragment","NotificationsScreen","_s","_user$company","_user$user","notifications","setNotifications","loading","setLoading","user","JSON","parse","localStorage","getItem","companyId","company","id","userId","rejectionReason","setRejectionReason","showRejectionInput","setShowRejectionInput","window","scrollTo","top","fetchNotifications","data","formatted","Object","entries","map","notif","reverse","error","console","handleMarkAsRead","notifId","prev","n","read","handleMarkAllAsRead","unreadNotifs","filter","Promise","all","fileName","_jsxFileName","lineNumber","columnNumber","handleVacationDecision","decision","vacationUserId","vacationRequestId","meta","alert","vacationData","startDate","endDate","formatDate","dateStr","d","Date","getDate","toString","padStart","getMonth","getFullYear","message","requestId","success","vacationDecision","reason","children","className","src","alt","length","onClick","_user$user2","_notif$meta","_notif$meta2","style","whiteSpace","includes","role","marginTop","e","stopPropagation","marginRight","padding","backgroundColor","color","border","borderRadius","cursor","type","placeholder","value","onChange","target","width","marginBottom","linkTo","trim","href","fontSize","timestamp","toLocaleDateString","toLocaleTimeString","hour","minute","_c","$RefreshReg$"],"sources":["/Users/dorlevi/IdeaProjects/newShiftWise/client/src/components/NotificationsScreen.js"],"sourcesContent":["// React hooks for managing state and lifecycle\nimport React, { useEffect, useState } from 'react';\n\n// Services for handling notifications and vacation requests\nimport { sendNotification, getUserNotifications, markAsRead } from '../services/notificationService';\nimport { getVacationRequest, updateVacationStatus } from '../services/availabilityService';\n\n// Loader component for showing loading spinner\nimport Loader from './Common/Loader';\n// Wrapper component for background image\nimport BackgroundWrapper from './Layouts/BackgroundWrapper';\nimport Navbar from './Navbar';\n\nimport '../styles/Navbar.css';\nimport '../styles/NotificationsScreen.css';\n\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nfunction NotificationsScreen() {\n    const [notifications, setNotifications] = useState([]);\n    const [loading, setLoading] = useState(true);\n\n    const user = JSON.parse(localStorage.getItem('user'));\n    const companyId = user?.company?.id;\n    const userId = user?.user?.id;\n\n    const [rejectionReason, setRejectionReason] = useState('');\n    const [showRejectionInput, setShowRejectionInput] = useState(null);\n\n    useEffect(() => {\n        window.scrollTo({ top: 0 });\n    }, []);\n\n    useEffect(() => {\n        const fetchNotifications = async () => {\n            try {\n                const data = await getUserNotifications(companyId, userId);\n                const formatted = data ? Object.entries(data).map(([id, notif]) => ({\n                    id,\n                    ...notif\n                })) : [];\n                setNotifications(formatted.reverse());\n            } catch (error) {\n                console.error('Error loading notifications:', error);\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        if (companyId && userId) fetchNotifications();\n    }, [companyId, userId]);\n\n    const handleMarkAsRead = async (notifId) => {\n        try {\n            await markAsRead(companyId, userId, notifId);\n            setNotifications(prev =>\n                prev.map(n => n.id === notifId ? { ...n, read: true } : n)\n            );\n        } catch (error) {\n            console.error('Failed to mark as read:', error);\n        }\n    };\n\n    const handleMarkAllAsRead = async () => {\n        try {\n            const unreadNotifs = notifications.filter(n => !n.read);\n            await Promise.all(\n                unreadNotifs.map(n => markAsRead(companyId, userId, n.id))\n            );\n            setNotifications(prev =>\n                prev.map(n => ({ ...n, read: true }))\n            );\n        } catch (error) {\n            console.error('Failed to mark all as read:', error);\n        }\n    };\n\n    if (loading) {\n        return <Loader />;\n    }\n\n    const handleVacationDecision = async (notif, decision) => {\n        const { vacationUserId, vacationRequestId } = notif.meta || {};\n\n        if (!vacationUserId || !vacationRequestId) {\n            alert('Missing vacation metadata');\n            return;\n        }\n\n        try {\n            await updateVacationStatus(companyId, vacationUserId, vacationRequestId, decision);\n\n            const vacationData = await getVacationRequest(companyId, vacationUserId, vacationRequestId);\n            const { startDate, endDate } = vacationData;\n\n            const formatDate = (dateStr) => {\n                const d = new Date(dateStr);\n                return `${d.getDate().toString().padStart(2, '0')}/${(d.getMonth() + 1).toString().padStart(2, '0')}/${d.getFullYear()}`;\n            };\n\n            const message = `Your vacation request (${formatDate(startDate)} - ${formatDate(endDate)}) was ${decision}.` +\n                (decision === 'rejected' && rejectionReason ? ` \\nReason: ${rejectionReason}` : '');\n\n            await sendNotification(\n                companyId,\n                vacationUserId,\n                message,\n                '',\n                { requestId: vacationRequestId, decision }\n            );\n\n            toast.success(`Vacation ${decision}`);\n\n            setNotifications(prev =>\n                prev.map(n =>\n                    n.id === notif.id\n                        ? {\n                            ...n,\n                            meta: {\n                                ...n.meta,\n                                vacationDecision: decision,\n                                reason: rejectionReason || null\n                            }\n                        }\n                        : n\n                )\n            );\n\n            handleMarkAsRead(notif.id);\n            setRejectionReason('');\n            setShowRejectionInput(null);\n        } catch (error) {\n            console.error('Error updating vacation status:', error);\n            toast.error('Failed to update vacation status');\n        }\n    };\n\n    return (\n        <BackgroundWrapper >\n            <div>\n                <Navbar />\n                <div className=\"navbar-placeholder\"></div>\n                <div className=\"notifications-wrapper\">\n\n                    <div className=\"notifications-container\">\n                        <ToastContainer />\n\n                        <div className=\"notifications-header\">\n                            <h1>Notifications</h1>\n                            <img\n                                src=\"/images/ShiftWise_Owl_Notifications.png\"\n                                alt=\"Notifications Owl\"\n                                className=\"notifications-logo\"\n                            />\n                        </div>\n                        \n                        {notifications.length === 0 ? (\n                            <p>No notifications yet.</p>\n                        ) : (\n                            <>\n                                <button\n                                    className=\"toggle-form-button\"\n                                    onClick={handleMarkAllAsRead}\n                                >\n                                    Mark All as Read\n                                </button>\n\n\n                                <ul>\n                                    {notifications.map(notif => (\n                                        <li\n                                            key={notif.id}\n                                            className={`notification-item ${notif.read ? 'read' : 'unread'}`}\n                                            onClick={() => handleMarkAsRead(notif.id)}\n                                        >\n                                            <strong style={{ whiteSpace: 'pre-line' }}>{notif.message}</strong>\n\n                                            {notif.message.includes('requested vacation') &&\n                                                user?.user?.role === 'admin' &&\n                                                notif?.meta?.vacationDecision !== 'approved' &&\n                                                notif?.meta?.vacationDecision !== 'rejected' && (\n                                                    <div style={{ marginTop: '10px' }}>\n                                                        <button\n                                                            onClick={(e) => {\n                                                                e.stopPropagation();\n                                                                handleVacationDecision(notif, 'approved');\n                                                            }}\n                                                            style={{\n                                                                marginRight: '10px',\n                                                                padding: '5px 10px',\n                                                                backgroundColor: '#4CAF50',\n                                                                color: 'white',\n                                                                border: 'none',\n                                                                borderRadius: '5px',\n                                                                cursor: 'pointer'\n                                                            }}\n                                                        >\n                                                            Approve\n                                                        </button>\n\n                                                        <button\n                                                            onClick={(e) => {\n                                                                e.stopPropagation();\n                                                                setShowRejectionInput(notif.id);\n                                                            }}\n                                                            style={{\n                                                                padding: '5px 10px',\n                                                                backgroundColor: '#f44336',\n                                                                color: 'white',\n                                                                border: 'none',\n                                                                borderRadius: '5px',\n                                                                cursor: 'pointer'\n                                                            }}\n                                                        >\n                                                            Reject\n                                                        </button>\n\n                                                        {showRejectionInput === notif.id && (\n                                                            <div style={{ marginTop: '10px' }}>\n                                                                <input\n                                                                    type=\"text\"\n                                                                    placeholder=\"Enter reason for rejection\"\n                                                                    value={rejectionReason}\n                                                                    onChange={(e) => setRejectionReason(e.target.value)}\n                                                                    style={{\n                                                                        width: '100%',\n                                                                        padding: '5px',\n                                                                        marginBottom: '5px'\n                                                                    }}\n                                                                />\n                                                                <button\n                                                                    onClick={(e) => {\n                                                                        e.stopPropagation();\n                                                                        handleVacationDecision(notif, 'rejected');\n                                                                    }}\n                                                                    style={{\n                                                                        padding: '5px 10px',\n                                                                        backgroundColor: '#d32f2f',\n                                                                        color: 'white',\n                                                                        border: 'none',\n                                                                        borderRadius: '5px',\n                                                                        cursor: 'pointer'\n                                                                    }}\n                                                                >\n                                                                    Confirm Rejection\n                                                                </button>\n                                                            </div>\n                                                        )}\n                                                    </div>\n                                                )}\n\n                                            {notif.linkTo &&\n                                                notif.linkTo.trim() !== '' &&\n                                                (notif.message.includes('Weekly schedule') || notif.message.includes('shift') || notif.message.includes('swap')) && (\n                                                    <div>\n                                                        <a href={notif.linkTo}>Go to screen</a>\n                                                    </div>\n                                                )}\n\n                                            <div style={{ fontSize: '0.8em', color: '#888' }}>\n                                                {new Date(notif.timestamp).toLocaleDateString('en-GB')}{' '}\n                                                {new Date(notif.timestamp).toLocaleTimeString('en-GB', { hour: '2-digit', minute: '2-digit' })}\n                                            </div>\n                                        </li>\n                                    ))}\n                                </ul>\n                            </>\n                        )}\n                    </div>\n                </div>\n            </div>\n        </BackgroundWrapper>\n    );\n}\n\nexport default NotificationsScreen;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}