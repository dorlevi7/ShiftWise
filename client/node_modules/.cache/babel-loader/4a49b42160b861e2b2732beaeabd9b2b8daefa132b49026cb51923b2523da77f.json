{"ast":null,"code":"var _jsxFileName = \"/Users/dorlevi/IdeaProjects/newShiftWise/client/src/components/AvailabilityScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Navbar from './Navbar';\nimport '../styles/AvailabilityScreen.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AvailabilityScreen = () => {\n  _s();\n  const [availability, setAvailability] = useState({});\n  const navigate = useNavigate();\n  useEffect(() => {\n    // שליפת פרטי המשתמש והזמינות הקיימת\n    const loggedUser = JSON.parse(localStorage.getItem('user'));\n    if (!loggedUser) {\n      navigate('/'); // החזרה למסך ההתחברות אם המשתמש לא מחובר\n    }\n  }, [navigate]);\n  const handleAvailabilityChange = (day, shift, isAvailable) => {\n    setAvailability(prev => ({\n      ...prev,\n      [shift]: {\n        ...prev[shift],\n        [day]: isAvailable\n      }\n    }));\n  };\n  const handleSave = () => {\n    console.log('Saved Availability:', availability);\n    alert('Availability saved successfully!');\n  };\n  const days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n  const shifts = ['Morning', 'Noon', 'Evening', 'Night'];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"availability-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Set Your Availability\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"availability-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Shifts\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 29\n            }, this), days.map(day => /*#__PURE__*/_jsxDEV(\"th\", {\n              children: day\n            }, day, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: shifts.map(shift => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: shift\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 33\n            }, this), days.map(day => {\n              var _availability$shift;\n              return /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  checked: ((_availability$shift = availability[shift]) === null || _availability$shift === void 0 ? void 0 : _availability$shift[day]) || false,\n                  onChange: e => handleAvailabilityChange(day, shift, e.target.checked)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 56,\n                  columnNumber: 41\n                }, this)\n              }, day, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 37\n              }, this);\n            })]\n          }, shift, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSave,\n        className: \"save-button\",\n        children: \"Save Availability\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(AvailabilityScreen, \"YscME/FgxIbv+HA52zecG0XAXFw=\", false, function () {\n  return [useNavigate];\n});\n_c = AvailabilityScreen;\nexport default AvailabilityScreen;\nvar _c;\n$RefreshReg$(_c, \"AvailabilityScreen\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","Navbar","jsxDEV","_jsxDEV","Fragment","_Fragment","AvailabilityScreen","_s","availability","setAvailability","navigate","loggedUser","JSON","parse","localStorage","getItem","handleAvailabilityChange","day","shift","isAvailable","prev","handleSave","console","log","alert","days","shifts","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","_availability$shift","type","checked","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Users/dorlevi/IdeaProjects/newShiftWise/client/src/components/AvailabilityScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Navbar from './Navbar';\nimport '../styles/AvailabilityScreen.css';\n\nconst AvailabilityScreen = () => {\n    const [availability, setAvailability] = useState({});\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        // שליפת פרטי המשתמש והזמינות הקיימת\n        const loggedUser = JSON.parse(localStorage.getItem('user'));\n        if (!loggedUser) {\n            navigate('/'); // החזרה למסך ההתחברות אם המשתמש לא מחובר\n        }\n    }, [navigate]);\n\n    const handleAvailabilityChange = (day, shift, isAvailable) => {\n        setAvailability((prev) => ({\n            ...prev,\n            [shift]: {\n                ...prev[shift],\n                [day]: isAvailable,\n            },\n        }));\n    };\n\n    const handleSave = () => {\n        console.log('Saved Availability:', availability);\n        alert('Availability saved successfully!');\n    };\n\n    const days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n    const shifts = ['Morning', 'Noon', 'Evening', 'Night'];\n\n    return (\n        <>\n            <Navbar />\n            <div className=\"availability-container\">\n                <h2>Set Your Availability</h2>\n                <table className=\"availability-table\">\n                    <thead>\n                        <tr>\n                            <th>Shifts</th>\n                            {days.map((day) => (\n                                <th key={day}>{day}</th>\n                            ))}\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {shifts.map((shift) => (\n                            <tr key={shift}>\n                                <td>{shift}</td>\n                                {days.map((day) => (\n                                    <td key={day}>\n                                        <input\n                                            type=\"checkbox\"\n                                            checked={availability[shift]?.[day] || false}\n                                            onChange={(e) =>\n                                                handleAvailabilityChange(day, shift, e.target.checked)\n                                            }\n                                        />\n                                    </td>\n                                ))}\n                            </tr>\n                        ))}\n                    </tbody>\n                </table>\n                <button onClick={handleSave} className=\"save-button\">Save Availability</button>\n            </div>\n        </>\n    );\n};\n\nexport default AvailabilityScreen;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}