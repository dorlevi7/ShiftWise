{"ast":null,"code":"var _jsxFileName = \"/Users/dorlevi/IdeaProjects/newShiftWise/client/src/components/StatisticsScreen.js\",\n  _s = $RefreshSig$();\n// React and core libraries\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\n// Third-party libraries\nimport { toast, ToastContainer } from 'react-toastify';\nimport Select from 'react-select';\nimport 'react-toastify/dist/ReactToastify.css';\n\n// Internal components and styles\nimport Navbar from './Navbar';\nimport Loader from './Common/Loader';\nimport BackgroundWrapper from './Layouts/BackgroundWrapper';\nimport '../styles/StatisticsScreen.css';\n\n// Services\nimport { getUsers } from '../services/userService';\nimport { getWeeklyStats } from '../services/statsService';\n\n// Utils\nimport { calculateWeekKey, calculateWeekRange } from '../utils/utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StatisticsScreen = () => {\n  _s();\n  const [userData, setUserData] = useState(null);\n  const [employees, setEmployees] = useState([]);\n  const [mode, setMode] = useState('single'); // 'single' or 'compare'\n  const [selectedEmployeeId, setSelectedEmployeeId] = useState(null);\n  const [secondEmployeeId, setSecondEmployeeId] = useState(null);\n  const [stats, setStats] = useState(null);\n  const [secondStats, setSecondStats] = useState(null);\n  const [weekOffset, setWeekOffset] = useState(0);\n  const [weeksRange, setWeeksRange] = useState(1);\n  const navigate = useNavigate();\n  const [allStats, setAllStats] = useState([]);\n  const [sortKey, setSortKey] = useState('name');\n  const [sortDirection, setSortDirection] = useState('asc');\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    window.scrollTo({\n      top: 0\n    });\n  }, []);\n  useEffect(() => {\n    const loggedUser = JSON.parse(localStorage.getItem('user'));\n    if (!loggedUser) {\n      navigate('/');\n    } else {\n      setUserData(loggedUser);\n      const fetchEmployees = async () => {\n        setIsLoading(true);\n        try {\n          const usersData = await getUsers();\n          const companyId = loggedUser.company.id;\n          const filteredEmployees = Object.entries(usersData).map(([id, user]) => ({\n            id,\n            ...user\n          })).filter(user => {\n            var _user$companyIds;\n            return (_user$companyIds = user.companyIds) === null || _user$companyIds === void 0 ? void 0 : _user$companyIds.some(c => c.companyId === companyId);\n          });\n          setEmployees(filteredEmployees);\n        } catch (error) {\n          console.error('Error fetching employees:', error);\n        }\n      };\n      fetchEmployees();\n    }\n  }, [navigate]);\n  useEffect(() => {\n    const fetchStats = async (employeeId, setter) => {\n      try {\n        const companyId = userData.company.id;\n        const now = new Date();\n        const year = now.getFullYear();\n        const month = now.getMonth() + 1;\n        let totalNight = 0;\n        let totalShabbat = 0;\n        let totalRegular = 0;\n        for (let offset = weekOffset; offset > weekOffset - weeksRange; offset--) {\n          const weekKey = calculateWeekKey(offset);\n          const data = await getWeeklyStats(companyId, year, month, weekKey, employeeId);\n          if (data) {\n            totalNight += data.nightShifts || 0;\n            totalShabbat += data.shabbatShifts || 0;\n            totalRegular += data.regularShifts || 0;\n          }\n        }\n        const totalAllShifts = totalNight + totalShabbat + totalRegular;\n        setter({\n          nightShifts: totalNight,\n          shabbatShifts: totalShabbat,\n          regularShifts: totalRegular,\n          avgNight: totalNight / weeksRange,\n          avgShabbat: totalShabbat / weeksRange,\n          avgRegular: totalRegular / weeksRange,\n          totalAll: totalAllShifts,\n          avgAll: totalAllShifts / weeksRange\n        });\n      } catch (error) {\n        console.error('Error fetching stats:', error);\n        toast.error('Failed to fetch statistics');\n      }\n    };\n    if (!userData) return;\n    if (mode === 'single' && selectedEmployeeId) {\n      fetchStats(selectedEmployeeId, setStats);\n    } else if (mode === 'compare' && selectedEmployeeId && secondEmployeeId) {\n      fetchStats(selectedEmployeeId, setStats);\n      fetchStats(secondEmployeeId, setSecondStats);\n    } else if (mode === 'table' && employees.length > 0) {\n      const fetchAllStats = async () => {\n        try {\n          const companyId = userData.company.id;\n          const now = new Date();\n          const year = now.getFullYear();\n          const month = now.getMonth() + 1;\n          const results = await Promise.all(employees.map(async employee => {\n            let totalNight = 0;\n            let totalShabbat = 0;\n            let totalRegular = 0;\n            for (let offset = weekOffset; offset > weekOffset - weeksRange; offset--) {\n              const weekKey = calculateWeekKey(offset);\n              const data = await getWeeklyStats(companyId, year, month, weekKey, employee.id);\n              if (data) {\n                totalNight += data.nightShifts || 0;\n                totalShabbat += data.shabbatShifts || 0;\n                totalRegular += data.regularShifts || 0;\n              }\n            }\n            const totalAll = totalNight + totalShabbat + totalRegular;\n            return {\n              id: employee.id,\n              name: employee.name,\n              night: totalNight,\n              shabbat: totalShabbat,\n              regular: totalRegular,\n              total: totalAll,\n              avgNight: totalAll === 0 ? '0%' : `${(totalNight / totalAll * 100).toFixed(1)}%`,\n              avgShabbat: totalAll === 0 ? '0%' : `${(totalShabbat / totalAll * 100).toFixed(1)}%`,\n              avgRegular: totalAll === 0 ? '0%' : `${(totalRegular / totalAll * 100).toFixed(1)}%`,\n              avgTotal: (totalAll / weeksRange).toFixed(2)\n            };\n          }));\n          setAllStats(results);\n        } catch (error) {\n          console.error('Error fetching all employees stats:', error);\n          toast.error('Failed to fetch all statistics');\n        }\n      };\n      fetchAllStats();\n    }\n  }, [userData, selectedEmployeeId, secondEmployeeId, weekOffset, weeksRange, mode, employees]);\n  const handleWeekChange = direction => {\n    setWeekOffset(prev => prev + direction);\n  };\n  const sortedEmployees = [...employees].sort((a, b) => a.name.localeCompare(b.name, 'he'));\n  const sortedStats = [...allStats].sort((a, b) => {\n    const valA = a[sortKey];\n    const valB = b[sortKey];\n    const parseValue = val => {\n      if (typeof val === 'string' && val.includes('%')) {\n        return parseFloat(val.replace('%', ''));\n      }\n      return isNaN(val) ? String(val) : val;\n    };\n    const parsedA = parseValue(valA);\n    const parsedB = parseValue(valB);\n    if (typeof parsedA === 'number' && typeof parsedB === 'number') {\n      return sortDirection === 'asc' ? parsedA - parsedB : parsedB - parsedA;\n    } else {\n      return sortDirection === 'asc' ? String(parsedA).localeCompare(parsedB, 'he') : String(parsedB).localeCompare(parsedA, 'he');\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(BackgroundWrapper, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navbar-placeholder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 17\n      }, this), isLoading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"statistics-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \" Statistics \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"week-navigation centered-navigation\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"navigation-button\",\n            onClick: () => handleWeekChange(-1),\n            children: \"Previous Week\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"week-range\",\n            children: weeksRange === 1 ? `Week: ${calculateWeekRange(weekOffset)}` : `Weeks: ${calculateWeekRange(weekOffset - weeksRange + 1)} To ${calculateWeekRange(weekOffset)}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"navigation-button\",\n            onClick: () => handleWeekChange(1),\n            children: \"Next Week\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"weeks-range-selector\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"weeksRange\",\n            children: \"Number of weeks to include:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            id: \"weeksRange\",\n            min: \"1\",\n            value: weeksRange,\n            onChange: e => {\n              const value = parseInt(e.target.value);\n              if (!isNaN(value) && value > 0) {\n                setWeeksRange(value);\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mode-toggle\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              value: \"single\",\n              checked: mode === 'single',\n              onChange: () => setMode('single')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 33\n            }, this), \" Single\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              value: \"compare\",\n              checked: mode === 'compare',\n              onChange: () => setMode('compare')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 33\n            }, this), \" Compare\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              value: \"table\",\n              checked: mode === 'table',\n              onChange: () => setMode('table')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 33\n            }, this), \" Table\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stats-box\",\n          children: mode === 'compare' ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comparison-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"employee-comparison-box\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"employee-selector\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Select First Employee:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 271,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  className: \"employee-dropdown\",\n                  classNamePrefix: \"react-select\",\n                  options: sortedEmployees.map(e => ({\n                    value: e.id,\n                    label: e.name\n                  })),\n                  onChange: option => setSelectedEmployeeId((option === null || option === void 0 ? void 0 : option.value) || ''),\n                  value: sortedEmployees.map(e => ({\n                    value: e.id,\n                    label: e.name\n                  })).find(o => o.value === selectedEmployeeId) || null,\n                  placeholder: \"Choose employee\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 272,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 41\n              }, this), stats && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"statistics-summary\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Total Night Shifts:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 283,\n                    columnNumber: 52\n                  }, this), \" \", stats.nightShifts]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 283,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Total Shabbat Shifts:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 284,\n                    columnNumber: 52\n                  }, this), \" \", stats.shabbatShifts]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 284,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Total Regular Shifts:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 285,\n                    columnNumber: 52\n                  }, this), \" \", stats.regularShifts]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 285,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Total All Shifts:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 286,\n                    columnNumber: 52\n                  }, this), \" \", stats.totalAll]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 286,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 287,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Average per Week:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 288,\n                    columnNumber: 52\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 288,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Night: \", stats.avgNight.toFixed(2), \" (\", (stats.nightShifts / stats.totalAll * 100).toFixed(1), \"%)\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 289,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Shabbat: \", stats.avgShabbat.toFixed(2), \" (\", (stats.shabbatShifts / stats.totalAll * 100).toFixed(1), \"%)\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 290,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Regular: \", stats.avgRegular.toFixed(2), \" (\", (stats.regularShifts / stats.totalAll * 100).toFixed(1), \"%)\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 291,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"All Shifts: \", stats.avgAll.toFixed(2)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 292,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"vertical-divider\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"employee-comparison-box\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"employee-selector\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Select Second Employee:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 301,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  className: \"employee-dropdown\",\n                  classNamePrefix: \"react-select\",\n                  options: sortedEmployees.map(e => ({\n                    value: e.id,\n                    label: e.name\n                  })),\n                  onChange: option => setSecondEmployeeId((option === null || option === void 0 ? void 0 : option.value) || ''),\n                  value: sortedEmployees.map(e => ({\n                    value: e.id,\n                    label: e.name\n                  })).find(o => o.value === secondEmployeeId) || null,\n                  placeholder: \"Choose employee\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 302,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 300,\n                columnNumber: 41\n              }, this), secondStats && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"statistics-summary\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Total Night Shifts:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 313,\n                    columnNumber: 52\n                  }, this), \" \", secondStats.nightShifts]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 313,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Total Shabbat Shifts:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 314,\n                    columnNumber: 52\n                  }, this), \" \", secondStats.shabbatShifts]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 314,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Total Regular Shifts:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 315,\n                    columnNumber: 52\n                  }, this), \" \", secondStats.regularShifts]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 315,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Total All Shifts:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 316,\n                    columnNumber: 52\n                  }, this), \" \", secondStats.totalAll]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 316,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 317,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Average per Week:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 318,\n                    columnNumber: 52\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 318,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Night: \", secondStats.avgNight.toFixed(2), \" (\", (secondStats.nightShifts / secondStats.totalAll * 100).toFixed(1), \"%)\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 319,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Shabbat: \", secondStats.avgShabbat.toFixed(2), \" (\", (secondStats.shabbatShifts / secondStats.totalAll * 100).toFixed(1), \"%)\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 320,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Regular: \", secondStats.avgRegular.toFixed(2), \" (\", (secondStats.regularShifts / secondStats.totalAll * 100).toFixed(1), \"%)\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 321,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"All Shifts: \", secondStats.avgAll.toFixed(2)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 322,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 312,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 33\n          }, this) : mode === 'table' ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"table-container\",\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"statistics-table\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [{\n                    key: 'name',\n                    label: 'Name'\n                  }, {\n                    key: 'night',\n                    label: 'Night'\n                  }, {\n                    key: 'shabbat',\n                    label: 'Shabbat'\n                  }, {\n                    key: 'regular',\n                    label: 'Regular'\n                  }, {\n                    key: 'total',\n                    label: 'Total'\n                  }, {\n                    key: 'avgNight',\n                    label: 'Avg Night'\n                  }, {\n                    key: 'avgShabbat',\n                    label: 'Avg Shabbat'\n                  }, {\n                    key: 'avgRegular',\n                    label: 'Avg Regular'\n                  }, {\n                    key: 'avgTotal',\n                    label: 'Avg Total'\n                  }].map(({\n                    key,\n                    label\n                  }) => /*#__PURE__*/_jsxDEV(\"th\", {\n                    onClick: () => {\n                      if (sortKey === key) {\n                        setSortDirection(sortDirection === 'desc' ? 'asc' : 'desc');\n                      } else {\n                        setSortKey(key);\n                        setSortDirection('desc');\n                      }\n                    },\n                    style: {\n                      cursor: 'pointer'\n                    },\n                    children: [label, \" \", sortKey === key && (sortDirection === 'asc' ? '🔼' : '🔽')]\n                  }, key, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 343,\n                    columnNumber: 53\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 331,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: sortedStats.map(stat => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: stat.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 364,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: stat.night\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 365,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: stat.shabbat\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 366,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: stat.regular\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 367,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: stat.total\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 368,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: stat.avgNight\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 369,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: stat.avgShabbat\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 370,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: stat.avgRegular\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 371,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: stat.avgTotal\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 372,\n                    columnNumber: 53\n                  }, this)]\n                }, stat.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 363,\n                  columnNumber: 49\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 361,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"single-container\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"employee-comparison-box\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"employee-selector\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Select Employee:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 383,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  className: \"employee-dropdown\",\n                  classNamePrefix: \"react-select\",\n                  options: sortedEmployees.map(e => ({\n                    value: e.id,\n                    label: e.name\n                  })),\n                  onChange: option => setSelectedEmployeeId((option === null || option === void 0 ? void 0 : option.value) || ''),\n                  value: sortedEmployees.map(e => ({\n                    value: e.id,\n                    label: e.name\n                  })).find(o => o.value === selectedEmployeeId) || null,\n                  placeholder: \"Choose employee\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 384,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 382,\n                columnNumber: 41\n              }, this), stats && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"statistics-summary\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Total Night Shifts:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 395,\n                    columnNumber: 52\n                  }, this), \" \", stats.nightShifts]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 395,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Total Shabbat Shifts:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 396,\n                    columnNumber: 52\n                  }, this), \" \", stats.shabbatShifts]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 396,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Total Regular Shifts:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 397,\n                    columnNumber: 52\n                  }, this), \" \", stats.regularShifts]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 397,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Total All Shifts:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 398,\n                    columnNumber: 52\n                  }, this), \" \", stats.totalAll]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 398,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 399,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Average per Week:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 400,\n                    columnNumber: 52\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 400,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Night: \", stats.avgNight.toFixed(2), \" (\", (stats.nightShifts / stats.totalAll * 100).toFixed(1), \"%)\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 401,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Shabbat: \", stats.avgShabbat.toFixed(2), \" (\", (stats.shabbatShifts / stats.totalAll * 100).toFixed(1), \"%)\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 402,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Regular: \", stats.avgRegular.toFixed(2), \" (\", (stats.regularShifts / stats.totalAll * 100).toFixed(1), \"%)\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 403,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"All Shifts: \", stats.avgAll.toFixed(2)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 404,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 394,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 381,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 198,\n    columnNumber: 9\n  }, this);\n};\n_s(StatisticsScreen, \"B6FQNJkDzrlTH37LMl6HkElSWYs=\", false, function () {\n  return [useNavigate];\n});\n_c = StatisticsScreen;\nexport default StatisticsScreen;\nvar _c;\n$RefreshReg$(_c, \"StatisticsScreen\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","toast","ToastContainer","Select","Navbar","Loader","BackgroundWrapper","getUsers","getWeeklyStats","calculateWeekKey","calculateWeekRange","jsxDEV","_jsxDEV","StatisticsScreen","_s","userData","setUserData","employees","setEmployees","mode","setMode","selectedEmployeeId","setSelectedEmployeeId","secondEmployeeId","setSecondEmployeeId","stats","setStats","secondStats","setSecondStats","weekOffset","setWeekOffset","weeksRange","setWeeksRange","navigate","allStats","setAllStats","sortKey","setSortKey","sortDirection","setSortDirection","isLoading","setIsLoading","window","scrollTo","top","loggedUser","JSON","parse","localStorage","getItem","fetchEmployees","usersData","companyId","company","id","filteredEmployees","Object","entries","map","user","filter","_user$companyIds","companyIds","some","c","error","console","fetchStats","employeeId","setter","now","Date","year","getFullYear","month","getMonth","totalNight","totalShabbat","totalRegular","offset","weekKey","data","nightShifts","shabbatShifts","regularShifts","totalAllShifts","avgNight","avgShabbat","avgRegular","totalAll","avgAll","length","fetchAllStats","results","Promise","all","employee","name","night","shabbat","regular","total","toFixed","avgTotal","handleWeekChange","direction","prev","sortedEmployees","sort","a","b","localeCompare","sortedStats","valA","valB","parseValue","val","includes","parseFloat","replace","isNaN","String","parsedA","parsedB","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","htmlFor","type","min","value","onChange","e","parseInt","target","checked","classNamePrefix","options","label","option","find","o","placeholder","key","style","cursor","stat","_c","$RefreshReg$"],"sources":["/Users/dorlevi/IdeaProjects/newShiftWise/client/src/components/StatisticsScreen.js"],"sourcesContent":["// React and core libraries\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\n// Third-party libraries\nimport { toast, ToastContainer } from 'react-toastify';\nimport Select from 'react-select';\nimport 'react-toastify/dist/ReactToastify.css';\n\n// Internal components and styles\nimport Navbar from './Navbar';\nimport Loader from './Common/Loader';\nimport BackgroundWrapper from './Layouts/BackgroundWrapper';\nimport '../styles/StatisticsScreen.css';\n\n// Services\nimport { getUsers } from '../services/userService';\nimport { getWeeklyStats } from '../services/statsService';\n\n// Utils\nimport { calculateWeekKey, calculateWeekRange } from '../utils/utils';\n\nconst StatisticsScreen = () => {\n    const [userData, setUserData] = useState(null);\n    const [employees, setEmployees] = useState([]);\n    const [mode, setMode] = useState('single'); // 'single' or 'compare'\n    const [selectedEmployeeId, setSelectedEmployeeId] = useState(null);\n    const [secondEmployeeId, setSecondEmployeeId] = useState(null);\n    const [stats, setStats] = useState(null);\n    const [secondStats, setSecondStats] = useState(null);\n    const [weekOffset, setWeekOffset] = useState(0);\n    const [weeksRange, setWeeksRange] = useState(1);\n    const navigate = useNavigate();\n    const [allStats, setAllStats] = useState([]);\n    const [sortKey, setSortKey] = useState('name');\n    const [sortDirection, setSortDirection] = useState('asc');\n    const [isLoading, setIsLoading] = useState(true);\n\n    useEffect(() => {\n        window.scrollTo({ top: 0 });\n    }, []);\n\n    useEffect(() => {\n        const loggedUser = JSON.parse(localStorage.getItem('user'));\n        if (!loggedUser) {\n            navigate('/');\n        } else {\n            setUserData(loggedUser);\n            const fetchEmployees = async () => {\n\n                setIsLoading(true);\n                try {\n                    const usersData = await getUsers();\n                    const companyId = loggedUser.company.id;\n                    const filteredEmployees = Object.entries(usersData)\n                        .map(([id, user]) => ({ id, ...user }))\n                        .filter((user) => user.companyIds?.some((c) => c.companyId === companyId));\n                    setEmployees(filteredEmployees);\n                } catch (error) {\n                    console.error('Error fetching employees:', error);\n                }\n            };\n            fetchEmployees();\n        }\n    }, [navigate]);\n\n    useEffect(() => {\n        const fetchStats = async (employeeId, setter) => {\n            try {\n                const companyId = userData.company.id;\n                const now = new Date();\n                const year = now.getFullYear();\n                const month = now.getMonth() + 1;\n\n                let totalNight = 0;\n                let totalShabbat = 0;\n                let totalRegular = 0;\n\n                for (let offset = weekOffset; offset > weekOffset - weeksRange; offset--) {\n                    const weekKey = calculateWeekKey(offset);\n                    const data = await getWeeklyStats(companyId, year, month, weekKey, employeeId);\n\n                    if (data) {\n                        totalNight += data.nightShifts || 0;\n                        totalShabbat += data.shabbatShifts || 0;\n                        totalRegular += data.regularShifts || 0;\n                    }\n                }\n\n                const totalAllShifts = totalNight + totalShabbat + totalRegular;\n\n                setter({\n                    nightShifts: totalNight,\n                    shabbatShifts: totalShabbat,\n                    regularShifts: totalRegular,\n                    avgNight: totalNight / weeksRange,\n                    avgShabbat: totalShabbat / weeksRange,\n                    avgRegular: totalRegular / weeksRange,\n                    totalAll: totalAllShifts,\n                    avgAll: totalAllShifts / weeksRange\n                });\n            } catch (error) {\n                console.error('Error fetching stats:', error);\n                toast.error('Failed to fetch statistics');\n            }\n        };\n\n        if (!userData) return;\n\n        if (mode === 'single' && selectedEmployeeId) {\n            fetchStats(selectedEmployeeId, setStats);\n        } else if (mode === 'compare' && selectedEmployeeId && secondEmployeeId) {\n            fetchStats(selectedEmployeeId, setStats);\n            fetchStats(secondEmployeeId, setSecondStats);\n        } else if (mode === 'table' && employees.length > 0) {\n            const fetchAllStats = async () => {\n                try {\n                    const companyId = userData.company.id;\n                    const now = new Date();\n                    const year = now.getFullYear();\n                    const month = now.getMonth() + 1;\n\n                    const results = await Promise.all(\n                        employees.map(async (employee) => {\n                            let totalNight = 0;\n                            let totalShabbat = 0;\n                            let totalRegular = 0;\n\n                            for (let offset = weekOffset; offset > weekOffset - weeksRange; offset--) {\n                                const weekKey = calculateWeekKey(offset);\n                                const data = await getWeeklyStats(companyId, year, month, weekKey, employee.id);\n\n                                if (data) {\n                                    totalNight += data.nightShifts || 0;\n                                    totalShabbat += data.shabbatShifts || 0;\n                                    totalRegular += data.regularShifts || 0;\n                                }\n                            }\n\n                            const totalAll = totalNight + totalShabbat + totalRegular;\n\n                            return {\n                                id: employee.id,\n                                name: employee.name,\n                                night: totalNight,\n                                shabbat: totalShabbat,\n                                regular: totalRegular,\n                                total: totalAll,\n                                avgNight: totalAll === 0 ? '0%' : `${((totalNight / totalAll) * 100).toFixed(1)}%`,\n                                avgShabbat: totalAll === 0 ? '0%' : `${((totalShabbat / totalAll) * 100).toFixed(1)}%`,\n                                avgRegular: totalAll === 0 ? '0%' : `${((totalRegular / totalAll) * 100).toFixed(1)}%`,\n                                avgTotal: (totalAll / weeksRange).toFixed(2)\n                            };\n                        })\n                    );\n\n                    setAllStats(results);\n                } catch (error) {\n                    console.error('Error fetching all employees stats:', error);\n                    toast.error('Failed to fetch all statistics');\n                }\n            };\n\n            fetchAllStats();\n        }\n    }, [userData, selectedEmployeeId, secondEmployeeId, weekOffset, weeksRange, mode, employees]);\n\n    const handleWeekChange = (direction) => {\n        setWeekOffset((prev) => prev + direction);\n    };\n\n    const sortedEmployees = [...employees].sort((a, b) => a.name.localeCompare(b.name, 'he'));\n\n    const sortedStats = [...allStats].sort((a, b) => {\n        const valA = a[sortKey];\n        const valB = b[sortKey];\n\n        const parseValue = (val) => {\n            if (typeof val === 'string' && val.includes('%')) {\n                return parseFloat(val.replace('%', ''));\n            }\n            return isNaN(val) ? String(val) : val;\n        };\n\n        const parsedA = parseValue(valA);\n        const parsedB = parseValue(valB);\n\n        if (typeof parsedA === 'number' && typeof parsedB === 'number') {\n            return sortDirection === 'asc' ? parsedA - parsedB : parsedB - parsedA;\n        } else {\n            return sortDirection === 'asc'\n                ? String(parsedA).localeCompare(parsedB, 'he')\n                : String(parsedB).localeCompare(parsedA, 'he');\n        }\n    });\n\n    return (\n        <BackgroundWrapper>\n            <div>\n                <Navbar />\n                <div className=\"navbar-placeholder\"></div>\n\n                {isLoading ? (\n                    <Loader />\n                ) : (\n                    <div className=\"statistics-container\">\n                        <h1> Statistics </h1>\n\n                        <div className=\"week-navigation centered-navigation\">\n                            <button className=\"navigation-button\" onClick={() => handleWeekChange(-1)}>\n                                Previous Week\n                            </button>\n                            <h2 className=\"week-range\">\n                                {weeksRange === 1\n                                    ? `Week: ${calculateWeekRange(weekOffset)}`\n                                    : `Weeks: ${calculateWeekRange(weekOffset - weeksRange + 1)} To ${calculateWeekRange(weekOffset)}`}\n                            </h2>\n                            <button className=\"navigation-button\" onClick={() => handleWeekChange(1)}>\n                                Next Week\n                            </button>\n                        </div>\n\n                        <div className=\"weeks-range-selector\">\n                            <label htmlFor=\"weeksRange\">Number of weeks to include:</label>\n                            <input\n                                type=\"number\"\n                                id=\"weeksRange\"\n                                min=\"1\"\n                                value={weeksRange}\n                                onChange={(e) => {\n                                    const value = parseInt(e.target.value);\n                                    if (!isNaN(value) && value > 0) {\n                                        setWeeksRange(value);\n                                    }\n                                }}\n                            />\n                        </div>\n\n                        <div className=\"mode-toggle\">\n                            <label>\n                                <input\n                                    type=\"radio\"\n                                    value=\"single\"\n                                    checked={mode === 'single'}\n                                    onChange={() => setMode('single')}\n                                /> Single\n                            </label>\n                            <label>\n                                <input\n                                    type=\"radio\"\n                                    value=\"compare\"\n                                    checked={mode === 'compare'}\n                                    onChange={() => setMode('compare')}\n                                /> Compare\n                            </label>\n                            <label>\n                                <input\n                                    type=\"radio\"\n                                    value=\"table\"\n                                    checked={mode === 'table'}\n                                    onChange={() => setMode('table')}\n                                /> Table\n                            </label>\n                        </div>\n\n                        <div className=\"stats-box\">\n                            {mode === 'compare' ? (\n                                <div className=\"comparison-container\">\n                                    <div className=\"employee-comparison-box\">\n                                        <div className=\"employee-selector\">\n                                            <label>Select First Employee:</label>\n                                            <Select\n                                                className=\"employee-dropdown\"\n                                                classNamePrefix=\"react-select\"\n                                                options={sortedEmployees.map(e => ({ value: e.id, label: e.name }))}\n                                                onChange={(option) => setSelectedEmployeeId(option?.value || '')}\n                                                value={sortedEmployees.map(e => ({ value: e.id, label: e.name })).find(o => o.value === selectedEmployeeId) || null}\n                                                placeholder=\"Choose employee\"\n                                            />\n                                        </div>\n                                        {stats && (\n                                            <div className=\"statistics-summary\">\n                                                <p><strong>Total Night Shifts:</strong> {stats.nightShifts}</p>\n                                                <p><strong>Total Shabbat Shifts:</strong> {stats.shabbatShifts}</p>\n                                                <p><strong>Total Regular Shifts:</strong> {stats.regularShifts}</p>\n                                                <p><strong>Total All Shifts:</strong> {stats.totalAll}</p>\n                                                <hr />\n                                                <p><strong>Average per Week:</strong></p>\n                                                <p>Night: {stats.avgNight.toFixed(2)} ({((stats.nightShifts / stats.totalAll) * 100).toFixed(1)}%)</p>\n                                                <p>Shabbat: {stats.avgShabbat.toFixed(2)} ({((stats.shabbatShifts / stats.totalAll) * 100).toFixed(1)}%)</p>\n                                                <p>Regular: {stats.avgRegular.toFixed(2)} ({((stats.regularShifts / stats.totalAll) * 100).toFixed(1)}%)</p>\n                                                <p>All Shifts: {stats.avgAll.toFixed(2)}</p>\n                                            </div>\n                                        )}\n                                    </div>\n\n                                    <div className=\"vertical-divider\"></div>\n\n                                    <div className=\"employee-comparison-box\">\n                                        <div className=\"employee-selector\">\n                                            <label>Select Second Employee:</label>\n                                            <Select\n                                                className=\"employee-dropdown\"\n                                                classNamePrefix=\"react-select\"\n                                                options={sortedEmployees.map(e => ({ value: e.id, label: e.name }))}\n                                                onChange={(option) => setSecondEmployeeId(option?.value || '')}\n                                                value={sortedEmployees.map(e => ({ value: e.id, label: e.name })).find(o => o.value === secondEmployeeId) || null}\n                                                placeholder=\"Choose employee\"\n                                            />\n                                        </div>\n                                        {secondStats && (\n                                            <div className=\"statistics-summary\">\n                                                <p><strong>Total Night Shifts:</strong> {secondStats.nightShifts}</p>\n                                                <p><strong>Total Shabbat Shifts:</strong> {secondStats.shabbatShifts}</p>\n                                                <p><strong>Total Regular Shifts:</strong> {secondStats.regularShifts}</p>\n                                                <p><strong>Total All Shifts:</strong> {secondStats.totalAll}</p>\n                                                <hr />\n                                                <p><strong>Average per Week:</strong></p>\n                                                <p>Night: {secondStats.avgNight.toFixed(2)} ({((secondStats.nightShifts / secondStats.totalAll) * 100).toFixed(1)}%)</p>\n                                                <p>Shabbat: {secondStats.avgShabbat.toFixed(2)} ({((secondStats.shabbatShifts / secondStats.totalAll) * 100).toFixed(1)}%)</p>\n                                                <p>Regular: {secondStats.avgRegular.toFixed(2)} ({((secondStats.regularShifts / secondStats.totalAll) * 100).toFixed(1)}%)</p>\n                                                <p>All Shifts: {secondStats.avgAll.toFixed(2)}</p>\n                                            </div>\n                                        )}\n                                    </div>\n                                </div>\n                            ) : mode === 'table' ? (\n                                <div className=\"table-container\">\n                                    <table className=\"statistics-table\">\n                                        <thead>\n                                            <tr>\n                                                {[\n                                                    { key: 'name', label: 'Name' },\n                                                    { key: 'night', label: 'Night' },\n                                                    { key: 'shabbat', label: 'Shabbat' },\n                                                    { key: 'regular', label: 'Regular' },\n                                                    { key: 'total', label: 'Total' },\n                                                    { key: 'avgNight', label: 'Avg Night' },\n                                                    { key: 'avgShabbat', label: 'Avg Shabbat' },\n                                                    { key: 'avgRegular', label: 'Avg Regular' },\n                                                    { key: 'avgTotal', label: 'Avg Total' },\n                                                ].map(({ key, label }) => (\n                                                    <th\n                                                        key={key}\n                                                        onClick={() => {\n                                                            if (sortKey === key) {\n                                                                setSortDirection(sortDirection === 'desc' ? 'asc' : 'desc');\n                                                            } else {\n                                                                setSortKey(key);\n                                                                setSortDirection('desc');\n                                                            }\n                                                        }}\n                                                        style={{ cursor: 'pointer' }}\n                                                    >\n                                                        {label} {sortKey === key && (sortDirection === 'asc' ? '🔼' : '🔽')}\n                                                    </th>\n                                                ))}\n                                            </tr>\n                                        </thead>\n\n                                        <tbody>\n                                            {sortedStats.map((stat) => (\n                                                <tr key={stat.id}>\n                                                    <td>{stat.name}</td>\n                                                    <td>{stat.night}</td>\n                                                    <td>{stat.shabbat}</td>\n                                                    <td>{stat.regular}</td>\n                                                    <td>{stat.total}</td>\n                                                    <td>{stat.avgNight}</td>\n                                                    <td>{stat.avgShabbat}</td>\n                                                    <td>{stat.avgRegular}</td>\n                                                    <td>{stat.avgTotal}</td>\n                                                </tr>\n                                            ))}\n                                        </tbody>\n\n                                    </table>\n                                </div>\n                            ) : (\n                                <div className=\"single-container\">\n                                    <div className=\"employee-comparison-box\">\n                                        <div className=\"employee-selector\">\n                                            <label>Select Employee:</label>\n                                            <Select\n                                                className=\"employee-dropdown\"\n                                                classNamePrefix=\"react-select\"\n                                                options={sortedEmployees.map(e => ({ value: e.id, label: e.name }))}\n                                                onChange={(option) => setSelectedEmployeeId(option?.value || '')}\n                                                value={sortedEmployees.map(e => ({ value: e.id, label: e.name })).find(o => o.value === selectedEmployeeId) || null}\n                                                placeholder=\"Choose employee\"\n                                            />\n                                        </div>\n                                        {stats && (\n                                            <div className=\"statistics-summary\">\n                                                <p><strong>Total Night Shifts:</strong> {stats.nightShifts}</p>\n                                                <p><strong>Total Shabbat Shifts:</strong> {stats.shabbatShifts}</p>\n                                                <p><strong>Total Regular Shifts:</strong> {stats.regularShifts}</p>\n                                                <p><strong>Total All Shifts:</strong> {stats.totalAll}</p>\n                                                <hr />\n                                                <p><strong>Average per Week:</strong></p>\n                                                <p>Night: {stats.avgNight.toFixed(2)} ({((stats.nightShifts / stats.totalAll) * 100).toFixed(1)}%)</p>\n                                                <p>Shabbat: {stats.avgShabbat.toFixed(2)} ({((stats.shabbatShifts / stats.totalAll) * 100).toFixed(1)}%)</p>\n                                                <p>Regular: {stats.avgRegular.toFixed(2)} ({((stats.regularShifts / stats.totalAll) * 100).toFixed(1)}%)</p>\n                                                <p>All Shifts: {stats.avgAll.toFixed(2)}</p>\n                                            </div>\n                                        )}\n                                    </div>\n                                </div>\n                            )}\n                        </div>\n\n                    </div>\n                )}\n\n                <ToastContainer />\n            </div>\n        </BackgroundWrapper>\n    );\n};\n\nexport default StatisticsScreen;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}