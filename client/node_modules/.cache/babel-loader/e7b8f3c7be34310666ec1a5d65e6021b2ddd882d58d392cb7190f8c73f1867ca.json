{"ast":null,"code":"var _jsxFileName = \"/Users/dorlevi/IdeaProjects/newShiftWise/client/src/components/StatisticsScreen.js\",\n  _s = $RefreshSig$();\n// React and core libraries\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\n// Third-party libraries\nimport { toast, ToastContainer } from 'react-toastify';\nimport Select from 'react-select';\nimport 'react-toastify/dist/ReactToastify.css';\n\n// Internal components and styles\nimport Navbar from './Navbar';\nimport Loader from './Common/Loader';\nimport BackgroundWrapper from './Layouts/BackgroundWrapper';\nimport '../styles/StatisticsScreen.css';\n\n// Services\nimport { getUsers } from '../services/userService';\nimport { getWeeklyStats } from '../services/statsService';\n\n// Utils\nimport { calculateWeekKey, calculateWeekRange } from '../utils/utils';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst StatisticsScreen = () => {\n  _s();\n  const [userData, setUserData] = useState(null);\n  const [employees, setEmployees] = useState([]);\n  const [mode, setMode] = useState('single'); // 'single' or 'compare'\n  const [selectedEmployeeId, setSelectedEmployeeId] = useState(null);\n  const [secondEmployeeId, setSecondEmployeeId] = useState(null);\n  const [stats1, setStats1] = useState(null);\n  const [stats2, setStats2] = useState(null);\n  const [weekOffset, setWeekOffset] = useState(0);\n  const [weeksRange, setWeeksRange] = useState(1);\n  const navigate = useNavigate();\n  useEffect(() => {\n    window.scrollTo({\n      top: 0\n    });\n  }, []);\n  useEffect(() => {\n    const loggedUser = JSON.parse(localStorage.getItem('user'));\n    if (!loggedUser) navigate('/');else {\n      setUserData(loggedUser);\n      const fetchEmployees = async () => {\n        try {\n          const usersData = await getUsers();\n          const companyId = loggedUser.company.id;\n          const filteredEmployees = Object.entries(usersData).map(([id, user]) => ({\n            id,\n            ...user\n          })).filter(user => {\n            var _user$companyIds;\n            return (_user$companyIds = user.companyIds) === null || _user$companyIds === void 0 ? void 0 : _user$companyIds.some(c => c.companyId === companyId);\n          });\n          setEmployees(filteredEmployees);\n        } catch (error) {\n          console.error('Error fetching employees:', error);\n        }\n      };\n      fetchEmployees();\n    }\n  }, [navigate]);\n  const fetchStats = async employeeId => {\n    try {\n      const companyId = userData.company.id;\n      const now = new Date();\n      const year = now.getFullYear();\n      const month = now.getMonth() + 1;\n      let totalNight = 0,\n        totalShabbat = 0,\n        totalRegular = 0;\n      for (let offset = weekOffset; offset > weekOffset - weeksRange; offset--) {\n        const weekKey = calculateWeekKey(offset);\n        const data = await getWeeklyStats(companyId, year, month, weekKey, employeeId);\n        if (data) {\n          totalNight += data.nightShifts || 0;\n          totalShabbat += data.shabbatShifts || 0;\n          totalRegular += data.regularShifts || 0;\n        }\n      }\n      const totalAll = totalNight + totalShabbat + totalRegular;\n      return {\n        nightShifts: totalNight,\n        shabbatShifts: totalShabbat,\n        regularShifts: totalRegular,\n        avgNight: totalNight / weeksRange,\n        avgShabbat: totalShabbat / weeksRange,\n        avgRegular: totalRegular / weeksRange,\n        totalAll,\n        avgAll: totalAll / weeksRange\n      };\n    } catch (error) {\n      console.error('Error fetching stats:', error);\n      toast.error('Failed to fetch statistics');\n      return null;\n    }\n  };\n  useEffect(() => {\n    const loadStats = async () => {\n      if (!userData) return;\n      if (mode === 'single' && selectedEmployeeId) {\n        const stats = await fetchStats(selectedEmployeeId);\n        setStats1(stats);\n        setStats2(null);\n      } else if (mode === 'compare' && selectedEmployeeId && secondEmployeeId) {\n        const [s1, s2] = await Promise.all([fetchStats(selectedEmployeeId), fetchStats(secondEmployeeId)]);\n        setStats1(s1);\n        setStats2(s2);\n      }\n    };\n    loadStats();\n  }, [userData, selectedEmployeeId, secondEmployeeId, weekOffset, weeksRange, mode]);\n  const getPercentage = (count, total) => total > 0 ? (count / total * 100).toFixed(1) + '%' : '0%';\n  const sortedEmployees = [...employees].sort((a, b) => a.name.localeCompare(b.name, 'he'));\n  const renderStatsBlock = (stats, name) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"statistics-summary\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Total Night Shifts:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 16\n      }, this), \" \", stats.nightShifts]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Total Shabbat Shifts:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 16\n      }, this), \" \", stats.shabbatShifts]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Total Regular Shifts:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 16\n      }, this), \" \", stats.regularShifts]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Total All Shifts:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 16\n      }, this), \" \", stats.totalAll]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Average per Week:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 16\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Night: \", stats.avgNight.toFixed(2), \" (\", getPercentage(stats.nightShifts, stats.totalAll), \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Shabbat: \", stats.avgShabbat.toFixed(2), \" (\", getPercentage(stats.shabbatShifts, stats.totalAll), \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Regular: \", stats.avgRegular.toFixed(2), \" (\", getPercentage(stats.regularShifts, stats.totalAll), \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"All Shifts: \", stats.avgAll.toFixed(2), \" (100%)\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 9\n  }, this);\n  return /*#__PURE__*/_jsxDEV(BackgroundWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navbar-placeholder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"statistics-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Shift Statistics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mode-toggle\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            value: \"single\",\n            checked: mode === 'single',\n            onChange: () => setMode('single')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 28\n          }, this), \" Single Employee\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            value: \"compare\",\n            checked: mode === 'compare',\n            onChange: () => setMode('compare')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 28\n          }, this), \" Compare Two Employees\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"employee-selector\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: mode === 'compare' ? 'Select First Employee:' : 'Select Employee:'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          className: \"employee-dropdown\",\n          classNamePrefix: \"react-select\",\n          options: sortedEmployees.map(e => ({\n            value: e.id,\n            label: e.name\n          })),\n          onChange: option => setSelectedEmployeeId((option === null || option === void 0 ? void 0 : option.value) || ''),\n          value: sortedEmployees.map(e => ({\n            value: e.id,\n            label: e.name\n          })).find(o => o.value === selectedEmployeeId) || null,\n          placeholder: \"Choose employee\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 21\n        }, this), mode === 'compare' && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Select Second Employee:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            className: \"employee-dropdown\",\n            classNamePrefix: \"react-select\",\n            options: sortedEmployees.map(e => ({\n              value: e.id,\n              label: e.name\n            })),\n            onChange: option => setSecondEmployeeId((option === null || option === void 0 ? void 0 : option.value) || ''),\n            value: sortedEmployees.map(e => ({\n              value: e.id,\n              label: e.name\n            })).find(o => o.value === secondEmployeeId) || null,\n            placeholder: \"Choose second employee\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"week-navigation centered-navigation\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"navigation-button\",\n          onClick: () => handleWeekChange(-1),\n          children: \"Previous Week\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"week-range\",\n          children: weeksRange === 1 ? `Week: ${calculateWeekRange(weekOffset)}` : `Weeks: ${calculateWeekRange(weekOffset - weeksRange + 1)} to ${calculateWeekRange(weekOffset)}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"navigation-button\",\n          onClick: () => handleWeekChange(1),\n          children: \"Next Week\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weeks-range-selector\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"weeksRange\",\n          children: \"Number of weeks to include:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"weeksRange\",\n          min: \"1\",\n          value: weeksRange,\n          onChange: e => {\n            const value = parseInt(e.target.value);\n            if (!isNaN(value) && value > 0) {\n              setWeeksRange(value);\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 17\n      }, this), stats1 && renderStatsBlock(stats1, mode === 'compare' ? 'Employee 1' : 'Employee'), mode === 'compare' && stats2 && renderStatsBlock(stats2, 'Employee 2')]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 9\n  }, this);\n};\n_s(StatisticsScreen, \"j1XiflRCrUasdn2nOFV5BSfuND8=\", false, function () {\n  return [useNavigate];\n});\n_c = StatisticsScreen;\nexport default StatisticsScreen;\nvar _c;\n$RefreshReg$(_c, \"StatisticsScreen\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","toast","ToastContainer","Select","Navbar","Loader","BackgroundWrapper","getUsers","getWeeklyStats","calculateWeekKey","calculateWeekRange","jsxDEV","_jsxDEV","Fragment","_Fragment","StatisticsScreen","_s","userData","setUserData","employees","setEmployees","mode","setMode","selectedEmployeeId","setSelectedEmployeeId","secondEmployeeId","setSecondEmployeeId","stats1","setStats1","stats2","setStats2","weekOffset","setWeekOffset","weeksRange","setWeeksRange","navigate","window","scrollTo","top","loggedUser","JSON","parse","localStorage","getItem","fetchEmployees","usersData","companyId","company","id","filteredEmployees","Object","entries","map","user","filter","_user$companyIds","companyIds","some","c","error","console","fetchStats","employeeId","now","Date","year","getFullYear","month","getMonth","totalNight","totalShabbat","totalRegular","offset","weekKey","data","nightShifts","shabbatShifts","regularShifts","totalAll","avgNight","avgShabbat","avgRegular","avgAll","loadStats","stats","s1","s2","Promise","all","getPercentage","count","total","toFixed","sortedEmployees","sort","a","b","name","localeCompare","renderStatsBlock","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","checked","onChange","classNamePrefix","options","e","label","option","find","o","placeholder","onClick","handleWeekChange","htmlFor","min","parseInt","target","isNaN","_c","$RefreshReg$"],"sources":["/Users/dorlevi/IdeaProjects/newShiftWise/client/src/components/StatisticsScreen.js"],"sourcesContent":["// React and core libraries\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\n// Third-party libraries\nimport { toast, ToastContainer } from 'react-toastify';\nimport Select from 'react-select';\nimport 'react-toastify/dist/ReactToastify.css';\n\n// Internal components and styles\nimport Navbar from './Navbar';\nimport Loader from './Common/Loader';\nimport BackgroundWrapper from './Layouts/BackgroundWrapper';\nimport '../styles/StatisticsScreen.css';\n\n// Services\nimport { getUsers } from '../services/userService';\nimport { getWeeklyStats } from '../services/statsService';\n\n// Utils\nimport { calculateWeekKey, calculateWeekRange } from '../utils/utils';\n\nconst StatisticsScreen = () => {\n    const [userData, setUserData] = useState(null);\n    const [employees, setEmployees] = useState([]);\n    const [mode, setMode] = useState('single'); // 'single' or 'compare'\n    const [selectedEmployeeId, setSelectedEmployeeId] = useState(null);\n    const [secondEmployeeId, setSecondEmployeeId] = useState(null);\n    const [stats1, setStats1] = useState(null);\n    const [stats2, setStats2] = useState(null);\n    const [weekOffset, setWeekOffset] = useState(0);\n    const [weeksRange, setWeeksRange] = useState(1);\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        window.scrollTo({ top: 0 });\n    }, []);\n\n    useEffect(() => {\n        const loggedUser = JSON.parse(localStorage.getItem('user'));\n        if (!loggedUser) navigate('/');\n        else {\n            setUserData(loggedUser);\n            const fetchEmployees = async () => {\n                try {\n                    const usersData = await getUsers();\n                    const companyId = loggedUser.company.id;\n                    const filteredEmployees = Object.entries(usersData)\n                        .map(([id, user]) => ({ id, ...user }))\n                        .filter((user) => user.companyIds?.some((c) => c.companyId === companyId));\n                    setEmployees(filteredEmployees);\n                } catch (error) {\n                    console.error('Error fetching employees:', error);\n                }\n            };\n            fetchEmployees();\n        }\n    }, [navigate]);\n\n    const fetchStats = async (employeeId) => {\n        try {\n            const companyId = userData.company.id;\n            const now = new Date();\n            const year = now.getFullYear();\n            const month = now.getMonth() + 1;\n\n            let totalNight = 0, totalShabbat = 0, totalRegular = 0;\n\n            for (let offset = weekOffset; offset > weekOffset - weeksRange; offset--) {\n                const weekKey = calculateWeekKey(offset);\n                const data = await getWeeklyStats(companyId, year, month, weekKey, employeeId);\n                if (data) {\n                    totalNight += data.nightShifts || 0;\n                    totalShabbat += data.shabbatShifts || 0;\n                    totalRegular += data.regularShifts || 0;\n                }\n            }\n\n            const totalAll = totalNight + totalShabbat + totalRegular;\n            return {\n                nightShifts: totalNight,\n                shabbatShifts: totalShabbat,\n                regularShifts: totalRegular,\n                avgNight: totalNight / weeksRange,\n                avgShabbat: totalShabbat / weeksRange,\n                avgRegular: totalRegular / weeksRange,\n                totalAll,\n                avgAll: totalAll / weeksRange\n            };\n        } catch (error) {\n            console.error('Error fetching stats:', error);\n            toast.error('Failed to fetch statistics');\n            return null;\n        }\n    };\n\n    useEffect(() => {\n        const loadStats = async () => {\n            if (!userData) return;\n            if (mode === 'single' && selectedEmployeeId) {\n                const stats = await fetchStats(selectedEmployeeId);\n                setStats1(stats);\n                setStats2(null);\n            } else if (mode === 'compare' && selectedEmployeeId && secondEmployeeId) {\n                const [s1, s2] = await Promise.all([\n                    fetchStats(selectedEmployeeId),\n                    fetchStats(secondEmployeeId)\n                ]);\n                setStats1(s1);\n                setStats2(s2);\n            }\n        };\n        loadStats();\n    }, [userData, selectedEmployeeId, secondEmployeeId, weekOffset, weeksRange, mode]);\n\n    const getPercentage = (count, total) => (total > 0 ? ((count / total) * 100).toFixed(1) + '%' : '0%');\n    const sortedEmployees = [...employees].sort((a, b) => a.name.localeCompare(b.name, 'he'));\n\n    const renderStatsBlock = (stats, name) => (\n        <div className=\"statistics-summary\">\n            <h3>{name}</h3>\n            <p><strong>Total Night Shifts:</strong> {stats.nightShifts}</p>\n            <p><strong>Total Shabbat Shifts:</strong> {stats.shabbatShifts}</p>\n            <p><strong>Total Regular Shifts:</strong> {stats.regularShifts}</p>\n            <p><strong>Total All Shifts:</strong> {stats.totalAll}</p>\n            <hr />\n            <p><strong>Average per Week:</strong></p>\n            <p>Night: {stats.avgNight.toFixed(2)} ({getPercentage(stats.nightShifts, stats.totalAll)})</p>\n            <p>Shabbat: {stats.avgShabbat.toFixed(2)} ({getPercentage(stats.shabbatShifts, stats.totalAll)})</p>\n            <p>Regular: {stats.avgRegular.toFixed(2)} ({getPercentage(stats.regularShifts, stats.totalAll)})</p>\n            <p>All Shifts: {stats.avgAll.toFixed(2)} (100%)</p>\n        </div>\n    );\n\n    return (\n        <BackgroundWrapper>\n            <Navbar />\n            <div className=\"navbar-placeholder\"></div>\n            <div className=\"statistics-container\">\n                <h1>Shift Statistics</h1>\n\n                <div className=\"mode-toggle\">\n                    <label><input type=\"radio\" value=\"single\" checked={mode === 'single'} onChange={() => setMode('single')} /> Single Employee</label>\n                    <label><input type=\"radio\" value=\"compare\" checked={mode === 'compare'} onChange={() => setMode('compare')} /> Compare Two Employees</label>\n                </div>\n\n                <div className=\"employee-selector\">\n                    <label>{mode === 'compare' ? 'Select First Employee:' : 'Select Employee:'}</label>\n                    <Select\n                        className=\"employee-dropdown\"\n                        classNamePrefix=\"react-select\"\n                        options={sortedEmployees.map(e => ({ value: e.id, label: e.name }))}\n                        onChange={(option) => setSelectedEmployeeId(option?.value || '')}\n                        value={sortedEmployees.map(e => ({ value: e.id, label: e.name })).find(o => o.value === selectedEmployeeId) || null}\n                        placeholder=\"Choose employee\"\n                    />\n\n                    {mode === 'compare' && (\n                        <>\n                            <label>Select Second Employee:</label>\n                            <Select\n                                className=\"employee-dropdown\"\n                                classNamePrefix=\"react-select\"\n                                options={sortedEmployees.map(e => ({ value: e.id, label: e.name }))}\n                                onChange={(option) => setSecondEmployeeId(option?.value || '')}\n                                value={sortedEmployees.map(e => ({ value: e.id, label: e.name })).find(o => o.value === secondEmployeeId) || null}\n                                placeholder=\"Choose second employee\"\n                            />\n                        </>\n                    )}\n                </div>\n\n                <div className=\"week-navigation centered-navigation\">\n                    <button className=\"navigation-button\" onClick={() => handleWeekChange(-1)}>Previous Week</button>\n                    <h2 className=\"week-range\">\n                        {weeksRange === 1\n                            ? `Week: ${calculateWeekRange(weekOffset)}`\n                            : `Weeks: ${calculateWeekRange(weekOffset - weeksRange + 1)} to ${calculateWeekRange(weekOffset)}`}\n                    </h2>\n                    <button className=\"navigation-button\" onClick={() => handleWeekChange(1)}>Next Week</button>\n                </div>\n\n                <div className=\"weeks-range-selector\">\n                    <label htmlFor=\"weeksRange\">Number of weeks to include:</label>\n                    <input\n                        type=\"number\"\n                        id=\"weeksRange\"\n                        min=\"1\"\n                        value={weeksRange}\n                        onChange={(e) => {\n                            const value = parseInt(e.target.value);\n                            if (!isNaN(value) && value > 0) {\n                                setWeeksRange(value);\n                            }\n                        }}\n                    />\n                </div>\n\n                {stats1 && renderStatsBlock(stats1, mode === 'compare' ? 'Employee 1' : 'Employee')}\n                {mode === 'compare' && stats2 && renderStatsBlock(stats2, 'Employee 2')}\n            </div>\n            <ToastContainer />\n        </BackgroundWrapper>\n    );\n};\n\nexport default StatisticsScreen;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}