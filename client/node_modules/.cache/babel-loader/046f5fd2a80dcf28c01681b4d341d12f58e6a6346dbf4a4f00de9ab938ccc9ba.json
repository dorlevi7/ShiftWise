{"ast":null,"code":"var _jsxFileName = \"/Users/dorlevi/IdeaProjects/newShiftWise/client/src/components/EmployeesScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { getUsers, removeCompanyFromUser, addUser, updateUserCompanies } from '../services/userService';\nimport { removeUserFromCompany, addEmployeeToCompany } from '../services/companyService';\nimport Navbar from '../components/Navbar';\nimport '../styles/EmployeesScreen.css';\nimport '../styles/Navbar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EmployeesScreen() {\n  _s();\n  const [employees, setEmployees] = useState([]);\n  const [newEmployee, setNewEmployee] = useState({\n    name: '',\n    email: '',\n    phone: '',\n    role: 'employee',\n    password: ''\n  });\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    const fetchEmployees = async () => {\n      try {\n        var _loggedUser$company;\n        const loggedUser = JSON.parse(localStorage.getItem('user'));\n        const companyId = loggedUser === null || loggedUser === void 0 ? void 0 : (_loggedUser$company = loggedUser.company) === null || _loggedUser$company === void 0 ? void 0 : _loggedUser$company.id;\n        if (!companyId) {\n          setError('No company information found.');\n          return;\n        }\n        const data = await getUsers();\n        const usersWithIds = data ? Object.entries(data).map(([id, user]) => ({\n          id,\n          ...user\n        })) : [];\n        const filteredEmployees = usersWithIds.filter(user => {\n          var _user$companyIds;\n          return (_user$companyIds = user.companyIds) === null || _user$companyIds === void 0 ? void 0 : _user$companyIds.some(company => company.companyId === companyId);\n        });\n        setEmployees(filteredEmployees);\n      } catch (err) {\n        setError('Failed to fetch employees.');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchEmployees();\n  }, []);\n  const handleDelete = async userId => {\n    const loggedUser = JSON.parse(localStorage.getItem('user'));\n\n    // אם המנהל הנוכחי מנסה למחוק את עצמו, לא תתאפשר פעולה זו\n    if (loggedUser.id === userId) {\n      alert('You cannot delete yourself.');\n      return;\n    }\n    try {\n      var _loggedUser$company2;\n      const companyId = loggedUser === null || loggedUser === void 0 ? void 0 : (_loggedUser$company2 = loggedUser.company) === null || _loggedUser$company2 === void 0 ? void 0 : _loggedUser$company2.id;\n      if (!companyId) {\n        alert('No company information found. Please try again.');\n        return;\n      }\n\n      // Remove the company from the user's company list\n      await removeCompanyFromUser(userId, companyId);\n\n      // Remove the user from the company's user list\n      await removeUserFromCompany(companyId, userId);\n      setEmployees(employees.filter(employee => employee.id !== userId));\n    } catch (err) {\n      alert('Failed to delete employee.');\n      console.error(err);\n    }\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewEmployee(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleAddEmployee = async e => {\n    e.preventDefault();\n    try {\n      const loggedUser = JSON.parse(localStorage.getItem('user'));\n      const company = loggedUser === null || loggedUser === void 0 ? void 0 : loggedUser.company;\n      if (!company) {\n        alert('No company information found. Please try again.');\n        return;\n      }\n\n      // Check if user already exists by email\n      const allUsers = await getUsers();\n      const existingUser = Object.values(allUsers).find(user => user.email === newEmployee.email);\n      if (existingUser) {\n        // User exists: update their companies list and add them to the company\n        await updateUserCompanies(existingUser, company);\n        await addEmployeeToCompany(company.id, existingUser.id);\n\n        // Check if the user is already in the UI list, if not add them\n        const isUserInUI = employees.some(employee => employee.id === existingUser.id);\n        if (!isUserInUI) {\n          setEmployees(prev => [...prev, existingUser]);\n        }\n        alert('User already exists, added to the company successfully.');\n      } else {\n        // User doesn't exist: add new user\n        const addedEmployee = await addUser(newEmployee);\n        await updateUserCompanies(addedEmployee, company);\n        await addEmployeeToCompany(company.id, addedEmployee.id);\n        setEmployees(prev => [...prev, {\n          id: addedEmployee.id,\n          ...addedEmployee\n        }]);\n        alert('New user added successfully.');\n      }\n\n      // Reset the form\n      setNewEmployee({\n        name: '',\n        email: '',\n        phone: '',\n        role: 'employee',\n        password: ''\n      });\n    } catch (err) {\n      alert('Failed to add employee.');\n      console.error(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"employees-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Employees\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading employees...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 21\n      }, this) : error ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"employees-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Phone\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Role\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: employees.map(employee => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: employee.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: employee.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: employee.phone\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: employee.role\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: employee.id !== JSON.parse(localStorage.getItem('user')).id && /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"action-button delete\",\n                onClick: () => handleDelete(employee.id),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 37\n            }, this)]\n          }, employee.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"add-employee-form\",\n        onSubmit: handleAddEmployee,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Add New Employee\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          value: newEmployee.name,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          value: newEmployee.email,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Phone:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"phone\",\n          value: newEmployee.phone,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          value: newEmployee.password,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Role:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"role\",\n          value: newEmployee.role,\n          onChange: handleChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"employee\",\n            children: \"Employee\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"admin\",\n            children: \"Admin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Add Employee\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 9\n  }, this);\n}\n_s(EmployeesScreen, \"niJFBj+ZO4olFTYBQ2hbyCNCU4s=\");\n_c = EmployeesScreen;\nexport default EmployeesScreen;\nvar _c;\n$RefreshReg$(_c, \"EmployeesScreen\");","map":{"version":3,"names":["React","useState","useEffect","getUsers","removeCompanyFromUser","addUser","updateUserCompanies","removeUserFromCompany","addEmployeeToCompany","Navbar","jsxDEV","_jsxDEV","EmployeesScreen","_s","employees","setEmployees","newEmployee","setNewEmployee","name","email","phone","role","password","isLoading","setIsLoading","error","setError","fetchEmployees","_loggedUser$company","loggedUser","JSON","parse","localStorage","getItem","companyId","company","id","data","usersWithIds","Object","entries","map","user","filteredEmployees","filter","_user$companyIds","companyIds","some","err","handleDelete","userId","alert","_loggedUser$company2","employee","console","handleChange","e","value","target","prev","handleAddEmployee","preventDefault","allUsers","existingUser","values","find","isUserInUI","addedEmployee","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","onSubmit","type","onChange","required","_c","$RefreshReg$"],"sources":["/Users/dorlevi/IdeaProjects/newShiftWise/client/src/components/EmployeesScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { getUsers, removeCompanyFromUser, addUser, updateUserCompanies } from '../services/userService';\nimport { removeUserFromCompany, addEmployeeToCompany } from '../services/companyService';\nimport Navbar from '../components/Navbar';\nimport '../styles/EmployeesScreen.css';\nimport '../styles/Navbar.css';\n\nfunction EmployeesScreen() {\n    const [employees, setEmployees] = useState([]);\n    const [newEmployee, setNewEmployee] = useState({ name: '', email: '', phone: '', role: 'employee', password: '' });\n    const [isLoading, setIsLoading] = useState(true);\n    const [error, setError] = useState('');\n\n    useEffect(() => {\n        const fetchEmployees = async () => {\n            try {\n                const loggedUser = JSON.parse(localStorage.getItem('user'));\n                const companyId = loggedUser?.company?.id;\n\n                if (!companyId) {\n                    setError('No company information found.');\n                    return;\n                }\n\n                const data = await getUsers();\n                const usersWithIds = data ? Object.entries(data).map(([id, user]) => ({ id, ...user })) : [];\n                const filteredEmployees = usersWithIds.filter((user) =>\n                    user.companyIds?.some((company) => company.companyId === companyId)\n                );\n\n                setEmployees(filteredEmployees);\n            } catch (err) {\n                setError('Failed to fetch employees.');\n            } finally {\n                setIsLoading(false);\n            }\n        };\n\n        fetchEmployees();\n    }, []);\n\n    const handleDelete = async (userId) => {\n        const loggedUser = JSON.parse(localStorage.getItem('user'));\n\n        // אם המנהל הנוכחי מנסה למחוק את עצמו, לא תתאפשר פעולה זו\n        if (loggedUser.id === userId) {\n            alert('You cannot delete yourself.');\n            return;\n        }\n\n        try {\n            const companyId = loggedUser?.company?.id;\n\n            if (!companyId) {\n                alert('No company information found. Please try again.');\n                return;\n            }\n\n            // Remove the company from the user's company list\n            await removeCompanyFromUser(userId, companyId);\n\n            // Remove the user from the company's user list\n            await removeUserFromCompany(companyId, userId);\n\n            setEmployees(employees.filter((employee) => employee.id !== userId));\n        } catch (err) {\n            alert('Failed to delete employee.');\n            console.error(err);\n        }\n    };\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        setNewEmployee((prev) => ({ ...prev, [name]: value }));\n    };\n\n    const handleAddEmployee = async (e) => {\n        e.preventDefault();\n        try {\n            const loggedUser = JSON.parse(localStorage.getItem('user'));\n            const company = loggedUser?.company;\n\n            if (!company) {\n                alert('No company information found. Please try again.');\n                return;\n            }\n\n            // Check if user already exists by email\n            const allUsers = await getUsers();\n            const existingUser = Object.values(allUsers).find((user) => user.email === newEmployee.email);\n\n            if (existingUser) {\n                // User exists: update their companies list and add them to the company\n                await updateUserCompanies(existingUser, company);\n                await addEmployeeToCompany(company.id, existingUser.id);\n\n                // Check if the user is already in the UI list, if not add them\n                const isUserInUI = employees.some((employee) => employee.id === existingUser.id);\n\n                if (!isUserInUI) {\n                    setEmployees((prev) => [...prev, existingUser]);\n                }\n\n                alert('User already exists, added to the company successfully.');\n            } else {\n                // User doesn't exist: add new user\n                const addedEmployee = await addUser(newEmployee);\n                await updateUserCompanies(addedEmployee, company);\n                await addEmployeeToCompany(company.id, addedEmployee.id);\n\n                setEmployees((prev) => [...prev, { id: addedEmployee.id, ...addedEmployee }]);\n                alert('New user added successfully.');\n            }\n\n            // Reset the form\n            setNewEmployee({ name: '', email: '', phone: '', role: 'employee', password: '' });\n        } catch (err) {\n            alert('Failed to add employee.');\n            console.error(err);\n        }\n    };\n\n\n    return (\n        <div>\n            <Navbar />\n            <div className=\"employees-container\">\n                <h2>Employees</h2>\n\n                {isLoading ? (\n                    <p>Loading employees...</p>\n                ) : error ? (\n                    <p className=\"error\">{error}</p>\n                ) : (\n                    <table className=\"employees-table\">\n                        <thead>\n                            <tr>\n                                <th>Name</th>\n                                <th>Email</th>\n                                <th>Phone</th>\n                                <th>Role</th>\n                                <th>Actions</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {employees.map((employee) => (\n                                <tr key={employee.id}>\n                                    <td>{employee.name}</td>\n                                    <td>{employee.email}</td>\n                                    <td>{employee.phone}</td>\n                                    <td>{employee.role}</td>\n                                    <td>\n                                        {/* לא מציג כפתור מחיקה אם מדובר במנהל המחובר */}\n                                        {employee.id !== JSON.parse(localStorage.getItem('user')).id && (\n                                            <button\n                                                className=\"action-button delete\"\n                                                onClick={() => handleDelete(employee.id)}\n                                            >\n                                                Delete\n                                            </button>\n                                        )}\n                                    </td>\n                                </tr>\n                            ))}\n                        </tbody>\n                    </table>\n                )}\n\n                <form className=\"add-employee-form\" onSubmit={handleAddEmployee}>\n                    <h3>Add New Employee</h3>\n                    <label>Name:</label>\n                    <input\n                        type=\"text\"\n                        name=\"name\"\n                        value={newEmployee.name}\n                        onChange={handleChange}\n                        required\n                    />\n                    <label>Email:</label>\n                    <input\n                        type=\"email\"\n                        name=\"email\"\n                        value={newEmployee.email}\n                        onChange={handleChange}\n                        required\n                    />\n                    <label>Phone:</label>\n                    <input\n                        type=\"text\"\n                        name=\"phone\"\n                        value={newEmployee.phone}\n                        onChange={handleChange}\n                        required\n                    />\n                    <label>Password:</label>\n                    <input\n                        type=\"password\"\n                        name=\"password\"\n                        value={newEmployee.password}\n                        onChange={handleChange}\n                        required\n                    />\n                    <label>Role:</label>\n                    <select name=\"role\" value={newEmployee.role} onChange={handleChange}>\n                        <option value=\"employee\">Employee</option>\n                        <option value=\"admin\">Admin</option>\n                    </select>\n                    <button type=\"submit\">Add Employee</button>\n                </form>\n            </div>\n        </div>\n    );\n}\n\nexport default EmployeesScreen;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}