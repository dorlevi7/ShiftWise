{"ast":null,"code":"var _jsxFileName = \"/Users/dorlevi/IdeaProjects/newShiftWise/client/src/components/EmployeesScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Modal from 'react-modal';\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { getUsers, removeCompanyFromUser, addUser, updateUserCompanies } from '../services/userService';\nimport { removeUserFromCompany, addEmployeeToCompany } from '../services/companyService';\nimport Navbar from '../components/Navbar';\nimport '../styles/EmployeesScreen.css';\nimport '../styles/Navbar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nModal.setAppElement('#root'); // חשוב להגדיר את האלמנט הראשי עבור הנגישות\n\nfunction EmployeesScreen() {\n  _s();\n  const [employees, setEmployees] = useState([]);\n  const [newEmployee, setNewEmployee] = useState({\n    name: '',\n    email: '',\n    phone: '',\n    role: 'employee',\n    password: ''\n  });\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [loggedUser, setLoggedUser] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false); // State לשליטה על ה-Modal\n\n  useEffect(() => {\n    const fetchEmployees = async () => {\n      try {\n        var _loggedUser$company;\n        const loggedUser = JSON.parse(localStorage.getItem('user'));\n        setLoggedUser(loggedUser);\n        const companyId = loggedUser === null || loggedUser === void 0 ? void 0 : (_loggedUser$company = loggedUser.company) === null || _loggedUser$company === void 0 ? void 0 : _loggedUser$company.id;\n        if (!companyId) {\n          setError('No company information found.');\n          return;\n        }\n        const data = await getUsers();\n        const usersWithIds = data ? Object.entries(data).map(([id, user]) => ({\n          id,\n          ...user\n        })) : [];\n        const filteredEmployees = usersWithIds.filter(user => {\n          var _user$companyIds;\n          return (_user$companyIds = user.companyIds) === null || _user$companyIds === void 0 ? void 0 : _user$companyIds.some(company => company.companyId === companyId);\n        });\n        setEmployees(filteredEmployees);\n      } catch (err) {\n        setError('Failed to fetch employees.');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchEmployees();\n  }, []);\n  const handleDelete = async userId => {\n    try {\n      var _loggedUser$company2;\n      const companyId = loggedUser === null || loggedUser === void 0 ? void 0 : (_loggedUser$company2 = loggedUser.company) === null || _loggedUser$company2 === void 0 ? void 0 : _loggedUser$company2.id;\n      if (!companyId) {\n        toast.error('No company information found. Please try again.');\n        return;\n      }\n      await removeCompanyFromUser(userId, companyId);\n      await removeUserFromCompany(companyId, userId);\n      setEmployees(employees.filter(employee => employee.id !== userId));\n      toast.success('Employee deleted successfully!');\n    } catch (err) {\n      toast.error('Failed to delete employee.');\n      console.error(err);\n    }\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewEmployee(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleAddEmployee = async e => {\n    e.preventDefault();\n    try {\n      const company = loggedUser === null || loggedUser === void 0 ? void 0 : loggedUser.company;\n      if (!company) {\n        toast.error('No company information found. Please try again.');\n        return;\n      }\n      const allUsers = await getUsers();\n      const existingUser = Object.values(allUsers).find(user => user.email === newEmployee.email);\n      if (existingUser) {\n        await updateUserCompanies(existingUser, company);\n        await addEmployeeToCompany(company.id, existingUser.id);\n        const isUserInUI = employees.some(employee => employee.id === existingUser.id);\n        if (!isUserInUI) {\n          setEmployees(prev => [...prev, existingUser]);\n        }\n        toast.info('User already exists, added to the company successfully.');\n      } else {\n        const addedEmployee = await addUser(newEmployee);\n        await updateUserCompanies(addedEmployee, company);\n        await addEmployeeToCompany(company.id, addedEmployee.id);\n        setEmployees(prev => [...prev, {\n          id: addedEmployee.id,\n          ...addedEmployee\n        }]);\n        toast.success('New user added successfully!');\n      }\n      setNewEmployee({\n        name: '',\n        email: '',\n        phone: '',\n        role: 'employee',\n        password: ''\n      });\n      setIsModalOpen(false); // Close the modal after adding an employee\n    } catch (err) {\n      toast.error('Failed to add employee.');\n      console.error(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navbar-placeholder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"employees-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Employees\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading employees...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 21\n      }, this) : error ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"employees-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Phone\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Role\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: employees.map(employee => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: employee.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: employee.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: employee.phone\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: employee.role\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: (loggedUser === null || loggedUser === void 0 ? void 0 : loggedUser.user.id) !== employee.id && /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"action-button delete\",\n                onClick: () => handleDelete(employee.id),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 37\n            }, this)]\n          }, employee.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"toggle-form-button\",\n        onClick: () => setIsModalOpen(true),\n        children: \"Add New Employee\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        isOpen: isModalOpen,\n        onRequestClose: () => setIsModalOpen(false),\n        className: \"modal\",\n        overlayClassName: \"modal-overlay\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Add New Employee\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"add-employee-form\",\n          onSubmit: handleAddEmployee,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"name\",\n            value: newEmployee.name,\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Email:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            name: \"email\",\n            value: newEmployee.email,\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Phone:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"phone\",\n            value: newEmployee.phone,\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            name: \"password\",\n            value: newEmployee.password,\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Role:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"role\",\n            value: newEmployee.role,\n            onChange: handleChange,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"employee\",\n              children: \"Employee\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"admin\",\n              children: \"Admin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Add Employee\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => setIsModalOpen(false),\n            className: \"cancel-button\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 9\n  }, this);\n}\n_s(EmployeesScreen, \"wdhmhbVZN5kKuwoek/RCyX/D9vY=\");\n_c = EmployeesScreen;\nexport default EmployeesScreen;\nvar _c;\n$RefreshReg$(_c, \"EmployeesScreen\");","map":{"version":3,"names":["React","useState","useEffect","Modal","toast","ToastContainer","getUsers","removeCompanyFromUser","addUser","updateUserCompanies","removeUserFromCompany","addEmployeeToCompany","Navbar","jsxDEV","_jsxDEV","setAppElement","EmployeesScreen","_s","employees","setEmployees","newEmployee","setNewEmployee","name","email","phone","role","password","isLoading","setIsLoading","error","setError","loggedUser","setLoggedUser","isModalOpen","setIsModalOpen","fetchEmployees","_loggedUser$company","JSON","parse","localStorage","getItem","companyId","company","id","data","usersWithIds","Object","entries","map","user","filteredEmployees","filter","_user$companyIds","companyIds","some","err","handleDelete","userId","_loggedUser$company2","employee","success","console","handleChange","e","value","target","prev","handleAddEmployee","preventDefault","allUsers","existingUser","values","find","isUserInUI","info","addedEmployee","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","isOpen","onRequestClose","overlayClassName","onSubmit","type","onChange","required","_c","$RefreshReg$"],"sources":["/Users/dorlevi/IdeaProjects/newShiftWise/client/src/components/EmployeesScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Modal from 'react-modal';\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { getUsers, removeCompanyFromUser, addUser, updateUserCompanies } from '../services/userService';\nimport { removeUserFromCompany, addEmployeeToCompany } from '../services/companyService';\nimport Navbar from '../components/Navbar';\nimport '../styles/EmployeesScreen.css';\nimport '../styles/Navbar.css';\n\nModal.setAppElement('#root'); // חשוב להגדיר את האלמנט הראשי עבור הנגישות\n\nfunction EmployeesScreen() {\n    const [employees, setEmployees] = useState([]);\n    const [newEmployee, setNewEmployee] = useState({ name: '', email: '', phone: '', role: 'employee', password: '' });\n    const [isLoading, setIsLoading] = useState(true);\n    const [error, setError] = useState('');\n    const [loggedUser, setLoggedUser] = useState(null);\n    const [isModalOpen, setIsModalOpen] = useState(false); // State לשליטה על ה-Modal\n\n    useEffect(() => {\n        const fetchEmployees = async () => {\n            try {\n                const loggedUser = JSON.parse(localStorage.getItem('user'));\n                setLoggedUser(loggedUser);\n                const companyId = loggedUser?.company?.id;\n\n                if (!companyId) {\n                    setError('No company information found.');\n                    return;\n                }\n\n                const data = await getUsers();\n                const usersWithIds = data ? Object.entries(data).map(([id, user]) => ({ id, ...user })) : [];\n                const filteredEmployees = usersWithIds.filter((user) =>\n                    user.companyIds?.some((company) => company.companyId === companyId)\n                );\n\n                setEmployees(filteredEmployees);\n            } catch (err) {\n                setError('Failed to fetch employees.');\n            } finally {\n                setIsLoading(false);\n            }\n        };\n\n        fetchEmployees();\n    }, []);\n\n    const handleDelete = async (userId) => {\n        try {\n            const companyId = loggedUser?.company?.id;\n\n            if (!companyId) {\n                toast.error('No company information found. Please try again.');\n                return;\n            }\n\n            await removeCompanyFromUser(userId, companyId);\n            await removeUserFromCompany(companyId, userId);\n\n            setEmployees(employees.filter((employee) => employee.id !== userId));\n            toast.success('Employee deleted successfully!');\n        } catch (err) {\n            toast.error('Failed to delete employee.');\n            console.error(err);\n        }\n    };\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        setNewEmployee((prev) => ({ ...prev, [name]: value }));\n    };\n\n    const handleAddEmployee = async (e) => {\n        e.preventDefault();\n        try {\n            const company = loggedUser?.company;\n\n            if (!company) {\n                toast.error('No company information found. Please try again.');\n                return;\n            }\n\n            const allUsers = await getUsers();\n            const existingUser = Object.values(allUsers).find((user) => user.email === newEmployee.email);\n\n            if (existingUser) {\n                await updateUserCompanies(existingUser, company);\n                await addEmployeeToCompany(company.id, existingUser.id);\n\n                const isUserInUI = employees.some((employee) => employee.id === existingUser.id);\n                if (!isUserInUI) {\n                    setEmployees((prev) => [...prev, existingUser]);\n                }\n\n                toast.info('User already exists, added to the company successfully.');\n            } else {\n                const addedEmployee = await addUser(newEmployee);\n                await updateUserCompanies(addedEmployee, company);\n                await addEmployeeToCompany(company.id, addedEmployee.id);\n\n                setEmployees((prev) => [...prev, { id: addedEmployee.id, ...addedEmployee }]);\n                toast.success('New user added successfully!');\n            }\n\n            setNewEmployee({ name: '', email: '', phone: '', role: 'employee', password: '' });\n            setIsModalOpen(false); // Close the modal after adding an employee\n        } catch (err) {\n            toast.error('Failed to add employee.');\n            console.error(err);\n        }\n    };\n\n    return (\n        <div>\n            <Navbar />\n            <div className=\"navbar-placeholder\"></div>\n            <div className=\"employees-container\">\n                <h2>Employees</h2>\n\n                {isLoading ? (\n                    <p>Loading employees...</p>\n                ) : error ? (\n                    <p className=\"error\">{error}</p>\n                ) : (\n                    <table className=\"employees-table\">\n                        <thead>\n                            <tr>\n                                <th>Name</th>\n                                <th>Email</th>\n                                <th>Phone</th>\n                                <th>Role</th>\n                                <th>Actions</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {employees.map((employee) => (\n                                <tr key={employee.id}>\n                                    <td>{employee.name}</td>\n                                    <td>{employee.email}</td>\n                                    <td>{employee.phone}</td>\n                                    <td>{employee.role}</td>\n                                    <td>\n                                        {loggedUser?.user.id !== employee.id && (\n                                            <button\n                                                className=\"action-button delete\"\n                                                onClick={() => handleDelete(employee.id)}\n                                            >\n                                                Delete\n                                            </button>\n                                        )}\n                                    </td>\n                                </tr>\n                            ))}\n                        </tbody>\n                    </table>\n                )}\n\n                <button\n                    className=\"toggle-form-button\"\n                    onClick={() => setIsModalOpen(true)}\n                >\n                    Add New Employee\n                </button>\n\n                <Modal\n                    isOpen={isModalOpen}\n                    onRequestClose={() => setIsModalOpen(false)}\n                    className=\"modal\"\n                    overlayClassName=\"modal-overlay\"\n                >\n                    <h3>Add New Employee</h3>\n                    <form className=\"add-employee-form\" onSubmit={handleAddEmployee}>\n                        <label>Name:</label>\n                        <input\n                            type=\"text\"\n                            name=\"name\"\n                            value={newEmployee.name}\n                            onChange={handleChange}\n                            required\n                        />\n                        <label>Email:</label>\n                        <input\n                            type=\"email\"\n                            name=\"email\"\n                            value={newEmployee.email}\n                            onChange={handleChange}\n                            required\n                        />\n                        <label>Phone:</label>\n                        <input\n                            type=\"text\"\n                            name=\"phone\"\n                            value={newEmployee.phone}\n                            onChange={handleChange}\n                            required\n                        />\n                        <label>Password:</label>\n                        <input\n                            type=\"password\"\n                            name=\"password\"\n                            value={newEmployee.password}\n                            onChange={handleChange}\n                            required\n                        />\n                        <label>Role:</label>\n                        <select name=\"role\" value={newEmployee.role} onChange={handleChange}>\n                            <option value=\"employee\">Employee</option>\n                            <option value=\"admin\">Admin</option>\n                        </select>\n                        <button type=\"submit\">Add Employee</button>\n                        <button\n                            type=\"button\"\n                            onClick={() => setIsModalOpen(false)}\n                            className=\"cancel-button\"\n                        >\n                            Cancel\n                        </button>\n                    </form>\n                </Modal>\n            </div>\n            <ToastContainer />\n        </div>\n    );\n}\n\nexport default EmployeesScreen;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}