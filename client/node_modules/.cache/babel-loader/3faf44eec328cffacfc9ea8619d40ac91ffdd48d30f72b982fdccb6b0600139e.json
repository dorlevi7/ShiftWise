{"ast":null,"code":"var _jsxFileName = \"/Users/dorlevi/IdeaProjects/newShiftWise/client/src/components/StatsScreen.js\",\n  _s = $RefreshSig$();\n// React functions\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\n// Styles\nimport '../styles/AvailabilityScreen.css';\nimport '../styles/Navbar.css';\n\n// Services\nimport { getUsers } from '../services/userService';\nimport { getShiftStats } from '../services/statsService';\n\n// Internal components\nimport Navbar from './Navbar';\nimport Loader from './Common/Loader';\nimport BackgroundWrapper from './Layouts/BackgroundWrapper';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StatsScreen = () => {\n  _s();\n  const [userData, setUserData] = useState(null);\n  const [stats, setStats] = useState({});\n  const [employees, setEmployees] = useState([]);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const loggedUser = JSON.parse(localStorage.getItem('user'));\n    if (!loggedUser) {\n      navigate('/');\n    } else {\n      setUserData(loggedUser);\n    }\n  }, [navigate]);\n  useEffect(() => {\n    const fetchData = async () => {\n      if (!userData) return;\n      try {\n        const users = await getUsers();\n        const statsData = await getShiftStats(userData.company.id);\n        const filteredEmployees = Object.entries(users).map(([id, user]) => ({\n          id,\n          ...user\n        })).filter(user => {\n          var _user$companyIds;\n          return (_user$companyIds = user.companyIds) === null || _user$companyIds === void 0 ? void 0 : _user$companyIds.some(c => c.companyId === userData.company.id);\n        });\n        setEmployees(filteredEmployees);\n        setStats(statsData || {});\n      } catch (error) {\n        console.error('Failed to fetch stats or users:', error);\n      }\n    };\n    fetchData();\n  }, [userData]);\n  if (!userData) {\n    return /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(BackgroundWrapper, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navbar-placeholder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"availability-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Shift Statistics\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"availability-table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Employee\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Regular Shifts\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Night Shifts\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Shabbat Shifts\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: employees.map(emp => {\n              var _stats$emp$id, _stats$emp$id2, _stats$emp$id3;\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: emp.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: (stats === null || stats === void 0 ? void 0 : (_stats$emp$id = stats[emp.id]) === null || _stats$emp$id === void 0 ? void 0 : _stats$emp$id.regular) || 0\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: (stats === null || stats === void 0 ? void 0 : (_stats$emp$id2 = stats[emp.id]) === null || _stats$emp$id2 === void 0 ? void 0 : _stats$emp$id2.night) || 0\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: (stats === null || stats === void 0 ? void 0 : (_stats$emp$id3 = stats[emp.id]) === null || _stats$emp$id3 === void 0 ? void 0 : _stats$emp$id3.shabbat) || 0\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 37\n                }, this)]\n              }, emp.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 33\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n_s(StatsScreen, \"PRYd80Y+tr43KQ2ITkl4845kN9E=\", false, function () {\n  return [useNavigate];\n});\n_c = StatsScreen;\nexport default StatsScreen;\nvar _c;\n$RefreshReg$(_c, \"StatsScreen\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","getUsers","getShiftStats","Navbar","Loader","BackgroundWrapper","jsxDEV","_jsxDEV","StatsScreen","_s","userData","setUserData","stats","setStats","employees","setEmployees","navigate","loggedUser","JSON","parse","localStorage","getItem","fetchData","users","statsData","company","id","filteredEmployees","Object","entries","map","user","filter","_user$companyIds","companyIds","some","c","companyId","error","console","fileName","_jsxFileName","lineNumber","columnNumber","children","className","emp","_stats$emp$id","_stats$emp$id2","_stats$emp$id3","name","regular","night","shabbat","_c","$RefreshReg$"],"sources":["/Users/dorlevi/IdeaProjects/newShiftWise/client/src/components/StatsScreen.js"],"sourcesContent":["// React functions\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\n// Styles\nimport '../styles/AvailabilityScreen.css';\nimport '../styles/Navbar.css';\n\n// Services\nimport { getUsers } from '../services/userService';\nimport { getShiftStats } from '../services/statsService';\n\n// Internal components\nimport Navbar from './Navbar';\nimport Loader from './Common/Loader';\nimport BackgroundWrapper from './Layouts/BackgroundWrapper';\n\nconst StatsScreen = () => {\n    const [userData, setUserData] = useState(null);\n    const [stats, setStats] = useState({});\n    const [employees, setEmployees] = useState([]);\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        const loggedUser = JSON.parse(localStorage.getItem('user'));\n        if (!loggedUser) {\n            navigate('/');\n        } else {\n            setUserData(loggedUser);\n        }\n    }, [navigate]);\n\n    useEffect(() => {\n        const fetchData = async () => {\n            if (!userData) return;\n\n            try {\n                const users = await getUsers();\n                const statsData = await getShiftStats(userData.company.id);\n\n                const filteredEmployees = Object.entries(users)\n                    .map(([id, user]) => ({ id, ...user }))\n                    .filter(user => user.companyIds?.some(c => c.companyId === userData.company.id));\n\n                setEmployees(filteredEmployees);\n                setStats(statsData || {});\n            } catch (error) {\n                console.error('Failed to fetch stats or users:', error);\n            }\n        };\n\n        fetchData();\n    }, [userData]);\n\n    if (!userData) {\n        return <Loader />;\n    }\n\n    return (\n        <BackgroundWrapper>\n            <div>\n                <Navbar />\n                <div className=\"navbar-placeholder\"></div>\n                <div className=\"availability-container\">\n                    <h1>Shift Statistics</h1>\n                    <table className=\"availability-table\">\n                        <thead>\n                            <tr>\n                                <th>Employee</th>\n                                <th>Regular Shifts</th>\n                                <th>Night Shifts</th>\n                                <th>Shabbat Shifts</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {employees.map(emp => (\n                                <tr key={emp.id}>\n                                    <td>{emp.name}</td>\n                                    <td>{stats?.[emp.id]?.regular || 0}</td>\n                                    <td>{stats?.[emp.id]?.night || 0}</td>\n                                    <td>{stats?.[emp.id]?.shabbat || 0}</td>\n                                </tr>\n                            ))}\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        </BackgroundWrapper>\n    );\n};\n\nexport default StatsScreen;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;;AAE9C;AACA,OAAO,kCAAkC;AACzC,OAAO,sBAAsB;;AAE7B;AACA,SAASC,QAAQ,QAAQ,yBAAyB;AAClD,SAASC,aAAa,QAAQ,0BAA0B;;AAExD;AACA,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,MAAM,MAAM,iBAAiB;AACpC,OAAOC,iBAAiB,MAAM,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5D,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC,CAAC;EACtC,MAAM,CAACgB,SAAS,EAAEC,YAAY,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAMkB,QAAQ,GAAGhB,WAAW,CAAC,CAAC;EAE9BD,SAAS,CAAC,MAAM;IACZ,MAAMkB,UAAU,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;IAC3D,IAAI,CAACJ,UAAU,EAAE;MACbD,QAAQ,CAAC,GAAG,CAAC;IACjB,CAAC,MAAM;MACHL,WAAW,CAACM,UAAU,CAAC;IAC3B;EACJ,CAAC,EAAE,CAACD,QAAQ,CAAC,CAAC;EAEdjB,SAAS,CAAC,MAAM;IACZ,MAAMuB,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,IAAI,CAACZ,QAAQ,EAAE;MAEf,IAAI;QACA,MAAMa,KAAK,GAAG,MAAMtB,QAAQ,CAAC,CAAC;QAC9B,MAAMuB,SAAS,GAAG,MAAMtB,aAAa,CAACQ,QAAQ,CAACe,OAAO,CAACC,EAAE,CAAC;QAE1D,MAAMC,iBAAiB,GAAGC,MAAM,CAACC,OAAO,CAACN,KAAK,CAAC,CAC1CO,GAAG,CAAC,CAAC,CAACJ,EAAE,EAAEK,IAAI,CAAC,MAAM;UAAEL,EAAE;UAAE,GAAGK;QAAK,CAAC,CAAC,CAAC,CACtCC,MAAM,CAACD,IAAI;UAAA,IAAAE,gBAAA;UAAA,QAAAA,gBAAA,GAAIF,IAAI,CAACG,UAAU,cAAAD,gBAAA,uBAAfA,gBAAA,CAAiBE,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,SAAS,KAAK3B,QAAQ,CAACe,OAAO,CAACC,EAAE,CAAC;QAAA,EAAC;QAEpFX,YAAY,CAACY,iBAAiB,CAAC;QAC/Bd,QAAQ,CAACW,SAAS,IAAI,CAAC,CAAC,CAAC;MAC7B,CAAC,CAAC,OAAOc,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;MAC3D;IACJ,CAAC;IAEDhB,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,CAACZ,QAAQ,CAAC,CAAC;EAEd,IAAI,CAACA,QAAQ,EAAE;IACX,oBAAOH,OAAA,CAACH,MAAM;MAAAoC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACrB;EAEA,oBACIpC,OAAA,CAACF,iBAAiB;IAAAuC,QAAA,eACdrC,OAAA;MAAAqC,QAAA,gBACIrC,OAAA,CAACJ,MAAM;QAAAqC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACVpC,OAAA;QAAKsC,SAAS,EAAC;MAAoB;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAC1CpC,OAAA;QAAKsC,SAAS,EAAC,wBAAwB;QAAAD,QAAA,gBACnCrC,OAAA;UAAAqC,QAAA,EAAI;QAAgB;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACzBpC,OAAA;UAAOsC,SAAS,EAAC,oBAAoB;UAAAD,QAAA,gBACjCrC,OAAA;YAAAqC,QAAA,eACIrC,OAAA;cAAAqC,QAAA,gBACIrC,OAAA;gBAAAqC,QAAA,EAAI;cAAQ;gBAAAJ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACjBpC,OAAA;gBAAAqC,QAAA,EAAI;cAAc;gBAAAJ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACvBpC,OAAA;gBAAAqC,QAAA,EAAI;cAAY;gBAAAJ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACrBpC,OAAA;gBAAAqC,QAAA,EAAI;cAAc;gBAAAJ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACvB;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF,CAAC,eACRpC,OAAA;YAAAqC,QAAA,EACK9B,SAAS,CAACgB,GAAG,CAACgB,GAAG;cAAA,IAAAC,aAAA,EAAAC,cAAA,EAAAC,cAAA;cAAA,oBACd1C,OAAA;gBAAAqC,QAAA,gBACIrC,OAAA;kBAAAqC,QAAA,EAAKE,GAAG,CAACI;gBAAI;kBAAAV,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC,eACnBpC,OAAA;kBAAAqC,QAAA,EAAK,CAAAhC,KAAK,aAALA,KAAK,wBAAAmC,aAAA,GAALnC,KAAK,CAAGkC,GAAG,CAACpB,EAAE,CAAC,cAAAqB,aAAA,uBAAfA,aAAA,CAAiBI,OAAO,KAAI;gBAAC;kBAAAX,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC,eACxCpC,OAAA;kBAAAqC,QAAA,EAAK,CAAAhC,KAAK,aAALA,KAAK,wBAAAoC,cAAA,GAALpC,KAAK,CAAGkC,GAAG,CAACpB,EAAE,CAAC,cAAAsB,cAAA,uBAAfA,cAAA,CAAiBI,KAAK,KAAI;gBAAC;kBAAAZ,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC,eACtCpC,OAAA;kBAAAqC,QAAA,EAAK,CAAAhC,KAAK,aAALA,KAAK,wBAAAqC,cAAA,GAALrC,KAAK,CAAGkC,GAAG,CAACpB,EAAE,CAAC,cAAAuB,cAAA,uBAAfA,cAAA,CAAiBI,OAAO,KAAI;gBAAC;kBAAAb,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC;cAAA,GAJnCG,GAAG,CAACpB,EAAE;gBAAAc,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAKX,CAAC;YAAA,CACR;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACP,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE5B,CAAC;AAAClC,EAAA,CAxEID,WAAW;EAAA,QAIIR,WAAW;AAAA;AAAAsD,EAAA,GAJ1B9C,WAAW;AA0EjB,eAAeA,WAAW;AAAC,IAAA8C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}