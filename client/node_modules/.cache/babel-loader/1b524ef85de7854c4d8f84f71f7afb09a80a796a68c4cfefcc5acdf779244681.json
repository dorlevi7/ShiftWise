{"ast":null,"code":"var _jsxFileName = \"/Users/dorlevi/IdeaProjects/newShiftWise/client/src/components/EmployeesScreen.js\",\n  _s = $RefreshSig$();\n// React & state\nimport React, { useState, useEffect } from 'react';\n// UI Components & Libraries\nimport Modal from 'react-modal';\nimport { toast, ToastContainer } from 'react-toastify';\nimport { ThreeDots } from 'react-loader-spinner';\nimport Navbar from '../components/Navbar';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { getUsers, removeCompanyFromUser, addUser, updateUserCompanies, updateUser } from '../services/userService';\nimport { removeUserFromCompany, addEmployeeToCompany } from '../services/companyService';\nimport '../styles/EmployeesScreen.css';\nimport '../styles/Navbar.css';\nimport employeesData from '../data/emps.json'; // יש לוודא שהקובץ נמצא בתיקייה data\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nModal.setAppElement('#root');\nfunction EmployeesScreen() {\n  _s();\n  const [employees, setEmployees] = useState([]);\n  const [newEmployee, setNewEmployee] = useState({\n    name: '',\n    email: '',\n    phone: '',\n    role: 'employee',\n    password: ''\n  });\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [loggedUser, setLoggedUser] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [openCards, setOpenCards] = useState({});\n  const [editEmployee, setEditEmployee] = useState(null);\n  const [isEditModalOpen, setIsEditModalOpen] = useState(false);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [isConfirmDeleteModalOpen, setIsConfirmDeleteModalOpen] = useState(false);\n  const [employeeToDelete, setEmployeeToDelete] = useState(null);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [filterRole, setFilterRole] = useState('all');\n  useEffect(() => {\n    const fetchEmployees = async () => {\n      try {\n        var _loggedUser$company;\n        const loggedUser = JSON.parse(localStorage.getItem('user'));\n        setLoggedUser(loggedUser);\n        const companyId = loggedUser === null || loggedUser === void 0 ? void 0 : (_loggedUser$company = loggedUser.company) === null || _loggedUser$company === void 0 ? void 0 : _loggedUser$company.id;\n        if (!companyId) {\n          setError('No company information found.');\n          return;\n        }\n        const data = await getUsers();\n        const usersWithIds = data ? Object.entries(data).map(([id, user]) => ({\n          id,\n          ...user\n        })) : [];\n        const filteredEmployees = usersWithIds.filter(user => {\n          var _user$companyIds;\n          return (_user$companyIds = user.companyIds) === null || _user$companyIds === void 0 ? void 0 : _user$companyIds.some(company => company.companyId === companyId);\n        });\n        setEmployees(filteredEmployees);\n      } catch (err) {\n        setError('Failed to fetch employees.');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchEmployees();\n  }, []);\n  const openConfirmDeleteModal = employee => {\n    setEmployeeToDelete(employee);\n    setIsConfirmDeleteModalOpen(true);\n  };\n  const closeConfirmDeleteModal = () => {\n    setIsConfirmDeleteModalOpen(false);\n    setEmployeeToDelete(null);\n  };\n  const handleDeleteConfirmed = async () => {\n    if (!employeeToDelete) return;\n    try {\n      var _loggedUser$company2;\n      const companyId = loggedUser === null || loggedUser === void 0 ? void 0 : (_loggedUser$company2 = loggedUser.company) === null || _loggedUser$company2 === void 0 ? void 0 : _loggedUser$company2.id;\n      if (!companyId) {\n        toast.error('No company information found. Please try again.');\n        return;\n      }\n      await removeCompanyFromUser(employeeToDelete.id, companyId);\n      await removeUserFromCompany(companyId, employeeToDelete.id);\n      setEmployees(employees.filter(employee => employee.id !== employeeToDelete.id));\n      toast.success('Employee deleted successfully!');\n    } catch (err) {\n      toast.error('Failed to delete employee.');\n      console.error(err);\n    } finally {\n      closeConfirmDeleteModal();\n    }\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewEmployee(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleAddEmployee = async e => {\n    e.preventDefault();\n    try {\n      const company = loggedUser === null || loggedUser === void 0 ? void 0 : loggedUser.company;\n      if (!company) {\n        toast.error('No company information found. Please try again.');\n        return;\n      }\n      const allUsers = await getUsers();\n      const existingUser = Object.values(allUsers).find(user => user.email === newEmployee.email);\n      if (existingUser) {\n        await updateUserCompanies(existingUser, company);\n        await addEmployeeToCompany(company.id, existingUser.id);\n        const isUserInUI = employees.some(employee => employee.id === existingUser.id);\n        if (!isUserInUI) {\n          setEmployees(prev => [...prev, existingUser]);\n        }\n        toast.info('User already exists, added to the company successfully.');\n      } else {\n        const addedEmployee = await addUser(newEmployee);\n        await updateUserCompanies(addedEmployee, company);\n        await addEmployeeToCompany(company.id, addedEmployee.id);\n        setEmployees(prev => [...prev, {\n          id: addedEmployee.id,\n          ...addedEmployee\n        }]);\n        toast.success('New user added successfully!');\n      }\n      setNewEmployee({\n        name: '',\n        email: '',\n        phone: '',\n        role: 'employee',\n        password: ''\n      });\n      setIsModalOpen(false);\n    } catch (err) {\n      toast.error('Failed to add employee.');\n      console.error(err);\n    }\n  };\n  const toggleCard = id => {\n    setOpenCards(prev => ({\n      ...prev,\n      [id]: !prev[id]\n    }));\n  };\n  const handleEditClick = employee => {\n    setEditEmployee(employee); // הגדרת העובד הנבחר לעריכה\n    setIsEditModalOpen(true); // פתיחת המודל\n  };\n  const handleLoadEmployeesFromJSON = async () => {\n    try {\n      if (!loggedUser || !loggedUser.company) {\n        toast.error('No company information found. Please try again.');\n        return;\n      }\n      setIsProcessing(true); // הפעלת ה-Loader\n\n      const companyId = loggedUser.company.id;\n      const allUsers = await getUsers();\n      const newEmployees = employeesData.filter(employee => {\n        var _existingUser$company;\n        const existingUser = Object.values(allUsers).find(user => user.email === employee.email);\n        if (!existingUser) {\n          return true; // משתמש לא קיים כלל - נוסיף אותו\n        }\n        const isInCompany = (_existingUser$company = existingUser.companyIds) === null || _existingUser$company === void 0 ? void 0 : _existingUser$company.some(company => company.companyId === companyId);\n        return !isInCompany; // אם הוא לא משויך לחברה, נוסיף אותו שוב\n      });\n      for (const employee of newEmployees) {\n        const existingUser = Object.values(allUsers).find(user => user.email === employee.email);\n        if (existingUser) {\n          await updateUserCompanies(existingUser, loggedUser.company);\n          await addEmployeeToCompany(companyId, existingUser.id);\n        } else {\n          const addedEmployee = await addUser(employee);\n          await updateUserCompanies(addedEmployee, loggedUser.company);\n          await addEmployeeToCompany(companyId, addedEmployee.id);\n        }\n      }\n      const updatedUsers = await getUsers();\n      const usersWithIds = Object.entries(updatedUsers).map(([id, user]) => ({\n        id,\n        ...user\n      }));\n      const filteredEmployees = usersWithIds.filter(user => {\n        var _user$companyIds2;\n        return (_user$companyIds2 = user.companyIds) === null || _user$companyIds2 === void 0 ? void 0 : _user$companyIds2.some(company => company.companyId === companyId);\n      });\n      setEmployees(filteredEmployees);\n      toast.success(`${newEmployees.length} employees added successfully!`);\n    } catch (error) {\n      toast.error('Failed to load employees from JSON.');\n      console.error(error);\n    } finally {\n      setIsProcessing(false); // כיבוי ה-Loader\n    }\n  };\n  const handleDeleteAllEmployees = async () => {\n    try {\n      if (!loggedUser || !loggedUser.company) {\n        toast.error('No company information found. Please try again.');\n        return;\n      }\n      setIsProcessing(true); // הפעלת ה-Loader\n\n      const companyId = loggedUser.company.id;\n      const employeesToDelete = employees.filter(employee => employee.role !== 'admin');\n      if (employeesToDelete.length === 0) {\n        toast.info('No employees to delete.');\n        return;\n      }\n      for (const employee of employeesToDelete) {\n        await removeCompanyFromUser(employee.id, companyId);\n        await removeUserFromCompany(companyId, employee.id);\n      }\n      setEmployees(employees.filter(employee => employee.role === 'admin'));\n      toast.success(`${employeesToDelete.length} employees deleted successfully!`);\n    } catch (err) {\n      toast.error('Failed to delete employees.');\n      console.error(err);\n    } finally {\n      setIsProcessing(false); // כיבוי ה-Loader\n    }\n  };\n  const filteredEmployees = employees.filter(employee => {\n    return (employee.name.toLowerCase().startsWith(searchQuery.toLowerCase()) || employee.email.toLowerCase().startsWith(searchQuery.toLowerCase())) && (filterRole === 'all' || employee.role === filterRole);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navbar-placeholder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"employees-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Employees\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search by name or email...\",\n          value: searchQuery,\n          onChange: e => setSearchQuery(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: filterRole,\n          onChange: e => setFilterRole(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"all\",\n            children: \"All Roles\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"employee\",\n            children: \"Employee\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"admin\",\n            children: \"Admin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 17\n      }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading employees...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 21\n      }, this) : error ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"employees-cards\",\n        children: filteredEmployees.map(employee => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `employee-card ${openCards[employee.id] ? 'open' : 'closed'}`,\n          onClick: () => toggleCard(employee.id),\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: employee.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 33\n          }, this), openCards[employee.id] && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"employee-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Email: \", employee.email]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Phone: \", employee.phone]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Role: \", employee.role]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"employee-actions\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"action-button edit\",\n                onClick: e => {\n                  e.stopPropagation();\n                  handleEditClick(employee); // פתיחת מודל העריכה\n                },\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 45\n              }, this), employee.role !== 'admin' && /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"action-button delete\",\n                onClick: e => {\n                  e.stopPropagation();\n                  openConfirmDeleteModal(employee);\n                },\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 49\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 37\n          }, this)]\n        }, employee.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 21\n      }, this), isProcessing && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 34\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"toggle-form-button\",\n        onClick: () => setIsModalOpen(true),\n        children: \"Add New Employee\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"toggle-form-button\",\n        onClick: handleLoadEmployeesFromJSON,\n        children: \"Add Employees from JSON\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"toggle-form-button delete-all\",\n        onClick: handleDeleteAllEmployees,\n        children: \"Delete All Non-Admin Employees\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        isOpen: isConfirmDeleteModalOpen,\n        onRequestClose: closeConfirmDeleteModal,\n        className: \"confirm-delete-modal\",\n        overlayClassName: \"modal-overlay\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Confirm Employee Deletion\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Are you sure you want to remove \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: employeeToDelete === null || employeeToDelete === void 0 ? void 0 : employeeToDelete.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 57\n          }, this), \" from the company?\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"confirm-button\",\n            onClick: handleDeleteConfirmed,\n            children: \"Confirm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"cancel-button\",\n            onClick: closeConfirmDeleteModal,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        isOpen: isModalOpen,\n        onRequestClose: () => setIsModalOpen(false),\n        className: \"modal\",\n        overlayClassName: \"modal-overlay\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Add New Employee\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"addOrEdit-employee-form\",\n          onSubmit: handleAddEmployee,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"name\",\n            value: newEmployee.name,\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Email:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            name: \"email\",\n            value: newEmployee.email,\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Phone:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"phone\",\n            value: newEmployee.phone,\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            name: \"password\",\n            value: newEmployee.password,\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Role:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 404,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"role\",\n            value: newEmployee.role,\n            onChange: handleChange,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"employee\",\n              children: \"Employee\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 406,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"admin\",\n              children: \"Admin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 407,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Add Employee\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => setIsModalOpen(false),\n            className: \"cancel-button\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        isOpen: isEditModalOpen,\n        onRequestClose: () => setIsEditModalOpen(false),\n        className: \"modal\",\n        overlayClassName: \"modal-overlay\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Edit Employee\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"addOrEdit-employee-form\",\n          onSubmit: async e => {\n            e.preventDefault();\n            try {\n              if (editEmployee && editEmployee.id) {\n                // קריאה ל-updateUser עם הפרטים המעודכנים\n                const updatedEmployee = await updateUser(editEmployee.id, {\n                  name: editEmployee.name,\n                  email: editEmployee.email,\n                  phone: editEmployee.phone,\n                  role: editEmployee.role\n                });\n\n                // עדכון רשימת העובדים ב-UI עם הפרטים החדשים\n                setEmployees(prevEmployees => prevEmployees.map(employee => employee.id === updatedEmployee.id ? updatedEmployee : employee));\n                toast.success('Employee updated successfully!');\n              }\n              setIsEditModalOpen(false); // סגירת המודל\n            } catch (err) {\n              toast.error('Failed to update employee. Please try again.');\n              console.error(err);\n            }\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 458,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"name\",\n            value: (editEmployee === null || editEmployee === void 0 ? void 0 : editEmployee.name) || '',\n            onChange: e => setEditEmployee(prev => ({\n              ...prev,\n              name: e.target.value\n            })),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 459,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Email:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 468,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            name: \"email\",\n            value: (editEmployee === null || editEmployee === void 0 ? void 0 : editEmployee.email) || '',\n            onChange: e => setEditEmployee(prev => ({\n              ...prev,\n              email: e.target.value\n            })),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 469,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Phone:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 478,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"phone\",\n            value: (editEmployee === null || editEmployee === void 0 ? void 0 : editEmployee.phone) || '',\n            onChange: e => setEditEmployee(prev => ({\n              ...prev,\n              phone: e.target.value\n            })),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 479,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Role:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 488,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"role\",\n            value: (editEmployee === null || editEmployee === void 0 ? void 0 : editEmployee.role) || '',\n            onChange: e => setEditEmployee(prev => ({\n              ...prev,\n              role: e.target.value\n            })),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"employee\",\n              children: \"Employee\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 496,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"admin\",\n              children: \"Admin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 497,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 489,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Save Changes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 499,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => setIsEditModalOpen(false),\n            className: \"cancel-button\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 500,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 511,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 253,\n    columnNumber: 9\n  }, this);\n}\n_s(EmployeesScreen, \"hfnu25MJcOV48/cLlFm22lPSBT4=\");\n_c = EmployeesScreen;\nexport default EmployeesScreen;\nvar _c;\n$RefreshReg$(_c, \"EmployeesScreen\");","map":{"version":3,"names":["React","useState","useEffect","Modal","toast","ToastContainer","ThreeDots","Navbar","getUsers","removeCompanyFromUser","addUser","updateUserCompanies","updateUser","removeUserFromCompany","addEmployeeToCompany","employeesData","jsxDEV","_jsxDEV","setAppElement","EmployeesScreen","_s","employees","setEmployees","newEmployee","setNewEmployee","name","email","phone","role","password","isLoading","setIsLoading","error","setError","loggedUser","setLoggedUser","isModalOpen","setIsModalOpen","openCards","setOpenCards","editEmployee","setEditEmployee","isEditModalOpen","setIsEditModalOpen","isProcessing","setIsProcessing","isConfirmDeleteModalOpen","setIsConfirmDeleteModalOpen","employeeToDelete","setEmployeeToDelete","searchQuery","setSearchQuery","filterRole","setFilterRole","fetchEmployees","_loggedUser$company","JSON","parse","localStorage","getItem","companyId","company","id","data","usersWithIds","Object","entries","map","user","filteredEmployees","filter","_user$companyIds","companyIds","some","err","openConfirmDeleteModal","employee","closeConfirmDeleteModal","handleDeleteConfirmed","_loggedUser$company2","success","console","handleChange","e","value","target","prev","handleAddEmployee","preventDefault","allUsers","existingUser","values","find","isUserInUI","info","addedEmployee","toggleCard","handleEditClick","handleLoadEmployeesFromJSON","newEmployees","_existingUser$company","isInCompany","updatedUsers","_user$companyIds2","length","handleDeleteAllEmployees","employeesToDelete","toLowerCase","startsWith","children","fileName","_jsxFileName","lineNumber","columnNumber","className","type","placeholder","onChange","onClick","stopPropagation","isOpen","onRequestClose","overlayClassName","onSubmit","required","updatedEmployee","prevEmployees","_c","$RefreshReg$"],"sources":["/Users/dorlevi/IdeaProjects/newShiftWise/client/src/components/EmployeesScreen.js"],"sourcesContent":["// React & state\nimport React, { useState, useEffect } from 'react';\n// UI Components & Libraries\nimport Modal from 'react-modal';\nimport { toast, ToastContainer } from 'react-toastify';\nimport { ThreeDots } from 'react-loader-spinner';\nimport Navbar from '../components/Navbar';\n\nimport 'react-toastify/dist/ReactToastify.css';\nimport { getUsers, removeCompanyFromUser, addUser, updateUserCompanies, updateUser } from '../services/userService';\nimport { removeUserFromCompany, addEmployeeToCompany } from '../services/companyService';\nimport '../styles/EmployeesScreen.css';\nimport '../styles/Navbar.css';\nimport employeesData from '../data/emps.json'; // יש לוודא שהקובץ נמצא בתיקייה data\n\nModal.setAppElement('#root');\n\nfunction EmployeesScreen() {\n    const [employees, setEmployees] = useState([]);\n    const [newEmployee, setNewEmployee] = useState({ name: '', email: '', phone: '', role: 'employee', password: '' });\n    const [isLoading, setIsLoading] = useState(true);\n    const [error, setError] = useState('');\n    const [loggedUser, setLoggedUser] = useState(null);\n    const [isModalOpen, setIsModalOpen] = useState(false);\n    const [openCards, setOpenCards] = useState({});\n    const [editEmployee, setEditEmployee] = useState(null);\n    const [isEditModalOpen, setIsEditModalOpen] = useState(false);\n    const [isProcessing, setIsProcessing] = useState(false);\n    const [isConfirmDeleteModalOpen, setIsConfirmDeleteModalOpen] = useState(false);\n    const [employeeToDelete, setEmployeeToDelete] = useState(null);\n\n    const [searchQuery, setSearchQuery] = useState('');\n    const [filterRole, setFilterRole] = useState('all');\n\n    useEffect(() => {\n        const fetchEmployees = async () => {\n            try {\n                const loggedUser = JSON.parse(localStorage.getItem('user'));\n                setLoggedUser(loggedUser);\n                const companyId = loggedUser?.company?.id;\n\n                if (!companyId) {\n                    setError('No company information found.');\n                    return;\n                }\n\n                const data = await getUsers();\n                const usersWithIds = data ? Object.entries(data).map(([id, user]) => ({ id, ...user })) : [];\n                const filteredEmployees = usersWithIds.filter((user) =>\n                    user.companyIds?.some((company) => company.companyId === companyId)\n                );\n\n                setEmployees(filteredEmployees);\n            } catch (err) {\n                setError('Failed to fetch employees.');\n            } finally {\n                setIsLoading(false);\n            }\n        };\n\n        fetchEmployees();\n    }, []);\n\n    const openConfirmDeleteModal = (employee) => {\n        setEmployeeToDelete(employee);\n        setIsConfirmDeleteModalOpen(true);\n    };\n\n    const closeConfirmDeleteModal = () => {\n        setIsConfirmDeleteModalOpen(false);\n        setEmployeeToDelete(null);\n    };\n\n    const handleDeleteConfirmed = async () => {\n        if (!employeeToDelete) return;\n        try {\n            const companyId = loggedUser?.company?.id;\n\n            if (!companyId) {\n                toast.error('No company information found. Please try again.');\n                return;\n            }\n\n            await removeCompanyFromUser(employeeToDelete.id, companyId);\n            await removeUserFromCompany(companyId, employeeToDelete.id);\n\n            setEmployees(employees.filter((employee) => employee.id !== employeeToDelete.id));\n            toast.success('Employee deleted successfully!');\n        } catch (err) {\n            toast.error('Failed to delete employee.');\n            console.error(err);\n        } finally {\n            closeConfirmDeleteModal();\n        }\n    };\n\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        setNewEmployee((prev) => ({ ...prev, [name]: value }));\n    };\n\n    const handleAddEmployee = async (e) => {\n        e.preventDefault();\n        try {\n            const company = loggedUser?.company;\n\n            if (!company) {\n                toast.error('No company information found. Please try again.');\n                return;\n            }\n\n            const allUsers = await getUsers();\n            const existingUser = Object.values(allUsers).find((user) => user.email === newEmployee.email);\n\n            if (existingUser) {\n                await updateUserCompanies(existingUser, company);\n                await addEmployeeToCompany(company.id, existingUser.id);\n\n                const isUserInUI = employees.some((employee) => employee.id === existingUser.id);\n                if (!isUserInUI) {\n                    setEmployees((prev) => [...prev, existingUser]);\n                }\n\n                toast.info('User already exists, added to the company successfully.');\n            } else {\n                const addedEmployee = await addUser(newEmployee);\n                await updateUserCompanies(addedEmployee, company);\n                await addEmployeeToCompany(company.id, addedEmployee.id);\n\n                setEmployees((prev) => [...prev, { id: addedEmployee.id, ...addedEmployee }]);\n                toast.success('New user added successfully!');\n            }\n\n            setNewEmployee({ name: '', email: '', phone: '', role: 'employee', password: '' });\n            setIsModalOpen(false);\n        } catch (err) {\n            toast.error('Failed to add employee.');\n            console.error(err);\n        }\n    };\n\n    const toggleCard = (id) => {\n        setOpenCards((prev) => ({\n            ...prev,\n            [id]: !prev[id],\n        }));\n    };\n\n    const handleEditClick = (employee) => {\n        setEditEmployee(employee); // הגדרת העובד הנבחר לעריכה\n        setIsEditModalOpen(true); // פתיחת המודל\n    };\n\n\n    const handleLoadEmployeesFromJSON = async () => {\n        try {\n            if (!loggedUser || !loggedUser.company) {\n                toast.error('No company information found. Please try again.');\n                return;\n            }\n\n            setIsProcessing(true); // הפעלת ה-Loader\n\n            const companyId = loggedUser.company.id;\n            const allUsers = await getUsers();\n\n            const newEmployees = employeesData.filter((employee) => {\n                const existingUser = Object.values(allUsers).find((user) => user.email === employee.email);\n\n                if (!existingUser) {\n                    return true; // משתמש לא קיים כלל - נוסיף אותו\n                }\n\n                const isInCompany = existingUser.companyIds?.some((company) => company.companyId === companyId);\n                return !isInCompany; // אם הוא לא משויך לחברה, נוסיף אותו שוב\n            });\n\n            for (const employee of newEmployees) {\n                const existingUser = Object.values(allUsers).find((user) => user.email === employee.email);\n\n                if (existingUser) {\n                    await updateUserCompanies(existingUser, loggedUser.company);\n                    await addEmployeeToCompany(companyId, existingUser.id);\n                } else {\n                    const addedEmployee = await addUser(employee);\n                    await updateUserCompanies(addedEmployee, loggedUser.company);\n                    await addEmployeeToCompany(companyId, addedEmployee.id);\n                }\n            }\n\n            const updatedUsers = await getUsers();\n            const usersWithIds = Object.entries(updatedUsers).map(([id, user]) => ({ id, ...user }));\n            const filteredEmployees = usersWithIds.filter((user) =>\n                user.companyIds?.some((company) => company.companyId === companyId)\n            );\n\n            setEmployees(filteredEmployees);\n            toast.success(`${newEmployees.length} employees added successfully!`);\n        } catch (error) {\n            toast.error('Failed to load employees from JSON.');\n            console.error(error);\n        } finally {\n            setIsProcessing(false); // כיבוי ה-Loader\n        }\n    };\n\n\n\n    const handleDeleteAllEmployees = async () => {\n        try {\n            if (!loggedUser || !loggedUser.company) {\n                toast.error('No company information found. Please try again.');\n                return;\n            }\n\n            setIsProcessing(true); // הפעלת ה-Loader\n\n            const companyId = loggedUser.company.id;\n            const employeesToDelete = employees.filter(employee => employee.role !== 'admin');\n\n            if (employeesToDelete.length === 0) {\n                toast.info('No employees to delete.');\n                return;\n            }\n\n            for (const employee of employeesToDelete) {\n                await removeCompanyFromUser(employee.id, companyId);\n                await removeUserFromCompany(companyId, employee.id);\n            }\n\n            setEmployees(employees.filter(employee => employee.role === 'admin'));\n            toast.success(`${employeesToDelete.length} employees deleted successfully!`);\n        } catch (err) {\n            toast.error('Failed to delete employees.');\n            console.error(err);\n        } finally {\n            setIsProcessing(false); // כיבוי ה-Loader\n        }\n    };\n\n    const filteredEmployees = employees.filter((employee) => {\n        return (\n            (employee.name.toLowerCase().startsWith(searchQuery.toLowerCase()) ||\n                employee.email.toLowerCase().startsWith(searchQuery.toLowerCase())) &&\n            (filterRole === 'all' || employee.role === filterRole)\n        );\n    });\n\n\n\n    return (\n        <div>\n            <Navbar />\n            <div className=\"navbar-placeholder\"></div>\n            <div className=\"employees-container\">\n                <h1>Employees</h1>\n\n                <div className=\"search-container\">\n                    <input\n                        type=\"text\"\n                        placeholder=\"Search by name or email...\"\n                        value={searchQuery}\n                        onChange={(e) => setSearchQuery(e.target.value)}\n                    />\n                    <select value={filterRole} onChange={(e) => setFilterRole(e.target.value)}>\n                        <option value=\"all\">All Roles</option>\n                        <option value=\"employee\">Employee</option>\n                        <option value=\"admin\">Admin</option>\n                    </select>\n                </div>\n\n                {isLoading ? (\n                    <p>Loading employees...</p>\n                ) : error ? (\n                    <p className=\"error\">{error}</p>\n                ) : (\n                    <div className=\"employees-cards\">\n                        {filteredEmployees.map((employee) => (\n\n                            <div\n                                key={employee.id}\n                                className={`employee-card ${openCards[employee.id] ? 'open' : 'closed'}`}\n                                onClick={() => toggleCard(employee.id)}\n                            >\n                                <h3>{employee.name}</h3>\n                                {openCards[employee.id] && (\n                                    <div className=\"employee-details\">\n                                        <p>Email: {employee.email}</p>\n                                        <p>Phone: {employee.phone}</p>\n                                        <p>Role: {employee.role}</p>\n                                        <div className=\"employee-actions\">\n                                            <button\n                                                className=\"action-button edit\"\n                                                onClick={(e) => {\n                                                    e.stopPropagation();\n                                                    handleEditClick(employee); // פתיחת מודל העריכה\n                                                }}\n                                            >\n                                                Edit\n                                            </button>\n\n                                            {employee.role !== 'admin' && (\n                                                <button\n                                                    className=\"action-button delete\"\n                                                    onClick={(e) => {\n                                                        e.stopPropagation();\n                                                        openConfirmDeleteModal(employee);\n                                                    }}\n                                                >\n                                                    Delete\n                                                </button>\n\n                                            )}\n\n                                        </div>\n                                    </div>\n                                )}\n                            </div>\n                        ))}\n\n                    </div>\n                )}\n\n                {isProcessing && <div className=\"loading-spinner\"></div>}\n\n                <button\n                    className=\"toggle-form-button\"\n                    onClick={() => setIsModalOpen(true)}\n                >\n                    Add New Employee\n                </button>\n                {/* 🔹 כפתור חדש להוספת עובדים מקובץ JSON */}\n                <button className=\"toggle-form-button\" onClick={handleLoadEmployeesFromJSON}>\n                    Add Employees from JSON\n                </button>\n                <button\n                    className=\"toggle-form-button delete-all\"\n                    onClick={handleDeleteAllEmployees}\n                >\n                    Delete All Non-Admin Employees\n                </button>\n                <Modal\n                    isOpen={isConfirmDeleteModalOpen}\n                    onRequestClose={closeConfirmDeleteModal}\n                    className=\"confirm-delete-modal\"\n                    overlayClassName=\"modal-overlay\"\n                >\n                    <h2>Confirm Employee Deletion</h2>\n                    <p>\n                        Are you sure you want to remove <strong>{employeeToDelete?.name}</strong> from the company?\n                    </p>\n                    <div className=\"modal-buttons\">\n                        <button className=\"confirm-button\" onClick={handleDeleteConfirmed}>\n                            Confirm\n                        </button>\n                        <button className=\"cancel-button\" onClick={closeConfirmDeleteModal}>\n                            Cancel\n                        </button>\n                    </div>\n                </Modal>\n\n\n                <Modal\n                    isOpen={isModalOpen}\n                    onRequestClose={() => setIsModalOpen(false)}\n                    className=\"modal\"\n                    overlayClassName=\"modal-overlay\"\n                >\n                    <h3>Add New Employee</h3>\n                    <form className=\"addOrEdit-employee-form\" onSubmit={handleAddEmployee}>\n                        <label>Name:</label>\n                        <input\n                            type=\"text\"\n                            name=\"name\"\n                            value={newEmployee.name}\n                            onChange={handleChange}\n                            required\n                        />\n                        <label>Email:</label>\n                        <input\n                            type=\"email\"\n                            name=\"email\"\n                            value={newEmployee.email}\n                            onChange={handleChange}\n                            required\n                        />\n                        <label>Phone:</label>\n                        <input\n                            type=\"text\"\n                            name=\"phone\"\n                            value={newEmployee.phone}\n                            onChange={handleChange}\n                            required\n                        />\n                        <label>Password:</label>\n                        <input\n                            type=\"password\"\n                            name=\"password\"\n                            value={newEmployee.password}\n                            onChange={handleChange}\n                            required\n                        />\n                        <label>Role:</label>\n                        <select name=\"role\" value={newEmployee.role} onChange={handleChange}>\n                            <option value=\"employee\">Employee</option>\n                            <option value=\"admin\">Admin</option>\n                        </select>\n                        <button type=\"submit\">Add Employee</button>\n                        <button\n                            type=\"button\"\n                            onClick={() => setIsModalOpen(false)}\n                            className=\"cancel-button\"\n                        >\n                            Cancel\n                        </button>\n                    </form>\n                </Modal>\n                <Modal\n                    isOpen={isEditModalOpen}\n                    onRequestClose={() => setIsEditModalOpen(false)}\n                    className=\"modal\"\n                    overlayClassName=\"modal-overlay\"\n                >\n                    <h3>Edit Employee</h3>\n                    <form\n                        className=\"addOrEdit-employee-form\"\n                        onSubmit={async (e) => {\n                            e.preventDefault();\n                            try {\n                                if (editEmployee && editEmployee.id) {\n                                    // קריאה ל-updateUser עם הפרטים המעודכנים\n                                    const updatedEmployee = await updateUser(editEmployee.id, {\n                                        name: editEmployee.name,\n                                        email: editEmployee.email,\n                                        phone: editEmployee.phone,\n                                        role: editEmployee.role,\n                                    });\n\n                                    // עדכון רשימת העובדים ב-UI עם הפרטים החדשים\n                                    setEmployees((prevEmployees) =>\n                                        prevEmployees.map((employee) =>\n                                            employee.id === updatedEmployee.id ? updatedEmployee : employee\n                                        )\n                                    );\n\n                                    toast.success('Employee updated successfully!');\n                                }\n\n                                setIsEditModalOpen(false); // סגירת המודל\n                            } catch (err) {\n                                toast.error('Failed to update employee. Please try again.');\n                                console.error(err);\n                            }\n                        }}\n                    >\n\n                        <label>Name:</label>\n                        <input\n                            type=\"text\"\n                            name=\"name\"\n                            value={editEmployee?.name || ''}\n                            onChange={(e) =>\n                                setEditEmployee((prev) => ({ ...prev, name: e.target.value }))\n                            }\n                            required\n                        />\n                        <label>Email:</label>\n                        <input\n                            type=\"email\"\n                            name=\"email\"\n                            value={editEmployee?.email || ''}\n                            onChange={(e) =>\n                                setEditEmployee((prev) => ({ ...prev, email: e.target.value }))\n                            }\n                            required\n                        />\n                        <label>Phone:</label>\n                        <input\n                            type=\"text\"\n                            name=\"phone\"\n                            value={editEmployee?.phone || ''}\n                            onChange={(e) =>\n                                setEditEmployee((prev) => ({ ...prev, phone: e.target.value }))\n                            }\n                            required\n                        />\n                        <label>Role:</label>\n                        <select\n                            name=\"role\"\n                            value={editEmployee?.role || ''}\n                            onChange={(e) =>\n                                setEditEmployee((prev) => ({ ...prev, role: e.target.value }))\n                            }\n                        >\n                            <option value=\"employee\">Employee</option>\n                            <option value=\"admin\">Admin</option>\n                        </select>\n                        <button type=\"submit\">Save Changes</button>\n                        <button\n                            type=\"button\"\n                            onClick={() => setIsEditModalOpen(false)}\n                            className=\"cancel-button\"\n                        >\n                            Cancel\n                        </button>\n                    </form>\n                </Modal>\n\n            </div>\n            <ToastContainer />\n        </div>\n    );\n}\n\nexport default EmployeesScreen;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}